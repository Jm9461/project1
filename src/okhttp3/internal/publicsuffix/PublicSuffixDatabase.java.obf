package okhttp3.internal.publicsuffix;

import e.f0.c;
import java.net.IDN;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicBoolean;

public final class PublicSuffixDatabase
{
  private static final byte[] e = { 42 };
  private static final String[] f = new String[0];
  private static final String[] g = { "*" };
  private static final PublicSuffixDatabase h = new PublicSuffixDatabase();
  private final AtomicBoolean a = new AtomicBoolean(false);
  private final CountDownLatch b = new CountDownLatch(1);
  private byte[] c;
  private byte[] d;
  
  public PublicSuffixDatabase() {}
  
  private static String a(byte[] paramArrayOfByte, byte[][] paramArrayOfByte1, int paramInt)
  {
    int i = 0;
    int n = paramArrayOfByte.length;
    if (i < n)
    {
      int j = (i + n) / 2;
      while ((j > -1) && (paramArrayOfByte[j] != 10)) {
        j -= 1;
      }
      int i4 = j + 1;
      int i1 = 1;
      while (paramArrayOfByte[(i4 + i1)] != 10) {
        i1 += 1;
      }
      int i5 = i4 + i1 - i4;
      int i2 = paramInt;
      int k = 0;
      j = 0;
      int m = 0;
      label314:
      label330:
      label345:
      for (;;)
      {
        int i3;
        if (m != 0)
        {
          i3 = 46;
          m = 0;
        }
        else
        {
          i3 = paramArrayOfByte1[i2][k] & 0xFF;
        }
        i3 -= (paramArrayOfByte[(i4 + j)] & 0xFF);
        if (i3 == 0)
        {
          j += 1;
          k += 1;
          if (j != i5)
          {
            if (paramArrayOfByte1[i2].length != k) {
              break label345;
            }
            if (i2 != paramArrayOfByte1.length - 1) {
              break label330;
            }
          }
        }
        if (i3 < 0)
        {
          j = i4 - 1;
        }
        else if (i3 > 0)
        {
          i = i4 + i1 + 1;
          j = n;
        }
        else
        {
          m = i5 - j;
          k = paramArrayOfByte1[i2].length - k;
          j = i2 + 1;
          while (j < paramArrayOfByte1.length)
          {
            k += paramArrayOfByte1[j].length;
            j += 1;
          }
          if (k < m)
          {
            j = i4 - 1;
          }
          else
          {
            if (k <= m) {
              break label314;
            }
            i = i4 + i1 + 1;
            j = n;
          }
        }
        n = j;
        break;
        return new String(paramArrayOfByte, i4, i5, c.d);
        i2 += 1;
        m = 1;
        k = -1;
      }
    }
    return null;
  }
  
  public static PublicSuffixDatabase a()
  {
    return h;
  }
  
  private String[] a(String[] paramArrayOfString)
  {
    if ((!a.get()) && (a.compareAndSet(false, true))) {
      c();
    } else {
      try
      {
        b.await();
      }
      catch (InterruptedException localInterruptedException) {}
    }
    try
    {
      if (c != null)
      {
        byte[][] arrayOfByte1 = new byte[paramArrayOfString.length][];
        int i = 0;
        while (i < paramArrayOfString.length)
        {
          arrayOfByte1[i] = paramArrayOfString[i].getBytes(c.d);
          i += 1;
        }
        Object localObject1 = null;
        i = 0;
        for (;;)
        {
          paramArrayOfString = (String[])localObject1;
          if (i >= arrayOfByte1.length) {
            break;
          }
          paramArrayOfString = a(c, arrayOfByte1, i);
          if (paramArrayOfString != null) {
            break;
          }
          i += 1;
        }
        Object localObject2 = null;
        localObject1 = localObject2;
        if (arrayOfByte1.length > 1)
        {
          arrayOfByte = (byte[][])arrayOfByte1.clone();
          i = 0;
          for (;;)
          {
            localObject1 = localObject2;
            if (i >= arrayOfByte.length - 1) {
              break;
            }
            arrayOfByte[i] = e;
            localObject1 = a(c, arrayOfByte, i);
            if (localObject1 != null) {
              break;
            }
            i += 1;
          }
        }
        byte[][] arrayOfByte = null;
        localObject2 = arrayOfByte;
        if (localObject1 != null)
        {
          i = 0;
          for (;;)
          {
            localObject2 = arrayOfByte;
            if (i >= arrayOfByte1.length - 1) {
              break;
            }
            localObject2 = a(d, arrayOfByte1, i);
            if (localObject2 != null) {
              break;
            }
            i += 1;
          }
        }
        if (localObject2 != null)
        {
          paramArrayOfString = new StringBuilder();
          paramArrayOfString.append("!");
          paramArrayOfString.append((String)localObject2);
          return paramArrayOfString.toString().split("\\.");
        }
        if ((paramArrayOfString == null) && (localObject1 == null)) {
          return g;
        }
        if (paramArrayOfString != null) {
          paramArrayOfString = paramArrayOfString.split("\\.");
        } else {
          paramArrayOfString = f;
        }
        if (localObject1 != null) {
          localObject1 = ((String)localObject1).split("\\.");
        } else {
          localObject1 = f;
        }
        if (paramArrayOfString.length > localObject1.length) {
          return paramArrayOfString;
        }
        return localObject1;
      }
      throw new IllegalStateException("Unable to load publicsuffixes.gz resource from the classpath.");
    }
    finally {}
    for (;;)
    {
      throw paramArrayOfString;
    }
  }
  
  /* Error */
  private void b()
  {
    // Byte code:
    //   0: ldc 2
    //   2: ldc 121
    //   4: invokevirtual 127	java/lang/Class:getResourceAsStream	(Ljava/lang/String;)Ljava/io/InputStream;
    //   7: astore_1
    //   8: aload_1
    //   9: ifnonnull +4 -> 13
    //   12: return
    //   13: new 129	f/j
    //   16: dup
    //   17: aload_1
    //   18: invokestatic 134	f/l:a	(Ljava/io/InputStream;)Lf/s;
    //   21: invokespecial 137	f/j:<init>	(Lf/s;)V
    //   24: invokestatic 140	f/l:a	(Lf/s;)Lf/e;
    //   27: astore_1
    //   28: aload_1
    //   29: invokeinterface 146 1 0
    //   34: newarray byte
    //   36: astore_2
    //   37: aload_1
    //   38: aload_2
    //   39: invokeinterface 150 2 0
    //   44: aload_1
    //   45: invokeinterface 146 1 0
    //   50: newarray byte
    //   52: astore_3
    //   53: aload_1
    //   54: aload_3
    //   55: invokeinterface 150 2 0
    //   60: aload_1
    //   61: invokestatic 153	e/f0/c:a	(Ljava/io/Closeable;)V
    //   64: aload_0
    //   65: monitorenter
    //   66: aload_0
    //   67: aload_2
    //   68: putfield 78	okhttp3/internal/publicsuffix/PublicSuffixDatabase:c	[B
    //   71: aload_0
    //   72: aload_3
    //   73: putfield 93	okhttp3/internal/publicsuffix/PublicSuffixDatabase:d	[B
    //   76: aload_0
    //   77: monitorexit
    //   78: aload_0
    //   79: getfield 50	okhttp3/internal/publicsuffix/PublicSuffixDatabase:b	Ljava/util/concurrent/CountDownLatch;
    //   82: invokevirtual 156	java/util/concurrent/CountDownLatch:countDown	()V
    //   85: return
    //   86: astore_1
    //   87: aload_0
    //   88: monitorexit
    //   89: aload_1
    //   90: athrow
    //   91: astore_2
    //   92: aload_1
    //   93: invokestatic 153	e/f0/c:a	(Ljava/io/Closeable;)V
    //   96: aload_2
    //   97: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	98	0	this	PublicSuffixDatabase
    //   7	54	1	localObject1	Object
    //   86	7	1	localCloseable	java.io.Closeable
    //   36	32	2	arrayOfByte1	byte[]
    //   91	6	2	localObject2	Object
    //   52	21	3	arrayOfByte2	byte[]
    // Exception table:
    //   from	to	target	type
    //   66	78	86	finally
    //   87	89	86	finally
    //   28	60	91	finally
  }
  
  /* Error */
  private void c()
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_1
    //   2: aload_0
    //   3: invokespecial 162	okhttp3/internal/publicsuffix/PublicSuffixDatabase:b	()V
    //   6: iload_1
    //   7: ifeq +9 -> 16
    //   10: invokestatic 168	java/lang/Thread:currentThread	()Ljava/lang/Thread;
    //   13: invokevirtual 171	java/lang/Thread:interrupt	()V
    //   16: return
    //   17: astore_2
    //   18: goto +25 -> 43
    //   21: astore_2
    //   22: invokestatic 176	e/f0/k/f:d	()Le/f0/k/f;
    //   25: iconst_5
    //   26: ldc -78
    //   28: aload_2
    //   29: invokevirtual 181	e/f0/k/f:a	(ILjava/lang/String;Ljava/lang/Throwable;)V
    //   32: iload_1
    //   33: ifeq +9 -> 42
    //   36: invokestatic 168	java/lang/Thread:currentThread	()Ljava/lang/Thread;
    //   39: invokevirtual 171	java/lang/Thread:interrupt	()V
    //   42: return
    //   43: iload_1
    //   44: ifeq +9 -> 53
    //   47: invokestatic 168	java/lang/Thread:currentThread	()Ljava/lang/Thread;
    //   50: invokevirtual 171	java/lang/Thread:interrupt	()V
    //   53: aload_2
    //   54: athrow
    //   55: astore_2
    //   56: iconst_1
    //   57: istore_1
    //   58: goto -56 -> 2
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	61	0	this	PublicSuffixDatabase
    //   1	57	1	i	int
    //   17	1	2	localObject	Object
    //   21	33	2	localIOException	java.io.IOException
    //   55	1	2	localInterruptedIOException	java.io.InterruptedIOException
    // Exception table:
    //   from	to	target	type
    //   2	6	17	finally
    //   22	32	17	finally
    //   2	6	21	java/io/IOException
    //   2	6	55	java/io/InterruptedIOException
  }
  
  public String a(String paramString)
  {
    if (paramString != null)
    {
      Object localObject = IDN.toUnicode(paramString).split("\\.");
      String[] arrayOfString = a((String[])localObject);
      if ((localObject.length == arrayOfString.length) && (arrayOfString[0].charAt(0) != '!')) {
        return null;
      }
      int i;
      if (arrayOfString[0].charAt(0) == '!') {
        i = localObject.length - arrayOfString.length;
      } else {
        i = localObject.length - (arrayOfString.length + 1);
      }
      localObject = new StringBuilder();
      paramString = paramString.split("\\.");
      while (i < paramString.length)
      {
        ((StringBuilder)localObject).append(paramString[i]);
        ((StringBuilder)localObject).append('.');
        i += 1;
      }
      ((StringBuilder)localObject).deleteCharAt(((StringBuilder)localObject).length() - 1);
      return ((StringBuilder)localObject).toString();
    }
    paramString = new NullPointerException("domain == null");
    for (;;)
    {
      throw paramString;
    }
  }
}
