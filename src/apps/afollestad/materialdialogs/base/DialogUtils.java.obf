package b.a.a.r;

import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.content.res.Resources.Theme;
import android.content.res.TypedArray;
import android.graphics.Color;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.util.TypedValue;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import b.a.a.e;
import b.a.a.f;
import b.a.a.f.d;

public class a
{
  public static int a(int paramInt, float paramFloat)
  {
    return Color.argb(Math.round(Color.alpha(paramInt) * paramFloat), Color.red(paramInt), Color.green(paramInt), Color.blue(paramInt));
  }
  
  public static int a(Context paramContext)
  {
    int i;
    if (a(e(paramContext, 16842806))) {
      i = -16777216;
    } else {
      i = -1;
    }
    return a(i, 0.3F);
  }
  
  public static int a(Context paramContext, int paramInt1, int paramInt2)
  {
    paramContext = paramContext.getTheme().obtainStyledAttributes(new int[] { paramInt1 });
    try
    {
      paramInt1 = paramContext.getColor(0, paramInt2);
      return paramInt1;
    }
    finally
    {
      paramContext.recycle();
    }
  }
  
  private static int a(e paramE)
  {
    int i = b.a[paramE.ordinal()];
    if (i != 1)
    {
      if (i != 2) {
        return 0;
      }
      return 2;
    }
    return 1;
  }
  
  public static ColorStateList a(Context paramContext, int paramInt)
  {
    TypedValue localTypedValue = new TypedValue();
    paramContext.getResources().getValue(paramInt, localTypedValue, true);
    int i = type;
    if ((i >= 28) && (i <= 31)) {
      return b(paramContext, data);
    }
    if (Build.VERSION.SDK_INT <= 22) {
      return paramContext.getResources().getColorStateList(paramInt);
    }
    return paramContext.getColorStateList(paramInt);
  }
  
  public static ColorStateList a(Context paramContext, int paramInt, ColorStateList paramColorStateList)
  {
    TypedArray localTypedArray = paramContext.getTheme().obtainStyledAttributes(new int[] { paramInt });
    try
    {
      TypedValue localTypedValue = localTypedArray.peekValue(0);
      if (localTypedValue == null) {
        return paramColorStateList;
      }
      if ((type >= 28) && (type <= 31))
      {
        paramContext = b(paramContext, data);
        return paramContext;
      }
      paramContext = localTypedArray.getColorStateList(0);
      if (paramContext != null) {
        return paramContext;
      }
      return paramColorStateList;
    }
    finally
    {
      localTypedArray.recycle();
    }
  }
  
  private static Drawable a(Context paramContext, int paramInt, Drawable paramDrawable)
  {
    TypedArray localTypedArray = paramContext.getTheme().obtainStyledAttributes(new int[] { paramInt });
    try
    {
      Drawable localDrawable = localTypedArray.getDrawable(0);
      paramContext = localDrawable;
      if (localDrawable == null)
      {
        paramContext = localDrawable;
        if (paramDrawable != null) {
          paramContext = paramDrawable;
        }
      }
      return paramContext;
    }
    finally
    {
      localTypedArray.recycle();
    }
  }
  
  public static e a(Context paramContext, int paramInt, e paramE)
  {
    paramContext = paramContext.getTheme().obtainStyledAttributes(new int[] { paramInt });
    try
    {
      paramInt = paramContext.getInt(0, a(paramE));
      if (paramInt != 1)
      {
        if (paramInt != 2)
        {
          paramE = e.c;
          return paramE;
        }
        paramE = e.e;
        return paramE;
      }
      paramE = e.d;
      return paramE;
    }
    finally
    {
      paramContext.recycle();
    }
  }
  
  public static void a(DialogInterface paramDialogInterface, f.d paramD)
  {
    f localF = (f)paramDialogInterface;
    if (localF.e() == null) {
      return;
    }
    paramD = (InputMethodManager)paramD.b().getSystemService("input_method");
    if (paramD != null)
    {
      View localView = localF.getCurrentFocus();
      paramDialogInterface = null;
      if (localView != null) {
        paramDialogInterface = localView.getWindowToken();
      } else if (localF.g() != null) {
        paramDialogInterface = localF.g().getWindowToken();
      }
      if (paramDialogInterface != null) {
        paramD.hideSoftInputFromWindow(paramDialogInterface, 0);
      }
    }
  }
  
  public static void a(View paramView, Drawable paramDrawable)
  {
    if (Build.VERSION.SDK_INT < 16)
    {
      paramView.setBackgroundDrawable(paramDrawable);
      return;
    }
    paramView.setBackground(paramDrawable);
  }
  
  public static boolean a(int paramInt)
  {
    double d1 = Color.red(paramInt);
    Double.isNaN(d1);
    double d2 = Color.green(paramInt);
    Double.isNaN(d2);
    double d3 = Color.blue(paramInt);
    Double.isNaN(d3);
    return 1.0D - (d1 * 0.299D + d2 * 0.587D + d3 * 0.114D) / 255.0D >= 0.5D;
  }
  
  public static boolean a(Context paramContext, int paramInt, boolean paramBoolean)
  {
    paramContext = paramContext.getTheme().obtainStyledAttributes(new int[] { paramInt });
    try
    {
      paramBoolean = paramContext.getBoolean(0, paramBoolean);
      return paramBoolean;
    }
    finally
    {
      paramContext.recycle();
    }
  }
  
  public static <T> boolean a(T paramT, T[] paramArrayOfT)
  {
    if (paramArrayOfT != null)
    {
      if (paramArrayOfT.length == 0) {
        return false;
      }
      int j = paramArrayOfT.length;
      int i = 0;
      while (i < j)
      {
        if (paramArrayOfT[i].equals(paramT)) {
          return true;
        }
        i += 1;
      }
      return false;
    }
    return false;
  }
  
  private static int b(Context paramContext, int paramInt1, int paramInt2)
  {
    paramContext = paramContext.getTheme().obtainStyledAttributes(new int[] { paramInt1 });
    try
    {
      paramInt1 = paramContext.getDimensionPixelSize(0, paramInt2);
      return paramInt1;
    }
    finally
    {
      paramContext.recycle();
    }
  }
  
  public static ColorStateList b(Context paramContext, int paramInt)
  {
    int j = e(paramContext, 16842806);
    int i = paramInt;
    if (paramInt == 0) {
      i = j;
    }
    paramInt = a(i, 0.4F);
    return new ColorStateList(new int[][] { { -16842910 }, new int[0] }, new int[] { paramInt, i });
  }
  
  public static void b(DialogInterface paramDialogInterface, final f.d paramD)
  {
    paramDialogInterface = (f)paramDialogInterface;
    if (paramDialogInterface.e() == null) {
      return;
    }
    paramDialogInterface.e().post(new a(paramDialogInterface, paramD));
  }
  
  public static int c(Context paramContext, int paramInt)
  {
    return android.support.v4.content.a.a(paramContext, paramInt);
  }
  
  public static boolean d(Context paramContext, int paramInt)
  {
    return a(paramContext, paramInt, false);
  }
  
  public static int e(Context paramContext, int paramInt)
  {
    return a(paramContext, paramInt, 0);
  }
  
  public static int f(Context paramContext, int paramInt)
  {
    return b(paramContext, paramInt, -1);
  }
  
  public static Drawable g(Context paramContext, int paramInt)
  {
    return a(paramContext, paramInt, null);
  }
  
  public static String h(Context paramContext, int paramInt)
  {
    TypedValue localTypedValue = new TypedValue();
    paramContext.getTheme().resolveAttribute(paramInt, localTypedValue, true);
    return (String)string;
  }
  
  static final class a
    implements Runnable
  {
    a(f paramF, f.d paramD) {}
    
    public void run()
    {
      c.e().requestFocus();
      InputMethodManager localInputMethodManager = (InputMethodManager)paramD.b().getSystemService("input_method");
      if (localInputMethodManager != null) {
        localInputMethodManager.showSoftInput(c.e(), 1);
      }
    }
  }
}
