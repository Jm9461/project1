package b.a.a;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.res.ColorStateList;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Build.VERSION;
import android.support.v7.widget.RecyclerView.d0;
import android.support.v7.widget.RecyclerView.g;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import com.afollestad.materialdialogs.internal.c;
import java.util.ArrayList;
import java.util.List;

class a
  extends RecyclerView.g<b>
{
  private final f c;
  private final int d;
  private final e e;
  private c f;
  
  a(f paramF, int paramInt)
  {
    c = paramF;
    d = paramInt;
    e = e.f;
  }
  
  @TargetApi(17)
  private void a(ViewGroup paramViewGroup)
  {
    ((LinearLayout)paramViewGroup).setGravity(e.a() | 0x10);
    if (paramViewGroup.getChildCount() == 2)
    {
      CompoundButton localCompoundButton;
      TextView localTextView;
      if ((e == e.e) && (!e()) && ((paramViewGroup.getChildAt(0) instanceof CompoundButton)))
      {
        localCompoundButton = (CompoundButton)paramViewGroup.getChildAt(0);
        paramViewGroup.removeView(localCompoundButton);
        localTextView = (TextView)paramViewGroup.getChildAt(0);
        paramViewGroup.removeView(localTextView);
        localTextView.setPadding(localTextView.getPaddingRight(), localTextView.getPaddingTop(), localTextView.getPaddingLeft(), localTextView.getPaddingBottom());
        paramViewGroup.addView(localTextView);
        paramViewGroup.addView(localCompoundButton);
        return;
      }
      if ((e == e.c) && (e()) && ((paramViewGroup.getChildAt(1) instanceof CompoundButton)))
      {
        localCompoundButton = (CompoundButton)paramViewGroup.getChildAt(1);
        paramViewGroup.removeView(localCompoundButton);
        localTextView = (TextView)paramViewGroup.getChildAt(0);
        paramViewGroup.removeView(localTextView);
        localTextView.setPadding(localTextView.getPaddingRight(), localTextView.getPaddingTop(), localTextView.getPaddingRight(), localTextView.getPaddingBottom());
        paramViewGroup.addView(localCompoundButton);
        paramViewGroup.addView(localTextView);
      }
    }
  }
  
  @TargetApi(17)
  private boolean e()
  {
    int i = Build.VERSION.SDK_INT;
    boolean bool = false;
    if (i < 17) {
      return false;
    }
    if (c.c().b().getResources().getConfiguration().getLayoutDirection() == 1) {
      bool = true;
    }
    return bool;
  }
  
  public int a()
  {
    ArrayList localArrayList = c.e.l;
    if (localArrayList != null) {
      return localArrayList.size();
    }
    return 0;
  }
  
  public void a(b paramB, int paramInt)
  {
    View localView = c;
    boolean bool2 = b.a.a.r.a.a(Integer.valueOf(paramInt), c.e.Q);
    int i;
    if (bool2) {
      i = b.a.a.r.a.a(c.e.h0, 0.4F);
    } else {
      i = c.e.h0;
    }
    c.setEnabled(bool2 ^ true);
    int j = a.a[c.u.ordinal()];
    boolean bool1;
    f.d localD;
    ColorStateList localColorStateList;
    if (j != 1)
    {
      if (j == 2)
      {
        localObject = (CheckBox)v;
        bool1 = c.v.contains(Integer.valueOf(paramInt));
        localD = c.e;
        localColorStateList = u;
        if (localColorStateList != null) {
          c.a((CheckBox)localObject, localColorStateList);
        } else {
          c.a((CheckBox)localObject, t);
        }
        ((CheckBox)localObject).setChecked(bool1);
        ((CheckBox)localObject).setEnabled(bool2 ^ true);
      }
    }
    else
    {
      localObject = (RadioButton)v;
      if (c.e.O == paramInt) {
        bool1 = true;
      } else {
        bool1 = false;
      }
      localD = c.e;
      localColorStateList = u;
      if (localColorStateList != null) {
        c.a((RadioButton)localObject, localColorStateList);
      } else {
        c.a((RadioButton)localObject, t);
      }
      ((RadioButton)localObject).setChecked(bool1);
      ((RadioButton)localObject).setEnabled(bool2 ^ true);
    }
    w.setText((CharSequence)c.e.l.get(paramInt));
    w.setTextColor(i);
    Object localObject = c;
    ((f)localObject).a(w, e.S);
    a((ViewGroup)localView);
    paramB = c.e.v0;
    if (paramB != null) {
      if (paramInt < paramB.length) {
        localView.setId(paramB[paramInt]);
      } else {
        localView.setId(-1);
      }
    }
    if (Build.VERSION.SDK_INT >= 21)
    {
      paramB = (ViewGroup)localView;
      if (paramB.getChildCount() == 2)
      {
        if ((paramB.getChildAt(0) instanceof CompoundButton))
        {
          paramB.getChildAt(0).setBackground(null);
          return;
        }
        if ((paramB.getChildAt(1) instanceof CompoundButton)) {
          paramB.getChildAt(1).setBackground(null);
        }
      }
    }
  }
  
  void a(c paramC)
  {
    f = paramC;
  }
  
  public b b(ViewGroup paramViewGroup, int paramInt)
  {
    paramViewGroup = LayoutInflater.from(paramViewGroup.getContext()).inflate(d, paramViewGroup, false);
    b.a.a.r.a.a(paramViewGroup, c.f());
    return new b(paramViewGroup, this);
  }
  
  static class b
    extends RecyclerView.d0
    implements View.OnClickListener, View.OnLongClickListener
  {
    final CompoundButton v;
    final TextView w;
    final a x;
    
    b(View paramView, a paramA)
    {
      super();
      v = ((CompoundButton)paramView.findViewById(k.md_control));
      w = ((TextView)paramView.findViewById(k.md_title));
      x = paramA;
      paramView.setOnClickListener(this);
      if (ae.F != null) {
        paramView.setOnLongClickListener(this);
      }
    }
    
    public void onClick(View paramView)
    {
      if ((a.b(x) != null) && (f() != -1))
      {
        Object localObject2 = null;
        Object localObject1 = localObject2;
        if (ax).e.l != null)
        {
          localObject1 = localObject2;
          if (f() < ax).e.l.size()) {
            localObject1 = (CharSequence)ax).e.l.get(f());
          }
        }
        a.b(x).a(a.a(x), paramView, f(), (CharSequence)localObject1, false);
      }
    }
    
    public boolean onLongClick(View paramView)
    {
      if ((a.b(x) != null) && (f() != -1))
      {
        Object localObject2 = null;
        Object localObject1 = localObject2;
        if (ax).e.l != null)
        {
          localObject1 = localObject2;
          if (f() < ax).e.l.size()) {
            localObject1 = (CharSequence)ax).e.l.get(f());
          }
        }
        return a.b(x).a(a.a(x), paramView, f(), (CharSequence)localObject1, true);
      }
      return false;
    }
  }
  
  static abstract interface c
  {
    public abstract boolean a(f paramF, View paramView, int paramInt, CharSequence paramCharSequence, boolean paramBoolean);
  }
}
