package b.h.a;

import android.view.animation.Interpolator;

public abstract class g
  implements Cloneable
{
  float c;
  private Interpolator d = null;
  boolean e = false;
  
  public g() {}
  
  public static g a(float paramFloat)
  {
    return new a(paramFloat);
  }
  
  public static g a(float paramFloat1, float paramFloat2)
  {
    return new a(paramFloat1, paramFloat2);
  }
  
  public float a()
  {
    return c;
  }
  
  public void a(Interpolator paramInterpolator)
  {
    d = paramInterpolator;
  }
  
  public abstract void a(Object paramObject);
  
  public Interpolator b()
  {
    return d;
  }
  
  public abstract Object c();
  
  public abstract g clone();
  
  public boolean d()
  {
    return e;
  }
  
  static class a
    extends g
  {
    float f;
    
    a(float paramFloat)
    {
      c = paramFloat;
      Class localClass = Float.TYPE;
    }
    
    a(float paramFloat1, float paramFloat2)
    {
      c = paramFloat1;
      f = paramFloat2;
      Class localClass = Float.TYPE;
      e = true;
    }
    
    public void a(Object paramObject)
    {
      if ((paramObject != null) && (paramObject.getClass() == Float.class))
      {
        f = ((Float)paramObject).floatValue();
        e = true;
      }
    }
    
    public Object c()
    {
      return Float.valueOf(f);
    }
    
    public a clone()
    {
      a localA = new a(a(), f);
      localA.a(b());
      return localA;
    }
    
    public float e()
    {
      return f;
    }
  }
}
