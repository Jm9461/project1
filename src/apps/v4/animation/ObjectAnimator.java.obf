package b.h.a;

import android.view.View;
import b.h.b.c;
import b.h.c.b.a;
import java.util.HashMap;
import java.util.Map;

public final class i
  extends m
{
  private static final Map<String, c> F = new HashMap();
  private Object C;
  private String D;
  private c E;
  
  static
  {
    F.put("alpha", j.a);
    F.put("pivotX", j.b);
    F.put("pivotY", j.c);
    F.put("translationX", j.d);
    F.put("translationY", j.e);
    F.put("rotation", j.f);
    F.put("rotationX", j.g);
    F.put("rotationY", j.h);
    F.put("scaleX", j.i);
    F.put("scaleY", j.j);
    F.put("scrollX", j.k);
    F.put("scrollY", j.l);
    F.put("x", j.m);
    F.put("y", j.n);
  }
  
  public i() {}
  
  private <T> i(T paramT, c<T, ?> paramC)
  {
    C = paramT;
    a(paramC);
  }
  
  private i(Object paramObject, String paramString)
  {
    C = paramObject;
    a(paramString);
  }
  
  public static <T> i a(T paramT, c<T, Float> paramC, float... paramVarArgs)
  {
    paramT = new i(paramT, paramC);
    paramT.a(paramVarArgs);
    return paramT;
  }
  
  public static i a(Object paramObject, String paramString, float... paramVarArgs)
  {
    paramObject = new i(paramObject, paramString);
    paramObject.a(paramVarArgs);
    return paramObject;
  }
  
  public i a(long paramLong)
  {
    super.a(paramLong);
    return this;
  }
  
  void a(float paramFloat)
  {
    super.a(paramFloat);
    int j = s.length;
    int i = 0;
    while (i < j)
    {
      s[i].a(C);
      i += 1;
    }
  }
  
  public void a(c paramC)
  {
    Object localObject = s;
    if (localObject != null)
    {
      localObject = localObject[0];
      String str = ((k)localObject).b();
      ((k)localObject).a(paramC);
      t.remove(str);
      t.put(D, localObject);
    }
    if (E != null) {
      D = paramC.a();
    }
    E = paramC;
    l = false;
  }
  
  public void a(String paramString)
  {
    Object localObject = s;
    if (localObject != null)
    {
      localObject = localObject[0];
      String str = ((k)localObject).b();
      ((k)localObject).a(paramString);
      t.remove(str);
      t.put(paramString, localObject);
    }
    D = paramString;
    l = false;
  }
  
  public void a(float... paramVarArgs)
  {
    Object localObject = s;
    if ((localObject != null) && (localObject.length != 0))
    {
      super.a(paramVarArgs);
      return;
    }
    localObject = E;
    if (localObject != null)
    {
      a(new k[] { k.a((c)localObject, paramVarArgs) });
      return;
    }
    a(new k[] { k.a(D, paramVarArgs) });
  }
  
  public void b()
  {
    super.b();
  }
  
  public i clone()
  {
    return (i)super.clone();
  }
  
  void d()
  {
    if (!l)
    {
      if ((E == null) && (a.s) && ((C instanceof View)) && (F.containsKey(D))) {
        a((c)F.get(D));
      }
      int j = s.length;
      int i = 0;
      while (i < j)
      {
        s[i].b(C);
        i += 1;
      }
      super.d();
    }
  }
  
  public String toString()
  {
    Object localObject1 = new StringBuilder();
    ((StringBuilder)localObject1).append("ObjectAnimator@");
    ((StringBuilder)localObject1).append(Integer.toHexString(hashCode()));
    ((StringBuilder)localObject1).append(", target ");
    ((StringBuilder)localObject1).append(C);
    localObject1 = ((StringBuilder)localObject1).toString();
    Object localObject2 = localObject1;
    if (s != null)
    {
      int i = 0;
      for (;;)
      {
        localObject2 = localObject1;
        if (i >= s.length) {
          break;
        }
        localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append((String)localObject1);
        ((StringBuilder)localObject2).append("\n    ");
        ((StringBuilder)localObject2).append(s[i].toString());
        localObject1 = ((StringBuilder)localObject2).toString();
        i += 1;
      }
    }
    return localObject2;
  }
}
