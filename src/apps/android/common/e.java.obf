package b.e.b;

import b.h.a.l;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

public abstract class a
  implements l<Number>
{
  protected float a;
  private ArrayList<a> b;
  
  public abstract Float a(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4);
  
  public final Float a(float paramFloat, Number paramNumber1, Number paramNumber2)
  {
    paramFloat = a * paramFloat;
    float f1 = paramNumber1.floatValue();
    float f2 = paramNumber2.floatValue() - paramNumber1.floatValue();
    float f3 = a;
    float f4 = a(paramFloat, f1, f2, f3).floatValue();
    paramNumber1 = b.iterator();
    while (paramNumber1.hasNext()) {
      ((a)paramNumber1.next()).a(paramFloat, f4, f1, f2, f3);
    }
    return Float.valueOf(f4);
  }
  
  public void a(a... paramVarArgs)
  {
    Collections.addAll(b, paramVarArgs);
  }
  
  public static abstract interface a
  {
    public abstract void a(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5);
  }
}
