package com.lawyer_smartCalendar.activity;

import android.app.Activity;
import android.app.Dialog;
import android.app.DialogFragment;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.app.g;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.RecyclerView.g;
import android.support.v7.widget.Toolbar;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;
import b.a.a.f;
import b.a.a.f.d;
import b.a.a.f.j;
import b.a.a.f.m;
import butterknife.ButterKnife;
import com.lawyer_smartCalendar.a.p;
import com.lawyer_smartCalendar.a.r;
import com.lawyer_smartCalendar.a.s;
import com.lawyer_smartCalendar.d.d;
import com.lawyer_smartCalendar.utils.h;
import com.lawyer_smartCalendar.utils.i;
import com.mohamadamin.persianmaterialdatetimepicker.date.b.d;
import h.a.a.a.b;
import h.a.a.a.c;
import h.a.a.a.d;
import java.io.File;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Locale;
import uk.co.chrisjenx.calligraphy.CalligraphyContextWrapper;

public class AddClientDocumentsActivity
  extends android.support.v7.app.e
  implements View.OnClickListener, View.OnFocusChangeListener, b.d
{
  private String A = "";
  private String B = "";
  private String C = "";
  private b.a.a.e D = b.a.a.e.e;
  private p E;
  private ArrayList<File> F = new ArrayList();
  public com.rey.material.widget.Button btn_add_document;
  public com.rey.material.widget.Button btn_add_image;
  public ImageView img_clear_date;
  public EditText input_case;
  public EditText input_client_name;
  public EditText input_date_delivered;
  public EditText input_date_received;
  public EditText input_document_note;
  public EditText input_document_type;
  private String r = "";
  public RecyclerView recyclerView;
  private String s = "add";
  private com.mohamadamin.persianmaterialdatetimepicker.j.b t;
  private com.mohamadamin.persianmaterialdatetimepicker.date.b u;
  public int v = -1;
  public int w = -1;
  private i x;
  private android.support.design.widget.e y;
  private android.support.design.widget.e z;
  
  public AddClientDocumentsActivity() {}
  
  private void a(File paramFile)
  {
    F.add(paramFile);
    E.d();
    recyclerView.h(F.size() - 1);
  }
  
  public void a(com.mohamadamin.persianmaterialdatetimepicker.date.b paramB, int paramInt1, int paramInt2, int paramInt3)
  {
    paramB = new com.mohamadamin.persianmaterialdatetimepicker.j.b();
    paramB.a(paramInt1, paramInt2, paramInt3);
    Object localObject = u.getTag();
    paramInt1 = ((String)localObject).hashCode();
    if (paramInt1 != 979522120)
    {
      break label43;
      if (paramInt1 != 2140188573) {
        break label76;
      }
    }
    label43:
    while (!((String)localObject).equals("input_date_delivered"))
    {
      while (!((String)localObject).equals("input_date_received")) {}
      paramInt1 = 0;
      break;
    }
    paramInt1 = 1;
    break label78;
    label76:
    paramInt1 = -1;
    label78:
    if (paramInt1 != 0)
    {
      if (paramInt1 != 1) {
        return;
      }
      input_date_delivered.setText(paramB.c());
      input_date_delivered.setTextColor(Color.parseColor("#E65100"));
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(paramB.getTimeInMillis());
      ((StringBuilder)localObject).append("");
      C = ((StringBuilder)localObject).toString();
      return;
    }
    input_date_received.setText(paramB.c());
    input_date_received.setTextColor(Color.parseColor("#E65100"));
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append(paramB.getTimeInMillis());
    ((StringBuilder)localObject).append("");
    B = ((StringBuilder)localObject).toString();
  }
  
  protected void attachBaseContext(Context paramContext)
  {
    super.attachBaseContext(CalligraphyContextWrapper.wrap(paramContext));
  }
  
  public void m()
  {
    y.dismiss();
  }
  
  public void n()
  {
    z.dismiss();
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    super.onActivityResult(paramInt1, paramInt2, paramIntent);
    h.a.a.a.a(paramInt1, paramInt2, paramIntent, this, new a());
  }
  
  public void onClick(View paramView)
  {
    Object localObject;
    List localList;
    switch (paramView.getId())
    {
    default: 
      return;
    case 2131296518: 
      input_document_type.setError(null);
      paramView = new f.d(this);
      paramView.a("IRANSansMobile.ttf", "IRANSansMobile.ttf");
      paramView.d(D);
      paramView.b(D);
      paramView.c(D);
      paramView.j(2131099708);
      paramView.b(D);
      paramView.e("??? ???");
      paramView.a(2130903050);
      paramView.a(-1, new h());
      paramView.c();
      return;
    case 2131296515: 
      input_date_received.setError(null);
      t = new com.mohamadamin.persianmaterialdatetimepicker.j.b();
      u = com.mohamadamin.persianmaterialdatetimepicker.date.b.b(this, t.h(), t.d(), t.b());
      u.show(getFragmentManager(), "input_date_received");
      return;
    case 2131296513: 
      input_date_delivered.setError(null);
      t = new com.mohamadamin.persianmaterialdatetimepicker.j.b();
      u = com.mohamadamin.persianmaterialdatetimepicker.date.b.b(this, t.h(), t.d(), t.b());
      u.show(getFragmentManager(), "input_date_delivered");
      return;
    case 2131296504: 
      input_client_name.setError(null);
      paramView = getLayoutInflater().inflate(2131492934, null);
      localObject = (RecyclerView)paramView.findViewById(2131296682);
      ((RecyclerView)localObject).setLayoutManager(new LinearLayoutManager(this));
      x.n();
      localList = x.i();
      x.close();
      if (localList.size() > 0)
      {
        ((RecyclerView)localObject).setAdapter(new s(this, "AddClientDocumentsActivity", localList));
        y = new android.support.design.widget.e(this);
        y.setContentView(paramView);
        y.show();
        return;
      }
      paramView = new f.d(this);
      paramView.a("IRANSansMobile.ttf", "IRANSansMobile.ttf");
      paramView.b(D);
      paramView.a(D);
      paramView.j(2131099708);
      paramView.a("??? ????? ??? ???? ???.???? ????? ??? ?????? ?? ???? ??? ????.");
      paramView.f(2131099728);
      paramView.b(2131099708);
      paramView.d("???? ??");
      paramView.b("??? ????");
      paramView.c(new e());
      paramView.a(new d());
      paramView.c();
      return;
    case 2131296493: 
      if (v == -1)
      {
        new h().a(this, "error", "????? ?? ???? ?????? ????.");
        return;
      }
      input_case.setError(null);
      paramView = getLayoutInflater().inflate(2131492933, null);
      localObject = (RecyclerView)paramView.findViewById(2131296680);
      ((RecyclerView)localObject).setLayoutManager(new LinearLayoutManager(this));
      x.n();
      localList = x.a(v);
      x.close();
      if (localList.size() > 0)
      {
        ((RecyclerView)localObject).setAdapter(new r(this, "AddClientDocumentsActivity", localList));
        z = new android.support.design.widget.e(this);
        z.setContentView(paramView);
        z.show();
        return;
      }
      paramView = new f.d(this);
      paramView.a("IRANSansMobile.ttf", "IRANSansMobile.ttf");
      paramView.b(D);
      paramView.a(D);
      paramView.j(2131099708);
      paramView.a("??? ?????? ?? ???? ??? ???? ??? ???? ???.???? ????? ??? ?????? ?? ?????? ??? ????.");
      paramView.f(2131099728);
      paramView.b(2131099708);
      paramView.d("???? ??");
      paramView.b("??? ??????");
      paramView.c(new g());
      paramView.a(new f());
      paramView.c();
      return;
    case 2131296476: 
      C = "";
      input_date_delivered.setText("");
      return;
    case 2131296344: 
      paramView = new f.d(this);
      paramView.a("IRANSansMobile.ttf", "IRANSansMobile.ttf");
      paramView.d(D);
      paramView.b(D);
      paramView.c(D);
      paramView.b(D);
      paramView.e("?????? ?????");
      paramView.a(2130903053);
      paramView.a(-1, new i());
      paramView.c();
      return;
    }
    int i = 0;
    if (v == -1)
    {
      input_client_name.setError("???? ?? ?????? ????.");
      i = 1;
    }
    if (w == -1)
    {
      input_case.setError("?????? ?? ?????? ????.");
      i = 1;
    }
    if (A.equals(""))
    {
      input_document_type.setError("??? ??? ?? ?????? ????.");
      i = 1;
    }
    if (B.equals(""))
    {
      input_date_received.setError("????? ?????? ??? ?? ?????? ????.");
      i = 1;
    }
    if (i == 0)
    {
      if ((!C.equals("")) && (!B.equals("")))
      {
        paramView = Calendar.getInstance();
        localObject = Calendar.getInstance();
        Calendar.getInstance();
        paramView.setTimeInMillis(Long.parseLong(B));
        ((Calendar)localObject).setTimeInMillis(Long.parseLong(C));
        if ((paramView.get(1) > ((Calendar)localObject).get(1)) || (paramView.get(2) > ((Calendar)localObject).get(2)) || (paramView.get(5) >= ((Calendar)localObject).get(5)))
        {
          new h().a(this, "error", "????? ????? ???? ????? ?? ????? ?????? ????.");
          return;
        }
      }
      paramView = new d();
      paramView.b(v);
      paramView.a(w);
      paramView.b(A);
      paramView.d(B);
      paramView.a(C);
      paramView.c(input_document_note.getText().toString());
      x.n();
      if (s.equals("edit"))
      {
        x.a(paramView, r);
        if (F.size() > 0)
        {
          x.a(r, com.lawyer_smartCalendar.utils.a.a);
          paramView = new ArrayList();
          i = 0;
          while (i < F.size())
          {
            localObject = new com.lawyer_smartCalendar.d.e();
            ((com.lawyer_smartCalendar.d.e)localObject).a(Integer.parseInt(r));
            ((com.lawyer_smartCalendar.d.e)localObject).c("");
            ((com.lawyer_smartCalendar.d.e)localObject).a(((File)F.get(i)).getPath());
            ((com.lawyer_smartCalendar.d.e)localObject).b(com.lawyer_smartCalendar.utils.a.a);
            paramView.add(localObject);
            i += 1;
          }
          x.a(paramView);
        }
        if (F.size() == 0) {
          x.a(r, com.lawyer_smartCalendar.utils.a.a);
        }
        new h().a(this, "success", "??? ?? ?????? ?????? ??.");
      }
      else
      {
        long l = x.a(paramView);
        if (F.size() > 0)
        {
          paramView = new ArrayList();
          i = 0;
          while (i < F.size())
          {
            localObject = new com.lawyer_smartCalendar.d.e();
            ((com.lawyer_smartCalendar.d.e)localObject).a((int)l);
            ((com.lawyer_smartCalendar.d.e)localObject).c("");
            ((com.lawyer_smartCalendar.d.e)localObject).a(((File)F.get(i)).getPath());
            ((com.lawyer_smartCalendar.d.e)localObject).b(com.lawyer_smartCalendar.utils.a.a);
            paramView.add(localObject);
            i += 1;
          }
          x.a(paramView);
        }
        new h().a(this, "success", "??? ?? ?????? ??? ??.");
      }
      x.close();
      setResult(-1);
      finish();
    }
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    setTheme(com.lawyer_smartCalendar.utils.c.b());
    super.onCreate(paramBundle);
    overridePendingTransition(17432576, 17432577);
    setContentView(2131492899);
    ButterKnife.a(this);
    x = new i(this);
    if (TextUtils.getLayoutDirectionFromLocale(Locale.getDefault()) == 0) {
      D = b.a.a.e.e;
    } else {
      D = b.a.a.e.c;
    }
    Object localObject1 = (Toolbar)findViewById(2131296838);
    ((ViewGroup)localObject1).setPadding(0, 0, 0, 0);
    ((Toolbar)localObject1).a(0, 0);
    a((Toolbar)localObject1);
    ((Toolbar)localObject1).setNavigationIcon(2131230856);
    ((Toolbar)localObject1).setNavigationOnClickListener(new b());
    btn_add_document.setOnClickListener(this);
    btn_add_image.setOnClickListener(this);
    img_clear_date.setOnClickListener(this);
    btn_add_document.setVisibility(8);
    input_client_name.setOnClickListener(this);
    input_client_name.setOnFocusChangeListener(this);
    input_case.setOnClickListener(this);
    input_case.setOnFocusChangeListener(this);
    input_document_type.setOnClickListener(this);
    input_document_type.setOnFocusChangeListener(this);
    input_date_received.setOnClickListener(this);
    input_date_received.setOnFocusChangeListener(this);
    input_date_delivered.setOnClickListener(this);
    input_date_delivered.setOnFocusChangeListener(this);
    r = getIntent().getStringExtra("id");
    s = getIntent().getStringExtra("frmMode");
    Object localObject5;
    int i;
    Object localObject6;
    if (s.equals("edit"))
    {
      j().a("?????? ????? ? ????? ??????");
      btn_add_document.setText("?????? ???");
      x.n();
      localObject3 = x.p(r);
      localObject1 = x;
      localObject4 = new StringBuilder();
      ((StringBuilder)localObject4).append(((d)localObject3).b());
      ((StringBuilder)localObject4).append("");
      localObject5 = ((i)localObject1).o(((StringBuilder)localObject4).toString());
      localObject1 = x;
      localObject4 = new StringBuilder();
      ((StringBuilder)localObject4).append(((d)localObject3).a());
      ((StringBuilder)localObject4).append("");
      localObject4 = ((i)localObject1).k(((StringBuilder)localObject4).toString());
      localObject1 = x.b(r, com.lawyer_smartCalendar.utils.a.a);
      x.close();
      i = 0;
      while (i < ((List)localObject1).size())
      {
        localObject6 = new File(Uri.decode(((com.lawyer_smartCalendar.d.e)((List)localObject1).get(i)).a()));
        F.add(localObject6);
        i += 1;
      }
      input_client_name.setText(((com.lawyer_smartCalendar.d.c)localObject5).f());
      v = ((d)localObject3).b();
      input_client_name.setEnabled(false);
      localObject1 = ((com.lawyer_smartCalendar.d.b)localObject4).o();
      switch (((String)localObject1).hashCode())
      {
      }
      for (;;)
      {
        break;
        if (((String)localObject1).equals("Executive"))
        {
          i = 1;
          break label625;
          if (((String)localObject1).equals("Bank"))
          {
            i = 3;
            break label625;
            if (((String)localObject1).equals("Challenge"))
            {
              i = 2;
              break label625;
              if (((String)localObject1).equals("Normal"))
              {
                i = 0;
                break label625;
              }
            }
          }
        }
      }
      i = -1;
      label625:
      if (i != 0)
      {
        if (i != 1)
        {
          if (i != 2)
          {
            if (i != 3) {
              localObject1 = "";
            } else {
              localObject1 = "?????";
            }
          }
          else {
            localObject1 = "???????/??????";
          }
        }
        else {
          localObject1 = "??????";
        }
      }
      else {
        localObject1 = "????";
      }
      localObject5 = new StringBuilder();
      ((StringBuilder)localObject5).append("?????: ");
      ((StringBuilder)localObject5).append(com.lawyer_smartCalendar.b.a.a(Long.valueOf(Long.parseLong(((com.lawyer_smartCalendar.d.b)localObject4).j()))));
      localObject4 = ((StringBuilder)localObject5).toString();
      localObject5 = input_case;
      localObject6 = new StringBuilder();
      ((StringBuilder)localObject6).append((String)localObject1);
      ((StringBuilder)localObject6).append(" - ");
      ((StringBuilder)localObject6).append((String)localObject4);
      ((EditText)localObject5).setText(((StringBuilder)localObject6).toString());
      input_case.setTextColor(Color.parseColor("#E65100"));
      w = ((d)localObject3).a();
      input_case.setEnabled(false);
      A = ((d)localObject3).d();
      localObject1 = ((d)localObject3).d();
      switch (((String)localObject1).hashCode())
      {
      }
      for (;;)
      {
        break;
        if (((String)localObject1).equals("SejliDocument"))
        {
          i = 2;
          break label925;
          if (((String)localObject1).equals("Other"))
          {
            i = 3;
            break label925;
            if (((String)localObject1).equals("Check"))
            {
              i = 0;
              break label925;
              if (((String)localObject1).equals("MarriageCertificate"))
              {
                i = 1;
                break label925;
              }
            }
          }
        }
      }
      i = -1;
      label925:
      if (i != 0)
      {
        if (i != 1)
        {
          if (i != 2)
          {
            if (i == 3) {
              input_document_type.setText("????");
            }
          }
          else {
            input_document_type.setText("????? ????");
          }
        }
        else {
          input_document_type.setText("??? ??????");
        }
      }
      else {
        input_document_type.setText("??");
      }
      if (!((d)localObject3).g().equals(""))
      {
        B = ((d)localObject3).g();
        localObject1 = new com.mohamadamin.persianmaterialdatetimepicker.j.b();
        ((com.mohamadamin.persianmaterialdatetimepicker.j.b)localObject1).setTimeInMillis(Long.parseLong(((d)localObject3).g()));
        input_date_received.setText(((com.mohamadamin.persianmaterialdatetimepicker.j.b)localObject1).c());
        input_date_received.setTextColor(Color.parseColor("#E65100"));
      }
      else
      {
        input_date_delivered.setText("");
        input_date_received.setText("");
        C = "";
        B = "";
      }
      if (!((d)localObject3).c().equals(""))
      {
        C = ((d)localObject3).c();
        localObject1 = new com.mohamadamin.persianmaterialdatetimepicker.j.b();
        ((com.mohamadamin.persianmaterialdatetimepicker.j.b)localObject1).setTimeInMillis(Long.parseLong(((d)localObject3).c()));
        input_date_delivered.setText(((com.mohamadamin.persianmaterialdatetimepicker.j.b)localObject1).c());
        input_date_delivered.setTextColor(Color.parseColor("#E65100"));
      }
      else
      {
        C = "";
        input_date_delivered.setText("");
      }
      input_document_note.setText(((d)localObject3).f());
    }
    try
    {
      localObject1 = getIntent().getStringExtra("frmStarter");
      localObject3 = getIntent().getStringExtra("id");
      if ((((String)localObject1).hashCode() != 3046192) || (!((String)localObject1).equals("case"))) {
        break label1711;
      }
      i = 0;
    }
    catch (Exception localException) {}
    x.n();
    Object localObject3 = x.k((String)localObject3);
    localObject1 = x;
    Object localObject4 = new StringBuilder();
    ((StringBuilder)localObject4).append(((com.lawyer_smartCalendar.d.b)localObject3).g());
    ((StringBuilder)localObject4).append("");
    localObject1 = ((i)localObject1).o(((StringBuilder)localObject4).toString());
    x.close();
    input_client_name.setText(((com.lawyer_smartCalendar.d.c)localObject1).f());
    v = ((com.lawyer_smartCalendar.d.c)localObject1).d();
    input_client_name.setEnabled(false);
    localObject1 = "";
    localObject4 = ((com.lawyer_smartCalendar.d.b)localObject3).o();
    switch (((String)localObject4).hashCode())
    {
    case 912993224: 
      if (((String)localObject4).equals("Executive")) {
        i = 1;
      }
      break;
    case 2062940: 
      if (((String)localObject4).equals("Bank")) {
        i = 3;
      }
      break;
    case -888366013: 
      if (((String)localObject4).equals("Challenge")) {
        i = 2;
      }
      break;
    case -1955878649: 
      if (((String)localObject4).equals("Normal")) {
        i = 0;
      }
      break;
    }
    for (;;)
    {
      localObject4 = new StringBuilder();
      ((StringBuilder)localObject4).append("?????: ");
      ((StringBuilder)localObject4).append(com.lawyer_smartCalendar.b.a.a(Long.valueOf(Long.parseLong(((com.lawyer_smartCalendar.d.b)localObject3).j()))));
      localObject4 = ((StringBuilder)localObject4).toString();
      localObject5 = input_case;
      localObject6 = new StringBuilder();
      ((StringBuilder)localObject6).append((String)localObject1);
      ((StringBuilder)localObject6).append(" - ");
      ((StringBuilder)localObject6).append((String)localObject4);
      ((EditText)localObject5).setText(((StringBuilder)localObject6).toString());
      input_case.setTextColor(Color.parseColor("#E65100"));
      w = ((com.lawyer_smartCalendar.d.b)localObject3).k();
      input_case.setEnabled(false);
      Object localObject2;
      for (;;)
      {
        if (paramBundle != null) {
          F = ((ArrayList)paramBundle.getSerializable("easy_image_photos_list"));
        }
        E = new p(this, recyclerView, F);
        paramBundle = new GridLayoutManager(this, 3, 1, false);
        recyclerView.setLayoutManager(paramBundle);
        recyclerView.setAdapter(E);
        paramBundle = b.c.a.a.a();
        localObject2 = new c();
        paramBundle.a(this, new String[] { "android.permission.WRITE_EXTERNAL_STORAGE", "android.permission.READ_EXTERNAL_STORAGE" }, (b.c.a.b)localObject2);
        paramBundle = h.a.a.a.b(this);
        paramBundle.a("DocumentImage");
        paramBundle.a(false);
        return;
        label1711:
        i = -1;
        if (i == 0) {
          break;
        }
      }
      i = -1;
      if (i != 0)
      {
        if (i != 1)
        {
          if (i != 2)
          {
            if (i == 3) {
              localObject2 = "?????";
            }
          }
          else {
            localObject2 = "???????/??????";
          }
        }
        else {
          localObject2 = "??????";
        }
      }
      else {
        localObject2 = "????";
      }
    }
  }
  
  public boolean onCreateOptionsMenu(Menu paramMenu)
  {
    getMenuInflater().inflate(2131558409, paramMenu);
    return super.onCreateOptionsMenu(paramMenu);
  }
  
  protected void onDestroy()
  {
    h.a.a.a.a(this);
    super.onDestroy();
  }
  
  public void onFocusChange(View paramView, boolean paramBoolean)
  {
    switch (paramView.getId())
    {
    default: 
      
    case 2131296518: 
      if (paramBoolean)
      {
        input_document_type.setError(null);
        input_document_type.callOnClick();
        return;
      }
      break;
    case 2131296515: 
      if (paramBoolean)
      {
        input_date_received.setError(null);
        input_date_received.callOnClick();
        return;
      }
      break;
    case 2131296513: 
      if (paramBoolean)
      {
        input_date_delivered.setError(null);
        input_date_delivered.callOnClick();
        return;
      }
      break;
    case 2131296504: 
      if (paramBoolean)
      {
        input_client_name.setError(null);
        input_client_name.callOnClick();
        return;
      }
      break;
    case 2131296493: 
      if (paramBoolean)
      {
        input_case.setError(null);
        input_case.callOnClick();
      }
      break;
    }
  }
  
  public boolean onOptionsItemSelected(MenuItem paramMenuItem)
  {
    if (paramMenuItem.getItemId() == 2131296278) {
      btn_add_document.callOnClick();
    }
    return super.onOptionsItemSelected(paramMenuItem);
  }
  
  protected void onPause()
  {
    super.onPause();
    if (isFinishing()) {
      overridePendingTransition(17432576, 17432577);
    }
  }
  
  public void onRequestPermissionsResult(int paramInt, String[] paramArrayOfString, int[] paramArrayOfInt)
  {
    b.c.a.a.a().a(paramArrayOfString, paramArrayOfInt);
  }
  
  public void onSaveInstanceState(Bundle paramBundle)
  {
    super.onSaveInstanceState(paramBundle);
    paramBundle.putSerializable("easy_image_photos_list", F);
  }
  
  class a
    implements a.b
  {
    a() {}
    
    public void a(a.d paramD, int paramInt)
    {
      if ((paramD == a.d.e) || (paramD == a.d.c))
      {
        paramD = h.a.a.a.d(AddClientDocumentsActivity.this);
        if (paramD != null) {
          paramD.delete();
        }
      }
    }
    
    public void a(File paramFile, a.d paramD, int paramInt)
    {
      AddClientDocumentsActivity.a(AddClientDocumentsActivity.this, paramFile);
    }
    
    public void a(Exception paramException, a.d paramD, int paramInt)
    {
      paramException.printStackTrace();
    }
  }
  
  class b
    implements View.OnClickListener
  {
    b() {}
    
    public void onClick(View paramView)
    {
      onBackPressed();
    }
  }
  
  class c
    extends b.c.a.b
  {
    c() {}
    
    public void a() {}
    
    public void a(String paramString)
    {
      Toast.makeText(AddClientDocumentsActivity.this, "???? ?????? ??? ???? ?? ?? ?????? ?????.", 0).show();
      finish();
    }
  }
  
  class d
    implements f.m
  {
    d() {}
    
    public void a(f paramF, b.a.a.b paramB)
    {
      paramF.dismiss();
      paramF = new Intent(AddClientDocumentsActivity.this, AddClientActivity.class);
      paramF.putExtra("frmMode", "add");
      startActivity(paramF);
    }
  }
  
  class e
    implements f.m
  {
    e() {}
    
    public void a(f paramF, b.a.a.b paramB)
    {
      paramF.dismiss();
    }
  }
  
  class f
    implements f.m
  {
    f() {}
    
    public void a(f paramF, b.a.a.b paramB)
    {
      paramF.dismiss();
      paramF = new Intent(AddClientDocumentsActivity.this, AddCaseActivity.class);
      paramF.putExtra("frmMode", "add");
      startActivity(paramF);
    }
  }
  
  class g
    implements f.m
  {
    g() {}
    
    public void a(f paramF, b.a.a.b paramB)
    {
      paramF.dismiss();
    }
  }
  
  class h
    implements f.j
  {
    h() {}
    
    public boolean a(f paramF, View paramView, int paramInt, CharSequence paramCharSequence)
    {
      input_document_type.setText(paramCharSequence);
      if (paramInt != 0)
      {
        if (paramInt != 1)
        {
          if (paramInt != 2)
          {
            if (paramInt != 3) {
              return true;
            }
            AddClientDocumentsActivity.a(AddClientDocumentsActivity.this, "Other");
            return true;
          }
          AddClientDocumentsActivity.a(AddClientDocumentsActivity.this, "SejliDocument");
          return true;
        }
        AddClientDocumentsActivity.a(AddClientDocumentsActivity.this, "MarriageCertificate");
        return true;
      }
      AddClientDocumentsActivity.a(AddClientDocumentsActivity.this, "Check");
      return true;
    }
  }
  
  class i
    implements f.j
  {
    i() {}
    
    public boolean a(f paramF, View paramView, int paramInt, CharSequence paramCharSequence)
    {
      if (paramInt != 0)
      {
        if (paramInt != 1) {
          return true;
        }
        h.a.a.a.a(AddClientDocumentsActivity.this, 0);
        return true;
      }
      h.a.a.a.b(AddClientDocumentsActivity.this, 0);
      return true;
    }
  }
}
