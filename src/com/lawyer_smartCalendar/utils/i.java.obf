package com.lawyer_smartCalendar.utils;

import android.app.backup.BackupManager;
import android.content.Context;
import android.os.Environment;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.nio.channels.FileChannel;
import java.nio.channels.ReadableByteChannel;

public class d
{
  public static String d = "lawyerSmartCalendar";
  private String a = "sahvBackUp.bk";
  private String b = "sahv";
  private Context c;
  
  public d(Context paramContext)
  {
    c = paramContext;
  }
  
  public void a()
  {
    try
    {
      Object localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append(Environment.getExternalStorageDirectory());
      ((StringBuilder)localObject1).append("/");
      ((StringBuilder)localObject1).append(d);
      localObject1 = new File(((StringBuilder)localObject1).toString());
      if (!((File)localObject1).exists()) {
        ((File)localObject1).mkdirs();
      }
      localObject2 = Environment.getDataDirectory();
      if (((File)localObject1).canWrite())
      {
        localObject3 = new StringBuilder();
        ((StringBuilder)localObject3).append("//data//");
        ((StringBuilder)localObject3).append(c.getPackageName());
        ((StringBuilder)localObject3).append("//databases//");
        ((StringBuilder)localObject3).append(b);
        localObject2 = new File((File)localObject2, ((StringBuilder)localObject3).toString());
        localObject1 = new File((File)localObject1, a);
        if (((File)localObject2).exists())
        {
          localObject2 = new FileInputStream((File)localObject2).getChannel();
          localObject1 = new FileOutputStream((File)localObject1).getChannel();
          ((FileChannel)localObject1).transferFrom((ReadableByteChannel)localObject2, 0L, ((FileChannel)localObject2).size());
          ((FileChannel)localObject2).close();
          ((FileChannel)localObject1).close();
          BackupManager.dataChanged(c.getPackageName());
          return;
        }
        return;
      }
      return;
    }
    catch (Exception localException)
    {
      Object localObject2 = new h();
      Object localObject3 = c;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("???? : ");
      localStringBuilder.append(localException.getMessage());
      localStringBuilder.append(" ?? ???? ???. ");
      ((h)localObject2).a((Context)localObject3, "error", localStringBuilder.toString());
    }
  }
  
  public boolean b()
  {
    try
    {
      Object localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append(Environment.getExternalStorageDirectory());
      ((StringBuilder)localObject1).append("/");
      ((StringBuilder)localObject1).append(d);
      localObject1 = new File(((StringBuilder)localObject1).toString());
      localObject2 = Environment.getDataDirectory();
      if (((File)localObject1).canWrite())
      {
        localObject3 = new StringBuilder();
        ((StringBuilder)localObject3).append("//data//");
        ((StringBuilder)localObject3).append(c.getPackageName());
        ((StringBuilder)localObject3).append("//databases//");
        ((StringBuilder)localObject3).append(b);
        localObject2 = new File((File)localObject2, ((StringBuilder)localObject3).toString());
        localObject1 = new File((File)localObject1, a);
        if (((File)localObject1).exists())
        {
          localObject1 = new FileInputStream((File)localObject1).getChannel();
          localObject2 = new FileOutputStream((File)localObject2).getChannel();
          ((FileChannel)localObject2).transferFrom((ReadableByteChannel)localObject1, 0L, ((FileChannel)localObject1).size());
          ((FileChannel)localObject1).close();
          ((FileChannel)localObject2).close();
          return true;
        }
        return false;
      }
      return false;
    }
    catch (Exception localException)
    {
      Object localObject2 = new h();
      Object localObject3 = c;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("???? : ");
      localStringBuilder.append(localException.getMessage());
      localStringBuilder.append(" ?? ???? ???. ");
      ((h)localObject2).a((Context)localObject3, "error", localStringBuilder.toString());
    }
    return false;
  }
}
