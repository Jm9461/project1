package com.lawyer_smartCalendar.utils;

import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.content.res.AssetManager;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.net.Uri;
import com.lawyer_smartCalendar.d.b;
import com.lawyer_smartCalendar.d.c;
import com.lawyer_smartCalendar.d.d;
import com.lawyer_smartCalendar.d.e;
import com.lawyer_smartCalendar.d.f;
import com.lawyer_smartCalendar.d.h;
import com.lawyer_smartCalendar.d.j;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

public class i
  extends SQLiteOpenHelper
{
  public static String d = "sahv";
  private final Context a;
  public String b = "data/data/[package]/databases/";
  public SQLiteDatabase c;
  
  public i(Context paramContext)
  {
    super(paramContext, d, null, 1);
    a = paramContext;
    b = b.replace("[package]", a.getPackageName());
  }
  
  public List<com.lawyer_smartCalendar.d.i> A(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_schedule where subject like'%");
    localStringBuilder.append(paramString);
    localStringBuilder.append("%' order by date asc ");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new com.lawyer_smartCalendar.d.i();
        ((com.lawyer_smartCalendar.d.i)localObject).c(paramString.getInt(0));
        ((com.lawyer_smartCalendar.d.i)localObject).b(paramString.getInt(1));
        ((com.lawyer_smartCalendar.d.i)localObject).a(paramString.getInt(2));
        ((com.lawyer_smartCalendar.d.i)localObject).d(paramString.getString(3));
        ((com.lawyer_smartCalendar.d.i)localObject).e(paramString.getString(4));
        ((com.lawyer_smartCalendar.d.i)localObject).b(paramString.getString(5));
        ((com.lawyer_smartCalendar.d.i)localObject).c(paramString.getString(6));
        ((com.lawyer_smartCalendar.d.i)localObject).a(paramString.getString(7));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public com.lawyer_smartCalendar.d.i B(String paramString)
  {
    com.lawyer_smartCalendar.d.i localI = new com.lawyer_smartCalendar.d.i();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_schedule where id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localI.c(paramString.getInt(0));
      localI.b(paramString.getInt(1));
      localI.a(paramString.getInt(2));
      localI.d(paramString.getString(3));
      localI.e(paramString.getString(4));
      localI.b(paramString.getString(5));
      localI.c(paramString.getString(6));
      localI.a(paramString.getString(7));
    }
    return localI;
  }
  
  public j C(String paramString)
  {
    j localJ = new j();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_tax where id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localJ.a(paramString.getInt(0));
      localJ.b(paramString.getInt(1));
      localJ.c(paramString.getInt(2));
      localJ.b(paramString.getInt(3));
      localJ.a(paramString.getInt(4));
      localJ.a(paramString.getString(5));
    }
    return localJ;
  }
  
  public long a(d paramD)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("client_id", Integer.valueOf(paramD.b()));
    localContentValues.put("case_id", Integer.valueOf(paramD.a()));
    localContentValues.put("documentType", paramD.d());
    localContentValues.put("receivedDate", paramD.g());
    localContentValues.put("deliveredDate", paramD.c());
    localContentValues.put("note", paramD.f());
    return c.insert("tbl_clientDocuments", null, localContentValues);
  }
  
  public long a(d paramD, String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("client_id", Integer.valueOf(paramD.b()));
    localContentValues.put("case_id", Integer.valueOf(paramD.a()));
    localContentValues.put("documentType", paramD.d());
    localContentValues.put("receivedDate", paramD.g());
    localContentValues.put("deliveredDate", paramD.c());
    localContentValues.put("note", paramD.f());
    paramD = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    return paramD.update("tbl_clientDocuments", localContentValues, localStringBuilder.toString(), null);
  }
  
  public long a(f paramF)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("client_id", Integer.valueOf(paramF.b()));
    localContentValues.put("case_id", Integer.valueOf(paramF.a()));
    localContentValues.put("title", paramF.g());
    localContentValues.put("note_type", paramF.f());
    localContentValues.put("date", paramF.c());
    localContentValues.put("detail", paramF.d());
    return c.insert("tbl_note", null, localContentValues);
  }
  
  public long a(com.lawyer_smartCalendar.d.g paramG)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("case_id", Integer.valueOf(paramG.b()));
    localContentValues.put("date", paramG.c());
    localContentValues.put("payType", paramG.g());
    localContentValues.put("payFor", paramG.f());
    localContentValues.put("amount", paramG.a());
    localContentValues.put("detail", paramG.d());
    return c.insert("tbl_payment", null, localContentValues);
  }
  
  public long a(com.lawyer_smartCalendar.d.i paramI)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("client_id", Integer.valueOf(paramI.c()));
    localContentValues.put("case_id", Integer.valueOf(paramI.b()));
    localContentValues.put("scheduleType", paramI.g());
    localContentValues.put("subject", paramI.h());
    localContentValues.put("date", paramI.d());
    localContentValues.put("result", paramI.f());
    localContentValues.put("alarmDate", paramI.a());
    return c.insert("tbl_schedule", null, localContentValues);
  }
  
  public List<b> a(int paramInt)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject1 = c;
    Object localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append("select *from tbl_case where client_id=");
    ((StringBuilder)localObject2).append(paramInt);
    ((StringBuilder)localObject2).append(" order by date desc");
    localObject1 = ((SQLiteDatabase)localObject1).rawQuery(((StringBuilder)localObject2).toString(), null);
    if (localObject1 != null) {
      while (((Cursor)localObject1).moveToNext())
      {
        localObject2 = new b();
        ((b)localObject2).c(((Cursor)localObject1).getInt(0));
        ((b)localObject2).a(((Cursor)localObject1).getInt(1));
        ((b)localObject2).l(((Cursor)localObject1).getString(2));
        ((b)localObject2).h(((Cursor)localObject1).getString(3));
        ((b)localObject2).f(((Cursor)localObject1).getString(4));
        ((b)localObject2).k(((Cursor)localObject1).getString(5));
        ((b)localObject2).g(((Cursor)localObject1).getString(6));
        ((b)localObject2).b(((Cursor)localObject1).getInt(7));
        ((b)localObject2).c(((Cursor)localObject1).getString(8));
        ((b)localObject2).d(((Cursor)localObject1).getString(9));
        ((b)localObject2).a(((Cursor)localObject1).getString(10));
        ((b)localObject2).b(((Cursor)localObject1).getString(11));
        ((b)localObject2).i(((Cursor)localObject1).getString(12));
        ((b)localObject2).j(((Cursor)localObject1).getString(13));
        ((b)localObject2).e(((Cursor)localObject1).getString(14));
        localArrayList.add(localObject2);
      }
    }
    return localArrayList;
  }
  
  public List<com.lawyer_smartCalendar.d.i> a(long paramLong1, long paramLong2)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject1 = c;
    Object localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append("select *from tbl_schedule where  CAST(date as long)>=");
    ((StringBuilder)localObject2).append(paramLong1);
    ((StringBuilder)localObject2).append(" and CAST(date as long)<=");
    ((StringBuilder)localObject2).append(paramLong2);
    ((StringBuilder)localObject2).append(" order by date asc");
    localObject1 = ((SQLiteDatabase)localObject1).rawQuery(((StringBuilder)localObject2).toString(), null);
    if (localObject1 != null)
    {
      while (((Cursor)localObject1).moveToNext())
      {
        localObject2 = new com.lawyer_smartCalendar.d.i();
        ((com.lawyer_smartCalendar.d.i)localObject2).c(((Cursor)localObject1).getInt(0));
        ((com.lawyer_smartCalendar.d.i)localObject2).b(((Cursor)localObject1).getInt(1));
        ((com.lawyer_smartCalendar.d.i)localObject2).a(((Cursor)localObject1).getInt(2));
        ((com.lawyer_smartCalendar.d.i)localObject2).d(((Cursor)localObject1).getString(3));
        ((com.lawyer_smartCalendar.d.i)localObject2).e(((Cursor)localObject1).getString(4));
        ((com.lawyer_smartCalendar.d.i)localObject2).b(((Cursor)localObject1).getString(5));
        ((com.lawyer_smartCalendar.d.i)localObject2).c(((Cursor)localObject1).getString(6));
        ((com.lawyer_smartCalendar.d.i)localObject2).a(((Cursor)localObject1).getString(7));
        localArrayList.add(localObject2);
      }
      ((Cursor)localObject1).close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public void a(Context paramContext, String paramString)
  {
    Object localObject = y(paramString);
    int i = 0;
    while (i < ((List)localObject).size())
    {
      localStringBuilder = new StringBuilder();
      localStringBuilder.append(((com.lawyer_smartCalendar.d.i)((List)localObject).get(i)).e());
      localStringBuilder.append("");
      c(paramContext, localStringBuilder.toString());
      i += 1;
    }
    paramContext = q(paramString);
    i = 0;
    while (i < paramContext.size())
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(((f)paramContext.get(i)).e());
      ((StringBuilder)localObject).append("");
      a(((StringBuilder)localObject).toString(), a.b);
      i += 1;
    }
    paramContext = c;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("case_id =");
    ((StringBuilder)localObject).append(paramString);
    paramContext.delete("tbl_note", ((StringBuilder)localObject).toString(), null);
    paramContext = m(paramString);
    i = 0;
    while (i < paramContext.size())
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(((d)paramContext.get(i)).e());
      ((StringBuilder)localObject).append("");
      a(((StringBuilder)localObject).toString(), a.a);
      i += 1;
    }
    paramContext = c;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("case_id =");
    ((StringBuilder)localObject).append(paramString);
    paramContext.delete("tbl_clientDocuments", ((StringBuilder)localObject).toString(), null);
    paramContext = v(paramString);
    localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("payment_id =");
    localStringBuilder.append(paramContext.e());
    ((SQLiteDatabase)localObject).delete("tbl_paymentDetail", localStringBuilder.toString(), null);
    paramContext = c;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("case_id =");
    ((StringBuilder)localObject).append(paramString);
    paramContext.delete("tbl_payment", ((StringBuilder)localObject).toString(), null);
    paramContext = c;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("id =");
    ((StringBuilder)localObject).append(paramString);
    paramContext.delete("tbl_case", ((StringBuilder)localObject).toString(), null);
  }
  
  public void a(com.lawyer_smartCalendar.d.a paramA)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("city_id", Integer.valueOf(paramA.b()));
    localContentValues.put("accountNumber_id", Integer.valueOf(paramA.a()));
    localContentValues.put("number", paramA.d());
    c.insert("tbl_cityBankAccountValue", null, localContentValues);
  }
  
  public void a(com.lawyer_smartCalendar.d.a paramA, String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("city_id", Integer.valueOf(paramA.b()));
    localContentValues.put("accountNumber_id", Integer.valueOf(paramA.a()));
    localContentValues.put("number", paramA.d());
    paramA = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    paramA.update("tbl_cityBankAccountValue", localContentValues, localStringBuilder.toString(), null);
  }
  
  public void a(b paramB)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("client_id", Integer.valueOf(paramB.g()));
    localContentValues.put("title", paramB.o());
    localContentValues.put("date", paramB.j());
    localContentValues.put("clientTitleType", paramB.f());
    localContentValues.put("subject", paramB.n());
    localContentValues.put("courtType", paramB.i());
    localContentValues.put("courtCityId", Integer.valueOf(paramB.h()));
    localContentValues.put("branchName", paramB.c());
    localContentValues.put("caseNumber", paramB.d());
    localContentValues.put("archiveNumber", paramB.a());
    localContentValues.put("attorneyLetterNumber", paramB.b());
    localContentValues.put("lawsuitInfo", paramB.l());
    localContentValues.put("status", paramB.m());
    localContentValues.put("caseStatus", paramB.e());
    c.insert("tbl_case", null, localContentValues);
  }
  
  public void a(b paramB, String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("client_id", Integer.valueOf(paramB.g()));
    localContentValues.put("title", paramB.o());
    localContentValues.put("date", paramB.j());
    localContentValues.put("clientTitleType", paramB.f());
    localContentValues.put("subject", paramB.n());
    localContentValues.put("courtType", paramB.i());
    localContentValues.put("courtCityId", Integer.valueOf(paramB.h()));
    localContentValues.put("branchName", paramB.c());
    localContentValues.put("caseNumber", paramB.d());
    localContentValues.put("archiveNumber", paramB.a());
    localContentValues.put("attorneyLetterNumber", paramB.b());
    localContentValues.put("lawsuitInfo", paramB.l());
    localContentValues.put("status", paramB.m());
    localContentValues.put("caseStatus", paramB.e());
    paramB = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    paramB.update("tbl_case", localContentValues, localStringBuilder.toString(), null);
  }
  
  public void a(c paramC)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("name", paramC.f());
    localContentValues.put("fatherName", paramC.c());
    localContentValues.put("nationalCode", paramC.g());
    localContentValues.put("phoneNumber", paramC.h());
    localContentValues.put("landlinePhone", paramC.e());
    localContentValues.put("emailAddress", paramC.b());
    localContentValues.put("address", paramC.a());
    localContentValues.put("type", paramC.i());
    c.insert("tbl_client", null, localContentValues);
  }
  
  public void a(c paramC, String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("name", paramC.f());
    localContentValues.put("fatherName", paramC.c());
    localContentValues.put("nationalCode", paramC.g());
    localContentValues.put("phoneNumber", paramC.h());
    localContentValues.put("landlinePhone", paramC.e());
    localContentValues.put("emailAddress", paramC.b());
    localContentValues.put("address", paramC.a());
    localContentValues.put("type", paramC.i());
    paramC = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    paramC.update("tbl_client", localContentValues, localStringBuilder.toString(), null);
  }
  
  public void a(f paramF, String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("client_id", Integer.valueOf(paramF.b()));
    localContentValues.put("case_id", Integer.valueOf(paramF.a()));
    localContentValues.put("title", paramF.g());
    localContentValues.put("note_type", paramF.f());
    localContentValues.put("date", paramF.c());
    localContentValues.put("detail", paramF.d());
    paramF = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    paramF.update("tbl_note", localContentValues, localStringBuilder.toString(), null);
  }
  
  public void a(com.lawyer_smartCalendar.d.g paramG, String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("case_id", Integer.valueOf(paramG.b()));
    localContentValues.put("date", paramG.c());
    localContentValues.put("payType", paramG.g());
    localContentValues.put("payFor", paramG.f());
    localContentValues.put("amount", paramG.a());
    localContentValues.put("detail", paramG.d());
    paramG = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    paramG.update("tbl_payment", localContentValues, localStringBuilder.toString(), null);
  }
  
  public void a(com.lawyer_smartCalendar.d.i paramI, String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("client_id", Integer.valueOf(paramI.c()));
    localContentValues.put("case_id", Integer.valueOf(paramI.b()));
    localContentValues.put("scheduleType", paramI.g());
    localContentValues.put("subject", paramI.h());
    localContentValues.put("date", paramI.d());
    localContentValues.put("result", paramI.f());
    localContentValues.put("alarmDate", paramI.a());
    paramI = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    paramI.update("tbl_schedule", localContentValues, localStringBuilder.toString(), null);
  }
  
  public void a(j paramJ)
  {
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select id from tbl_tax where year=");
    localStringBuilder.append(paramJ.f());
    localObject = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (((Cursor)localObject).getCount() > 0)
    {
      ((Cursor)localObject).moveToFirst();
      a(paramJ, ((Cursor)localObject).getString(0));
      ((Cursor)localObject).close();
      return;
    }
    localObject = new ContentValues();
    ((ContentValues)localObject).put("year", Integer.valueOf(paramJ.f()));
    ((ContentValues)localObject).put("total", Long.valueOf(paramJ.e()));
    ((ContentValues)localObject).put("incomeTax", Long.valueOf(paramJ.c()));
    ((ContentValues)localObject).put("income", Long.valueOf(paramJ.b()));
    ((ContentValues)localObject).put("note", paramJ.d());
    c.insert("tbl_tax", null, (ContentValues)localObject);
  }
  
  public void a(j paramJ, String paramString)
  {
    ContentValues localContentValues = new ContentValues();
    localContentValues.put("year", Integer.valueOf(paramJ.f()));
    localContentValues.put("total", Long.valueOf(paramJ.e()));
    localContentValues.put("incomeTax", Long.valueOf(paramJ.c()));
    localContentValues.put("income", Long.valueOf(paramJ.b()));
    localContentValues.put("note", paramJ.d());
    paramJ = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    paramJ.update("tbl_tax", localContentValues, localStringBuilder.toString(), null);
  }
  
  public void a(String paramString1, String paramString2)
  {
    paramString2 = b(paramString1, paramString2);
    int i = 0;
    while (i < paramString2.size())
    {
      localObject = new File(Uri.decode(((e)paramString2.get(i)).a()));
      if (((File)localObject).exists()) {
        ((File)localObject).delete();
      }
      i += 1;
    }
    paramString2 = c;
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("fk_id =");
    ((StringBuilder)localObject).append(paramString1);
    paramString2.delete("tbl_file", ((StringBuilder)localObject).toString(), null);
  }
  
  public void a(List<e> paramList)
  {
    int i = 0;
    while (i < paramList.size())
    {
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("fk_id", Integer.valueOf(((e)paramList.get(i)).c()));
      localContentValues.put("title", ((e)paramList.get(i)).d());
      localContentValues.put("file_type", ((e)paramList.get(i)).b());
      localContentValues.put("file_address", ((e)paramList.get(i)).a());
      c.insert("tbl_file", null, localContentValues);
      i += 1;
    }
  }
  
  public void a(List<h> paramList, String paramString)
  {
    int i = 0;
    while (i < paramList.size())
    {
      ContentValues localContentValues = new ContentValues();
      localContentValues.put("payment_id", paramString);
      localContentValues.put("date", ((h)paramList.get(i)).b());
      localContentValues.put("amount", ((h)paramList.get(i)).a());
      localContentValues.put("detail", ((h)paramList.get(i)).c());
      c.insert("tbl_paymentDetail", null, localContentValues);
      i += 1;
    }
  }
  
  public boolean a()
  {
    boolean bool = false;
    if (b.i.a.a.a.a("installed", false)) {
      return true;
    }
    Object localObject1 = null;
    try
    {
      Object localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append(b);
      ((StringBuilder)localObject2).append(d);
      localObject2 = SQLiteDatabase.openDatabase(((StringBuilder)localObject2).toString(), null, 1);
      localObject1 = localObject2;
    }
    catch (SQLException localSQLException) {}
    if (localObject1 != null) {
      bool = true;
    }
    return bool;
  }
  
  public boolean a(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_payment where case_id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    return (paramString != null) && (paramString.getCount() > 0);
  }
  
  public String b(int paramInt)
  {
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select name from tbl_client where id=");
    localStringBuilder.append(paramInt);
    localStringBuilder.append(" limit 1");
    localObject = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if ((localObject != null) && (((Cursor)localObject).moveToFirst())) {
      return ((Cursor)localObject).getString(0);
    }
    return "";
  }
  
  public List<e> b(String paramString1, String paramString2)
  {
    ArrayList localArrayList = new ArrayList();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_file where fk_id=");
    localStringBuilder.append(paramString1);
    localStringBuilder.append(" and file_type='");
    localStringBuilder.append(paramString2);
    localStringBuilder.append("'");
    paramString1 = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if (paramString1 != null)
    {
      while (paramString1.moveToNext())
      {
        paramString2 = new e();
        paramString2.b(paramString1.getInt(0));
        paramString2.a(paramString1.getInt(1));
        paramString2.c(paramString1.getString(2));
        paramString2.b(paramString1.getString(3));
        paramString2.a(paramString1.getString(4));
        localArrayList.add(paramString2);
      }
      paramString1.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public void b()
  {
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append(b);
    ((StringBuilder)localObject).append(d);
    localObject = new FileOutputStream(((StringBuilder)localObject).toString());
    byte[] arrayOfByte = new byte['?'];
    InputStream localInputStream = a.getAssets().open(d);
    for (;;)
    {
      int i = localInputStream.read(arrayOfByte);
      if (i <= 0) {
        break;
      }
      ((OutputStream)localObject).write(arrayOfByte, 0, i);
    }
    localInputStream.close();
    ((OutputStream)localObject).flush();
    ((OutputStream)localObject).close();
    b.i.a.a.a.b("installed", true);
  }
  
  public void b(Context paramContext, String paramString)
  {
    Object localObject = a(Integer.parseInt(paramString));
    int i = 0;
    while (i < ((List)localObject).size())
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append(((b)((List)localObject).get(i)).k());
      localStringBuilder.append("");
      a(paramContext, localStringBuilder.toString());
      i += 1;
    }
    paramContext = c;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("client_id =");
    ((StringBuilder)localObject).append(paramString);
    paramContext.delete("tbl_schedule", ((StringBuilder)localObject).toString(), null);
    paramContext = c;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("id =");
    ((StringBuilder)localObject).append(paramString);
    paramContext.delete("tbl_client", ((StringBuilder)localObject).toString(), null);
  }
  
  public void b(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    localSQLiteDatabase.delete("tbl_cityBankAccountValue", localStringBuilder.toString(), null);
  }
  
  public void b(List<h> paramList, String paramString)
  {
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("payment_id =");
    localStringBuilder.append(paramString);
    ((SQLiteDatabase)localObject).delete("tbl_paymentDetail", localStringBuilder.toString(), null);
    int i = 0;
    while (i < paramList.size())
    {
      localObject = new ContentValues();
      ((ContentValues)localObject).put("payment_id", paramString);
      ((ContentValues)localObject).put("date", ((h)paramList.get(i)).b());
      ((ContentValues)localObject).put("amount", ((h)paramList.get(i)).a());
      ((ContentValues)localObject).put("detail", ((h)paramList.get(i)).c());
      c.insert("tbl_paymentDetail", null, (ContentValues)localObject);
      i += 1;
    }
  }
  
  public void c()
  {
    if (Boolean.valueOf(a()).booleanValue()) {
      return;
    }
    getReadableDatabase();
    try
    {
      b();
      return;
    }
    catch (IOException localIOException) {}
  }
  
  public void c(Context paramContext, String paramString)
  {
    Object localObject = Calendar.getInstance();
    ((Calendar)localObject).setTimeInMillis(Long.parseLong(B(paramString).a()));
    new k(paramContext, new Intent(paramContext, OnAlarmReceiver.class), ((Calendar)localObject).getTimeInMillis(), Integer.parseInt(paramString)).a();
    g.a(paramContext, Integer.parseInt(paramString));
    paramContext = c;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("id =");
    ((StringBuilder)localObject).append(paramString);
    paramContext.delete("tbl_schedule", ((StringBuilder)localObject).toString(), null);
  }
  
  public void c(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    localSQLiteDatabase.delete("tbl_clientDocuments", localStringBuilder.toString(), null);
  }
  
  public void close()
  {
    c.close();
  }
  
  public List<com.lawyer_smartCalendar.d.a> d()
  {
    ArrayList localArrayList = new ArrayList();
    Cursor localCursor = c.rawQuery("select *from tbl_cityBankAccountValue order by id asc", null);
    if (localCursor != null)
    {
      while (localCursor.moveToNext())
      {
        com.lawyer_smartCalendar.d.a localA = new com.lawyer_smartCalendar.d.a();
        localA.c(localCursor.getInt(0));
        localA.b(localCursor.getInt(1));
        localA.a(localCursor.getInt(2));
        localA.a(localCursor.getString(3));
        localArrayList.add(localA);
      }
      localCursor.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public void d(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("file_address ='");
    localStringBuilder.append(paramString);
    localStringBuilder.append("'");
    localSQLiteDatabase.delete("tbl_file", localStringBuilder.toString(), null);
  }
  
  public void e(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    localSQLiteDatabase.delete("tbl_note", localStringBuilder.toString(), null);
  }
  
  public String[][] e()
  {
    Object localObject = null;
    Cursor localCursor = c.rawQuery("select id,title from tbl_accountNumber order by title asc", null);
    if (localCursor != null)
    {
      int i = 0;
      String[][] arrayOfString = (String[][])Array.newInstance(String.class, new int[] { localCursor.getCount(), 2 });
      for (;;)
      {
        localObject = arrayOfString;
        if (!localCursor.moveToNext()) {
          break;
        }
        arrayOfString[i][0] = localCursor.getString(0);
        arrayOfString[i][1] = localCursor.getString(1);
        i += 1;
      }
    }
    return localObject;
  }
  
  public List<b> f()
  {
    ArrayList localArrayList = new ArrayList();
    Cursor localCursor = c.rawQuery("select *from tbl_case order by date desc", null);
    if (localCursor != null) {
      while (localCursor.moveToNext())
      {
        b localB = new b();
        localB.c(localCursor.getInt(0));
        localB.a(localCursor.getInt(1));
        localB.l(localCursor.getString(2));
        localB.h(localCursor.getString(3));
        localB.f(localCursor.getString(4));
        localB.k(localCursor.getString(5));
        localB.g(localCursor.getString(6));
        localB.b(localCursor.getInt(7));
        localB.c(localCursor.getString(8));
        localB.d(localCursor.getString(9));
        localB.a(localCursor.getString(10));
        localB.b(localCursor.getString(11));
        localB.i(localCursor.getString(12));
        localB.j(localCursor.getString(13));
        localB.e(localCursor.getString(14));
        localArrayList.add(localB);
      }
    }
    return localArrayList;
  }
  
  public void f(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("payment_id =");
    localStringBuilder.append(paramString);
    localSQLiteDatabase.delete("tbl_paymentDetail", localStringBuilder.toString(), null);
    localSQLiteDatabase = c;
    localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    localSQLiteDatabase.delete("tbl_payment", localStringBuilder.toString(), null);
  }
  
  public void g(String paramString)
  {
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("id =");
    localStringBuilder.append(paramString);
    localSQLiteDatabase.delete("tbl_tax", localStringBuilder.toString(), null);
  }
  
  public String[][] g()
  {
    Object localObject = null;
    Cursor localCursor = c.rawQuery("select id,city from tbl_city order by city asc", null);
    if (localCursor != null)
    {
      int i = 0;
      String[][] arrayOfString = (String[][])Array.newInstance(String.class, new int[] { localCursor.getCount(), 2 });
      for (;;)
      {
        localObject = arrayOfString;
        if (!localCursor.moveToNext()) {
          break;
        }
        arrayOfString[i][0] = localCursor.getString(0);
        arrayOfString[i][1] = localCursor.getString(1);
        i += 1;
      }
    }
    return localObject;
  }
  
  public com.lawyer_smartCalendar.d.a h(String paramString)
  {
    com.lawyer_smartCalendar.d.a localA = new com.lawyer_smartCalendar.d.a();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_cityBankAccountValue where id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localA.c(paramString.getInt(0));
      localA.b(paramString.getInt(1));
      localA.a(paramString.getInt(2));
      localA.a(paramString.getString(3));
    }
    return localA;
  }
  
  public List<d> h()
  {
    ArrayList localArrayList = new ArrayList();
    Cursor localCursor = c.rawQuery("select *from tbl_clientDocuments order by receivedDate asc", null);
    if (localCursor != null)
    {
      while (localCursor.moveToNext())
      {
        d localD = new d();
        localD.c(localCursor.getInt(0));
        localD.b(localCursor.getInt(1));
        localD.a(localCursor.getInt(2));
        localD.b(localCursor.getString(3));
        localD.d(localCursor.getString(4));
        localD.a(localCursor.getString(5));
        localD.c(localCursor.getString(6));
        localArrayList.add(localD);
      }
      localCursor.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public String i(String paramString)
  {
    String str = "";
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select title from tbl_accountNumber where id=");
    localStringBuilder.append(paramString);
    localObject = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    paramString = str;
    if (localObject != null)
    {
      paramString = str;
      if (((Cursor)localObject).moveToFirst()) {
        paramString = ((Cursor)localObject).getString(0);
      }
    }
    return paramString;
  }
  
  public List<c> i()
  {
    ArrayList localArrayList = new ArrayList();
    Cursor localCursor = c.rawQuery("select *from tbl_client order by name asc", null);
    if (localCursor != null) {
      while (localCursor.moveToNext())
      {
        c localC = new c();
        localC.a(localCursor.getInt(0));
        localC.e(localCursor.getString(1));
        localC.c(localCursor.getString(2));
        localC.f(localCursor.getString(3));
        localC.g(localCursor.getString(4));
        localC.d(localCursor.getString(5));
        localC.b(localCursor.getString(6));
        localC.a(localCursor.getString(7));
        localC.h(localCursor.getString(8));
        localArrayList.add(localC);
      }
    }
    return localArrayList;
  }
  
  public List<b> j(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_case where lawsuitInfo like'%");
    localStringBuilder.append(paramString);
    localStringBuilder.append("%' or subject like'%");
    localStringBuilder.append(paramString);
    localStringBuilder.append("%' order by date desc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null) {
      while (paramString.moveToNext())
      {
        localObject = new b();
        ((b)localObject).c(paramString.getInt(0));
        ((b)localObject).a(paramString.getInt(1));
        ((b)localObject).l(paramString.getString(2));
        ((b)localObject).h(paramString.getString(3));
        ((b)localObject).f(paramString.getString(4));
        ((b)localObject).k(paramString.getString(5));
        ((b)localObject).g(paramString.getString(6));
        ((b)localObject).b(paramString.getInt(7));
        ((b)localObject).c(paramString.getString(8));
        ((b)localObject).d(paramString.getString(9));
        ((b)localObject).a(paramString.getString(10));
        ((b)localObject).b(paramString.getString(11));
        ((b)localObject).i(paramString.getString(12));
        ((b)localObject).j(paramString.getString(13));
        ((b)localObject).e(paramString.getString(14));
        localArrayList.add(localObject);
      }
    }
    return localArrayList;
  }
  
  public String[][] j()
  {
    Object localObject = null;
    Cursor localCursor = c.rawQuery("select *from tbl_link order by title asc", null);
    if (localCursor != null)
    {
      int i = 0;
      String[][] arrayOfString = (String[][])Array.newInstance(String.class, new int[] { localCursor.getCount(), 3 });
      for (;;)
      {
        localObject = arrayOfString;
        if (!localCursor.moveToNext()) {
          break;
        }
        arrayOfString[i][0] = localCursor.getString(0);
        arrayOfString[i][1] = localCursor.getString(1);
        arrayOfString[i][2] = localCursor.getString(2);
        i += 1;
      }
    }
    return localObject;
  }
  
  public b k(String paramString)
  {
    b localB = new b();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_case where id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localB.c(paramString.getInt(0));
      localB.a(paramString.getInt(1));
      localB.l(paramString.getString(2));
      localB.h(paramString.getString(3));
      localB.f(paramString.getString(4));
      localB.k(paramString.getString(5));
      localB.g(paramString.getString(6));
      localB.b(paramString.getInt(7));
      localB.c(paramString.getString(8));
      localB.d(paramString.getString(9));
      localB.a(paramString.getString(10));
      localB.b(paramString.getString(11));
      localB.i(paramString.getString(12));
      localB.j(paramString.getString(13));
      localB.e(paramString.getString(14));
    }
    return localB;
  }
  
  public List<com.lawyer_smartCalendar.d.g> k()
  {
    ArrayList localArrayList = new ArrayList();
    Cursor localCursor = c.rawQuery("select *from tbl_payment order by date asc", null);
    if (localCursor != null)
    {
      while (localCursor.moveToNext())
      {
        com.lawyer_smartCalendar.d.g localG = new com.lawyer_smartCalendar.d.g();
        localG.b(localCursor.getInt(0));
        localG.a(localCursor.getInt(1));
        localG.b(localCursor.getString(2));
        localG.e(localCursor.getString(3));
        localG.d(localCursor.getString(4));
        localG.a(localCursor.getString(5));
        localG.c(localCursor.getString(6));
        localArrayList.add(localG);
      }
      localCursor.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public String l(String paramString)
  {
    String str = "";
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select city from tbl_city where id=");
    localStringBuilder.append(paramString);
    localObject = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    paramString = str;
    if (localObject != null)
    {
      paramString = str;
      if (((Cursor)localObject).moveToFirst()) {
        paramString = ((Cursor)localObject).getString(0);
      }
    }
    return paramString;
  }
  
  public List<com.lawyer_smartCalendar.d.i> l()
  {
    ArrayList localArrayList = new ArrayList();
    Cursor localCursor = c.rawQuery("select *from tbl_schedule order by date asc", null);
    if (localCursor != null)
    {
      while (localCursor.moveToNext())
      {
        com.lawyer_smartCalendar.d.i localI = new com.lawyer_smartCalendar.d.i();
        localI.c(localCursor.getInt(0));
        localI.b(localCursor.getInt(1));
        localI.a(localCursor.getInt(2));
        localI.d(localCursor.getString(3));
        localI.e(localCursor.getString(4));
        localI.b(localCursor.getString(5));
        localI.c(localCursor.getString(6));
        localI.a(localCursor.getString(7));
        localArrayList.add(localI);
      }
      localCursor.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public List<j> m()
  {
    ArrayList localArrayList = new ArrayList();
    Cursor localCursor = c.rawQuery("select *from tbl_tax order by year asc", null);
    if (localCursor != null)
    {
      while (localCursor.moveToNext())
      {
        j localJ = new j();
        localJ.a(localCursor.getInt(0));
        localJ.b(localCursor.getInt(1));
        localJ.c(localCursor.getLong(2));
        localJ.b(localCursor.getLong(3));
        localJ.a(localCursor.getLong(4));
        localJ.a(localCursor.getString(5));
        localArrayList.add(localJ);
      }
      localCursor.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public List<d> m(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_clientDocuments where case_id=");
    localStringBuilder.append(paramString);
    localStringBuilder.append(" order by receivedDate asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new d();
        ((d)localObject).c(paramString.getInt(0));
        ((d)localObject).b(paramString.getInt(1));
        ((d)localObject).a(paramString.getInt(2));
        ((d)localObject).b(paramString.getString(3));
        ((d)localObject).d(paramString.getString(4));
        ((d)localObject).a(paramString.getString(5));
        ((d)localObject).c(paramString.getString(6));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public List<c> n(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_client where name like'%");
    localStringBuilder.append(paramString);
    localStringBuilder.append("%' order by name asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null) {
      while (paramString.moveToNext())
      {
        localObject = new c();
        ((c)localObject).a(paramString.getInt(0));
        ((c)localObject).e(paramString.getString(1));
        ((c)localObject).c(paramString.getString(2));
        ((c)localObject).f(paramString.getString(3));
        ((c)localObject).g(paramString.getString(4));
        ((c)localObject).d(paramString.getString(5));
        ((c)localObject).b(paramString.getString(6));
        ((c)localObject).a(paramString.getString(7));
        ((c)localObject).h(paramString.getString(8));
        localArrayList.add(localObject);
      }
    }
    return localArrayList;
  }
  
  public void n()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(b);
    localStringBuilder.append(d);
    c = SQLiteDatabase.openDatabase(localStringBuilder.toString(), null, 0);
  }
  
  public c o(String paramString)
  {
    c localC = new c();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_client where id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localC.a(paramString.getInt(0));
      localC.e(paramString.getString(1));
      localC.c(paramString.getString(2));
      localC.f(paramString.getString(3));
      localC.g(paramString.getString(4));
      localC.d(paramString.getString(5));
      localC.b(paramString.getString(6));
      localC.a(paramString.getString(7));
      localC.h(paramString.getString(8));
    }
    return localC;
  }
  
  public void onCreate(SQLiteDatabase paramSQLiteDatabase) {}
  
  public void onUpgrade(SQLiteDatabase paramSQLiteDatabase, int paramInt1, int paramInt2) {}
  
  public d p(String paramString)
  {
    d localD = new d();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_clientDocuments where id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localD.c(paramString.getInt(0));
      localD.b(paramString.getInt(1));
      localD.a(paramString.getInt(2));
      localD.b(paramString.getString(3));
      localD.d(paramString.getString(4));
      localD.a(paramString.getString(5));
      localD.c(paramString.getString(6));
    }
    return localD;
  }
  
  public List<f> q(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_note where case_id=");
    localStringBuilder.append(paramString);
    localStringBuilder.append(" order by date asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new f();
        ((f)localObject).c(paramString.getInt(0));
        ((f)localObject).b(paramString.getInt(1));
        ((f)localObject).a(paramString.getInt(2));
        ((f)localObject).d(paramString.getString(3));
        ((f)localObject).c(paramString.getString(4));
        ((f)localObject).a(paramString.getString(5));
        ((f)localObject).b(paramString.getString(6));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public List<f> r(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_note where client_id=");
    localStringBuilder.append(paramString);
    localStringBuilder.append(" order by date asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new f();
        ((f)localObject).c(paramString.getInt(0));
        ((f)localObject).b(paramString.getInt(1));
        ((f)localObject).a(paramString.getInt(2));
        ((f)localObject).d(paramString.getString(3));
        ((f)localObject).c(paramString.getString(4));
        ((f)localObject).a(paramString.getString(5));
        ((f)localObject).b(paramString.getString(6));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public List<f> s(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_note where note_type='");
    localStringBuilder.append(paramString);
    localStringBuilder.append("' order by date asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new f();
        ((f)localObject).c(paramString.getInt(0));
        ((f)localObject).b(paramString.getInt(1));
        ((f)localObject).a(paramString.getInt(2));
        ((f)localObject).d(paramString.getString(3));
        ((f)localObject).c(paramString.getString(4));
        ((f)localObject).a(paramString.getString(5));
        ((f)localObject).b(paramString.getString(6));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public List<f> t(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_note where title like'%");
    localStringBuilder.append(paramString);
    localStringBuilder.append("%' or detail like'%");
    localStringBuilder.append(paramString);
    localStringBuilder.append("%' order by date asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new f();
        ((f)localObject).c(paramString.getInt(0));
        ((f)localObject).b(paramString.getInt(1));
        ((f)localObject).a(paramString.getInt(2));
        ((f)localObject).d(paramString.getString(3));
        ((f)localObject).c(paramString.getString(4));
        ((f)localObject).a(paramString.getString(5));
        ((f)localObject).b(paramString.getString(6));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public f u(String paramString)
  {
    f localF = new f();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_note where id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localF.c(paramString.getInt(0));
      localF.b(paramString.getInt(1));
      localF.a(paramString.getInt(2));
      localF.d(paramString.getString(3));
      localF.c(paramString.getString(4));
      localF.a(paramString.getString(5));
      localF.b(paramString.getString(6));
    }
    return localF;
  }
  
  public com.lawyer_smartCalendar.d.g v(String paramString)
  {
    com.lawyer_smartCalendar.d.g localG = new com.lawyer_smartCalendar.d.g();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_payment where case_id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localG.b(paramString.getInt(0));
      localG.a(paramString.getInt(1));
      localG.b(paramString.getString(2));
      localG.e(paramString.getString(3));
      localG.d(paramString.getString(4));
      localG.a(paramString.getString(5));
      localG.c(paramString.getString(6));
    }
    return localG;
  }
  
  public com.lawyer_smartCalendar.d.g w(String paramString)
  {
    com.lawyer_smartCalendar.d.g localG = new com.lawyer_smartCalendar.d.g();
    SQLiteDatabase localSQLiteDatabase = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_payment where id=");
    localStringBuilder.append(paramString);
    paramString = localSQLiteDatabase.rawQuery(localStringBuilder.toString(), null);
    if ((paramString != null) && (paramString.moveToFirst()))
    {
      localG.b(paramString.getInt(0));
      localG.a(paramString.getInt(1));
      localG.b(paramString.getString(2));
      localG.e(paramString.getString(3));
      localG.d(paramString.getString(4));
      localG.a(paramString.getString(5));
      localG.c(paramString.getString(6));
    }
    return localG;
  }
  
  public List<h> x(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_paymentDetail where payment_id=");
    localStringBuilder.append(paramString);
    localStringBuilder.append(" order by date asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new h();
        ((h)localObject).a(paramString.getInt(0));
        ((h)localObject).a(paramString.getInt(1));
        ((h)localObject).b(paramString.getString(2));
        ((h)localObject).a(paramString.getString(3));
        ((h)localObject).c(paramString.getString(4));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public List<com.lawyer_smartCalendar.d.i> y(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_schedule where case_id=");
    localStringBuilder.append(paramString);
    localStringBuilder.append(" order by date asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new com.lawyer_smartCalendar.d.i();
        ((com.lawyer_smartCalendar.d.i)localObject).c(paramString.getInt(0));
        ((com.lawyer_smartCalendar.d.i)localObject).b(paramString.getInt(1));
        ((com.lawyer_smartCalendar.d.i)localObject).a(paramString.getInt(2));
        ((com.lawyer_smartCalendar.d.i)localObject).d(paramString.getString(3));
        ((com.lawyer_smartCalendar.d.i)localObject).e(paramString.getString(4));
        ((com.lawyer_smartCalendar.d.i)localObject).b(paramString.getString(5));
        ((com.lawyer_smartCalendar.d.i)localObject).c(paramString.getString(6));
        ((com.lawyer_smartCalendar.d.i)localObject).a(paramString.getString(7));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
  
  public List<com.lawyer_smartCalendar.d.i> z(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    Object localObject = c;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("select *from tbl_schedule where client_id=");
    localStringBuilder.append(paramString);
    localStringBuilder.append(" order by date asc");
    paramString = ((SQLiteDatabase)localObject).rawQuery(localStringBuilder.toString(), null);
    if (paramString != null)
    {
      while (paramString.moveToNext())
      {
        localObject = new com.lawyer_smartCalendar.d.i();
        ((com.lawyer_smartCalendar.d.i)localObject).c(paramString.getInt(0));
        ((com.lawyer_smartCalendar.d.i)localObject).b(paramString.getInt(1));
        ((com.lawyer_smartCalendar.d.i)localObject).a(paramString.getInt(2));
        ((com.lawyer_smartCalendar.d.i)localObject).d(paramString.getString(3));
        ((com.lawyer_smartCalendar.d.i)localObject).e(paramString.getString(4));
        ((com.lawyer_smartCalendar.d.i)localObject).b(paramString.getString(5));
        ((com.lawyer_smartCalendar.d.i)localObject).c(paramString.getString(6));
        ((com.lawyer_smartCalendar.d.i)localObject).a(paramString.getString(7));
        localArrayList.add(localObject);
      }
      paramString.close();
      return localArrayList;
    }
    return localArrayList;
  }
}
