package com.aurelhubert.ahbottomnavigation;

import android.animation.ObjectAnimator;
import android.animation.ValueAnimator;
import android.animation.ValueAnimator.AnimatorUpdateListener;
import android.content.Context;
import android.content.res.TypedArray;
import android.os.Build.VERSION;
import android.support.design.widget.CoordinatorLayout;
import android.support.design.widget.CoordinatorLayout.c;
import android.support.design.widget.Snackbar.SnackbarLayout;
import android.support.design.widget.TabLayout;
import android.support.v4.view.b0;
import android.support.v4.view.e0.c;
import android.support.v4.view.u;
import android.support.v4.view.y;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup.MarginLayoutParams;
import android.view.animation.Interpolator;
import android.widget.FrameLayout;

public class AHBottomNavigationBehavior<V extends View>
  extends VerticalScrollingBehavior<V>
{
  private static final Interpolator p = new c();
  private int e;
  private boolean f = false;
  private y g;
  private ObjectAnimator h;
  private TabLayout i;
  private Snackbar.SnackbarLayout j;
  private int k = -1;
  private float l = 0.0F;
  private float m = 0.0F;
  private boolean n = true;
  private AHBottomNavigation.f o;
  
  public AHBottomNavigationBehavior() {}
  
  public AHBottomNavigationBehavior(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    paramContext = paramContext.obtainStyledAttributes(paramAttributeSet, h.AHBottomNavigationBehavior_Params);
    e = paramContext.getResourceId(h.AHBottomNavigationBehavior_Params_tabLayoutId, -1);
    paramContext.recycle();
  }
  
  public AHBottomNavigationBehavior(boolean paramBoolean, int paramInt)
  {
    n = paramBoolean;
  }
  
  private TabLayout a(View paramView)
  {
    int i1 = e;
    if (i1 == 0) {
      return null;
    }
    return (TabLayout)paramView.findViewById(i1);
  }
  
  private void a(V paramV, int paramInt)
  {
    if (!n) {
      return;
    }
    if ((paramInt == -1) && (f))
    {
      f = false;
      a(paramV, 0, false, true);
      return;
    }
    if ((paramInt == 1) && (!f))
    {
      f = true;
      a(paramV, paramV.getHeight(), false, true);
    }
  }
  
  private void a(V paramV, int paramInt, boolean paramBoolean1, boolean paramBoolean2)
  {
    if ((!n) && (!paramBoolean1)) {
      return;
    }
    if (Build.VERSION.SDK_INT < 19)
    {
      b(paramV, paramInt, paramBoolean2);
      h.start();
      return;
    }
    a(paramV, paramBoolean2);
    paramV = g;
    paramV.b(paramInt);
    paramV.c();
  }
  
  private void a(V paramV, boolean paramBoolean)
  {
    y localY = g;
    long l1 = 300L;
    if (localY == null)
    {
      g = u.a(paramV);
      paramV = g;
      if (!paramBoolean) {
        l1 = 0L;
      }
      paramV.a(l1);
      g.a(new a());
      g.a(p);
      return;
    }
    if (!paramBoolean) {
      l1 = 0L;
    }
    localY.a(l1);
    g.a();
  }
  
  private void b(final V paramV, int paramInt, boolean paramBoolean)
  {
    ObjectAnimator localObjectAnimator = h;
    if (localObjectAnimator != null) {
      localObjectAnimator.cancel();
    }
    h = ObjectAnimator.ofFloat(paramV, View.TRANSLATION_Y, new float[] { paramInt });
    localObjectAnimator = h;
    long l1;
    if (paramBoolean) {
      l1 = 300L;
    } else {
      l1 = 0L;
    }
    localObjectAnimator.setDuration(l1);
    h.setInterpolator(p);
    h.addUpdateListener(new b(paramV));
  }
  
  public void a(CoordinatorLayout paramCoordinatorLayout, V paramV, int paramInt1, int paramInt2, int paramInt3) {}
  
  public void a(CoordinatorLayout paramCoordinatorLayout, V paramV, View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    super.a(paramCoordinatorLayout, paramV, paramView, paramInt1, paramInt2, paramInt3, paramInt4);
    if (paramInt2 < 0)
    {
      a(paramV, -1);
      return;
    }
    if (paramInt2 > 0) {
      a(paramV, 1);
    }
  }
  
  public void a(V paramV, int paramInt, boolean paramBoolean)
  {
    if (!f)
    {
      f = true;
      a(paramV, paramInt, true, paramBoolean);
    }
  }
  
  public void a(View paramView1, View paramView2)
  {
    if ((paramView2 != null) && ((paramView2 instanceof Snackbar.SnackbarLayout)))
    {
      j = ((Snackbar.SnackbarLayout)paramView2);
      if (k == -1) {
        k = paramView2.getHeight();
      }
      int i1 = (int)(paramView1.getMeasuredHeight() - paramView1.getTranslationY());
      if (Build.VERSION.SDK_INT < 21) {
        paramView1.bringToFront();
      }
      if ((paramView2.getLayoutParams() instanceof ViewGroup.MarginLayoutParams))
      {
        paramView1 = (ViewGroup.MarginLayoutParams)paramView2.getLayoutParams();
        paramView1.setMargins(leftMargin, topMargin, rightMargin, i1);
        paramView2.requestLayout();
      }
    }
  }
  
  public void a(AHBottomNavigation.f paramF)
  {
    o = paramF;
  }
  
  public void a(boolean paramBoolean, int paramInt)
  {
    n = paramBoolean;
  }
  
  public boolean a(CoordinatorLayout paramCoordinatorLayout, V paramV, int paramInt)
  {
    boolean bool = super.a(paramCoordinatorLayout, paramV, paramInt);
    if ((i == null) && (e != -1)) {
      i = a(paramV);
    }
    return bool;
  }
  
  public boolean a(CoordinatorLayout paramCoordinatorLayout, V paramV, View paramView)
  {
    if ((paramView != null) && ((paramView instanceof Snackbar.SnackbarLayout)))
    {
      a(paramV, paramView);
      return true;
    }
    return super.a(paramCoordinatorLayout, paramV, paramView);
  }
  
  protected boolean a(CoordinatorLayout paramCoordinatorLayout, V paramV, View paramView, float paramFloat1, float paramFloat2, int paramInt)
  {
    return false;
  }
  
  public void b(CoordinatorLayout paramCoordinatorLayout, V paramV, View paramView, int paramInt1, int paramInt2, int[] paramArrayOfInt, int paramInt3) {}
  
  public boolean b(CoordinatorLayout paramCoordinatorLayout, V paramV, View paramView)
  {
    return super.b(paramCoordinatorLayout, paramV, paramView);
  }
  
  public boolean b(CoordinatorLayout paramCoordinatorLayout, V paramV, View paramView1, View paramView2, int paramInt)
  {
    return (paramInt == 2) || (super.b(paramCoordinatorLayout, paramV, paramView1, paramView2, paramInt));
  }
  
  public void c(CoordinatorLayout paramCoordinatorLayout, V paramV, View paramView)
  {
    super.c(paramCoordinatorLayout, paramV, paramView);
  }
  
  class a
    implements b0
  {
    a() {}
    
    public void a(View paramView)
    {
      if (AHBottomNavigationBehavior.a(AHBottomNavigationBehavior.this) != null) {
        AHBottomNavigationBehavior.a(AHBottomNavigationBehavior.this).a((int)(paramView.getMeasuredHeight() - paramView.getTranslationY() + AHBottomNavigationBehavior.b(AHBottomNavigationBehavior.this)));
      }
    }
  }
  
  class b
    implements ValueAnimator.AnimatorUpdateListener
  {
    b(View paramView) {}
    
    public void onAnimationUpdate(ValueAnimator paramValueAnimator)
    {
      if ((AHBottomNavigationBehavior.c(AHBottomNavigationBehavior.this) != null) && ((AHBottomNavigationBehavior.c(AHBottomNavigationBehavior.this).getLayoutParams() instanceof ViewGroup.MarginLayoutParams)))
      {
        AHBottomNavigationBehavior.a(AHBottomNavigationBehavior.this, paramV.getMeasuredHeight() - paramV.getTranslationY());
        paramValueAnimator = (ViewGroup.MarginLayoutParams)AHBottomNavigationBehavior.c(AHBottomNavigationBehavior.this).getLayoutParams();
        paramValueAnimator.setMargins(leftMargin, topMargin, rightMargin, (int)AHBottomNavigationBehavior.d(AHBottomNavigationBehavior.this));
        AHBottomNavigationBehavior.c(AHBottomNavigationBehavior.this).requestLayout();
      }
      if (AHBottomNavigationBehavior.a(AHBottomNavigationBehavior.this) != null) {
        AHBottomNavigationBehavior.a(AHBottomNavigationBehavior.this).a((int)(paramV.getMeasuredHeight() - paramV.getTranslationY() + AHBottomNavigationBehavior.b(AHBottomNavigationBehavior.this)));
      }
    }
  }
}
