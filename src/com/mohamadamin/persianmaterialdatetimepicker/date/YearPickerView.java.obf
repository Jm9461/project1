package com.mohamadamin.persianmaterialdatetimepicker.date;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.drawable.StateListDrawable;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.accessibility.AccessibilityEvent;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;
import com.mohamadamin.persianmaterialdatetimepicker.c;
import com.mohamadamin.persianmaterialdatetimepicker.f;
import java.util.ArrayList;
import java.util.List;

public class i
  extends ListView
  implements AdapterView.OnItemClickListener, b.c
{
  private final a c;
  private b d;
  private int e;
  private int f;
  private TextViewWithCircularIndicator g;
  
  public i(Context paramContext, a paramA)
  {
    super(paramContext);
    c = paramA;
    c.a(this);
    setLayoutParams(new ViewGroup.LayoutParams(-1, -2));
    paramA = paramContext.getResources();
    e = paramA.getDimensionPixelOffset(c.mdtp_date_picker_view_animator_height);
    f = paramA.getDimensionPixelOffset(c.mdtp_year_label_height);
    setVerticalFadingEdgeEnabled(true);
    setFadingEdgeLength(f / 3);
    a(paramContext);
    setOnItemClickListener(this);
    setSelector(new StateListDrawable());
    setDividerHeight(0);
    a();
  }
  
  private void a(Context paramContext)
  {
    ArrayList localArrayList = new ArrayList();
    int i = c.a();
    while (i <= c.i())
    {
      localArrayList.add(String.format("%d", new Object[] { Integer.valueOf(i) }));
      i += 1;
    }
    localArrayList = com.mohamadamin.persianmaterialdatetimepicker.j.a.a(localArrayList);
    d = new b(paramContext, f.mdtp_year_label_text_view, localArrayList);
    setAdapter(d);
  }
  
  private static int b(TextView paramTextView)
  {
    return Integer.valueOf(com.mohamadamin.persianmaterialdatetimepicker.j.a.a(paramTextView.getText().toString())).intValue();
  }
  
  public void a()
  {
    d.notifyDataSetChanged();
    a(c.e().b - c.a());
  }
  
  public void a(int paramInt)
  {
    a(paramInt, e / 2 - f / 2);
  }
  
  public void a(final int paramInt1, final int paramInt2)
  {
    post(new a(paramInt1, paramInt2));
  }
  
  public int getFirstPositionOffset()
  {
    View localView = getChildAt(0);
    if (localView == null) {
      return 0;
    }
    return localView.getTop();
  }
  
  public void onInitializeAccessibilityEvent(AccessibilityEvent paramAccessibilityEvent)
  {
    super.onInitializeAccessibilityEvent(paramAccessibilityEvent);
    if (paramAccessibilityEvent.getEventType() == 4096)
    {
      paramAccessibilityEvent.setFromIndex(0);
      paramAccessibilityEvent.setToIndex(0);
    }
  }
  
  public void onItemClick(AdapterView<?> paramAdapterView, View paramView, int paramInt, long paramLong)
  {
    c.h();
    paramAdapterView = (TextViewWithCircularIndicator)paramView;
    if (paramAdapterView != null)
    {
      paramView = g;
      if (paramAdapterView != paramView)
      {
        if (paramView != null)
        {
          paramView.a(false);
          g.requestLayout();
        }
        paramAdapterView.a(true);
        paramAdapterView.requestLayout();
        g = paramAdapterView;
      }
      c.a(b(paramAdapterView));
      d.notifyDataSetChanged();
    }
  }
  
  class a
    implements Runnable
  {
    a(int paramInt1, int paramInt2) {}
    
    public void run()
    {
      setSelectionFromTop(paramInt1, paramInt2);
      requestLayout();
    }
  }
  
  private class b
    extends ArrayAdapter<String>
  {
    public b(int paramInt, List<String> paramList)
    {
      super(paramList, localList);
    }
    
    public View getView(int paramInt, View paramView, ViewGroup paramViewGroup)
    {
      paramView = (TextViewWithCircularIndicator)super.getView(paramInt, paramView, paramViewGroup);
      paramView.requestLayout();
      paramInt = i.a(paramView);
      boolean bool;
      if (aeb == paramInt) {
        bool = true;
      } else {
        bool = false;
      }
      paramView.a(bool);
      if (bool) {
        i.a(i.this, paramView);
      }
      return paramView;
    }
  }
}
