package com.mohamadamin.persianmaterialdatetimepicker.j;

import java.util.GregorianCalendar;
import java.util.TimeZone;

public class b
  extends GregorianCalendar
{
  private int c;
  private int d;
  private int e;
  private String f = "/";
  
  public b()
  {
    setTimeZone(TimeZone.getTimeZone("GMT"));
  }
  
  private long a(long paramLong)
  {
    return 86400000L * paramLong - 210866803200000L + d.a(getTimeInMillis() + 210866803200000L, 8.64E7D);
  }
  
  private String a(int paramInt)
  {
    if (paramInt < 9)
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("0");
      localStringBuilder.append(paramInt);
      return localStringBuilder.toString();
    }
    return String.valueOf(paramInt);
  }
  
  protected void a()
  {
    long l2 = d.a(Math.floor(getTimeInMillis() + 210866803200000L) / 86400000L);
    long l1 = l2 >> 16;
    int i = (int)(0xFF00 & l2);
    int j = (int)(0xFF & l2);
    if (l1 <= 0L) {
      l1 -= 1L;
    }
    c = ((int)l1);
    d = (i >> 8);
    e = j;
  }
  
  public void a(int paramInt1, int paramInt2)
  {
    if (paramInt2 == 0) {
      return;
    }
    if ((paramInt1 >= 0) && (paramInt1 < 15))
    {
      if (paramInt1 == 1)
      {
        a(c + paramInt2, d() + 1, e);
        return;
      }
      if (paramInt1 == 2)
      {
        a(c + (d() + 1 + paramInt2) / 12, (d() + 1 + paramInt2) % 12, e);
        return;
      }
      add(paramInt1, paramInt2);
      a();
      return;
    }
    throw new IllegalArgumentException();
  }
  
  public void a(int paramInt1, int paramInt2, int paramInt3)
  {
    c = paramInt1;
    d = (paramInt2 + 1);
    e = paramInt3;
    paramInt1 = c;
    if (paramInt1 <= 0) {
      paramInt1 += 1;
    }
    setTimeInMillis(a(d.a(paramInt1, d - 1, e)));
  }
  
  public int b()
  {
    return e;
  }
  
  public String c()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(g());
    localStringBuilder.append("  ");
    localStringBuilder.append(e);
    localStringBuilder.append("  ");
    localStringBuilder.append(e());
    localStringBuilder.append("  ");
    localStringBuilder.append(c);
    return localStringBuilder.toString();
  }
  
  public int d()
  {
    return d;
  }
  
  public String e()
  {
    return c.a[d];
  }
  
  public boolean equals(Object paramObject)
  {
    return super.equals(paramObject);
  }
  
  public String f()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("");
    localStringBuilder.append(a(c));
    localStringBuilder.append(f);
    localStringBuilder.append(a(d() + 1));
    localStringBuilder.append(f);
    localStringBuilder.append(a(e));
    return localStringBuilder.toString();
  }
  
  public String g()
  {
    int i = get(7);
    if (i != 1)
    {
      if (i != 2)
      {
        if (i != 3)
        {
          if (i != 4)
          {
            if (i != 5)
            {
              if (i != 7) {
                return c.b[6];
              }
              return c.b[0];
            }
            return c.b[5];
          }
          return c.b[4];
        }
        return c.b[3];
      }
      return c.b[2];
    }
    return c.b[1];
  }
  
  public int h()
  {
    return c;
  }
  
  public int hashCode()
  {
    return super.hashCode();
  }
  
  public void set(int paramInt1, int paramInt2)
  {
    super.set(paramInt1, paramInt2);
    a();
  }
  
  public void setTimeInMillis(long paramLong)
  {
    super.setTimeInMillis(paramLong);
    a();
  }
  
  public void setTimeZone(TimeZone paramTimeZone)
  {
    super.setTimeZone(paramTimeZone);
    a();
  }
  
  public String toString()
  {
    String str = super.toString();
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(str.substring(0, str.length() - 1));
    localStringBuilder.append(",PersianDate=");
    localStringBuilder.append(f());
    localStringBuilder.append("]");
    return localStringBuilder.toString();
  }
}
