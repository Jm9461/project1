package com.squareup.picasso;

import android.content.ContentResolver;
import android.content.Context;
import android.content.UriMatcher;
import android.net.Uri;
import android.provider.ContactsContract.Contacts;
import f.l;
import java.io.InputStream;

class f
  extends y
{
  private static final UriMatcher b = new UriMatcher(-1);
  private final Context a;
  
  static
  {
    b.addURI("com.android.contacts", "contacts/lookup/*/#", 1);
    b.addURI("com.android.contacts", "contacts/lookup/*", 1);
    b.addURI("com.android.contacts", "contacts/#/photo", 2);
    b.addURI("com.android.contacts", "contacts/#", 3);
    b.addURI("com.android.contacts", "display_photo/#", 4);
  }
  
  f(Context paramContext)
  {
    a = paramContext;
  }
  
  private InputStream c(w paramW)
  {
    ContentResolver localContentResolver = a.getContentResolver();
    Uri localUri = d;
    int i = b.match(localUri);
    if (i != 1)
    {
      if (i != 2)
      {
        paramW = localUri;
        if (i == 3) {
          break label102;
        }
        if (i != 4)
        {
          paramW = new StringBuilder();
          paramW.append("Invalid uri: ");
          paramW.append(localUri);
          throw new IllegalStateException(paramW.toString());
        }
      }
      return localContentResolver.openInputStream(localUri);
    }
    else
    {
      localUri = ContactsContract.Contacts.lookupContact(localContentResolver, localUri);
      paramW = localUri;
      if (localUri == null) {
        return null;
      }
    }
    label102:
    return ContactsContract.Contacts.openContactPhotoInputStream(localContentResolver, paramW, true);
  }
  
  public y.a a(w paramW, int paramInt)
  {
    paramW = c(paramW);
    if (paramW == null) {
      return null;
    }
    return new y.a(l.a(paramW), t.e.e);
  }
  
  public boolean a(w paramW)
  {
    Uri localUri = d;
    return ("content".equals(localUri.getScheme())) && (ContactsContract.Contacts.CONTENT_URI.getHost().equals(localUri.getHost())) && (b.match(d) != -1);
  }
}
