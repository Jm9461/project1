package com.squareup.picasso;

import android.graphics.Bitmap;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Looper;
import android.os.Message;

class a0
{
  final HandlerThread a;
  final d b;
  final Handler c;
  long d;
  long e;
  long f;
  long g;
  long h;
  long i;
  long j;
  long k;
  int l;
  int m;
  int n;
  
  a0(d paramD)
  {
    b = paramD;
    a = new HandlerThread("Picasso-Stats", 10);
    a.start();
    d0.a(a.getLooper());
    c = new a(a.getLooper(), this);
  }
  
  private static long a(int paramInt, long paramLong)
  {
    return paramLong / paramInt;
  }
  
  private void a(Bitmap paramBitmap, int paramInt)
  {
    int i1 = d0.a(paramBitmap);
    paramBitmap = c;
    paramBitmap.sendMessage(paramBitmap.obtainMessage(paramInt, i1, 0));
  }
  
  b0 a()
  {
    return new b0(b.a(), b.size(), d, e, f, g, h, i, j, k, l, m, n, System.currentTimeMillis());
  }
  
  void a(long paramLong)
  {
    Handler localHandler = c;
    localHandler.sendMessage(localHandler.obtainMessage(4, Long.valueOf(paramLong)));
  }
  
  void a(Bitmap paramBitmap)
  {
    a(paramBitmap, 2);
  }
  
  void a(Long paramLong)
  {
    l += 1;
    f += paramLong.longValue();
    i = a(l, f);
  }
  
  void b()
  {
    c.sendEmptyMessage(0);
  }
  
  void b(long paramLong)
  {
    m += 1;
    g += paramLong;
    j = a(m, g);
  }
  
  void b(Bitmap paramBitmap)
  {
    a(paramBitmap, 3);
  }
  
  void c()
  {
    c.sendEmptyMessage(1);
  }
  
  void c(long paramLong)
  {
    n += 1;
    h += paramLong;
    k = a(m, h);
  }
  
  void d()
  {
    d += 1L;
  }
  
  void e()
  {
    e += 1L;
  }
  
  private static class a
    extends Handler
  {
    private final a0 a;
    
    a(Looper paramLooper, a0 paramA0)
    {
      super();
      a = paramA0;
    }
    
    public void handleMessage(final Message paramMessage)
    {
      int i = what;
      if (i != 0)
      {
        if (i != 1)
        {
          if (i != 2)
          {
            if (i != 3)
            {
              if (i != 4)
              {
                t.p.post(new a(paramMessage));
                return;
              }
              a.a((Long)obj);
              return;
            }
            a.c(arg1);
            return;
          }
          a.b(arg1);
          return;
        }
        a.e();
        return;
      }
      a.d();
    }
    
    class a
      implements Runnable
    {
      a(Message paramMessage) {}
      
      public void run()
      {
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append("Unhandled stats message.");
        localStringBuilder.append(paramMessagewhat);
        throw new AssertionError(localStringBuilder.toString());
      }
    }
  }
}
