package com.squareup.picasso;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.drawable.Animatable;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.SystemClock;
import android.util.DisplayMetrics;
import android.widget.ImageView;

final class u
  extends BitmapDrawable
{
  private static final Paint h = new Paint();
  private final boolean a;
  private final float b;
  private final t.e c;
  Drawable d;
  long e;
  boolean f;
  int g = 255;
  
  u(Context paramContext, Bitmap paramBitmap, Drawable paramDrawable, t.e paramE, boolean paramBoolean1, boolean paramBoolean2)
  {
    super(paramContext.getResources(), paramBitmap);
    a = paramBoolean2;
    b = getResourcesgetDisplayMetricsdensity;
    c = paramE;
    int i;
    if ((paramE != t.e.d) && (!paramBoolean1)) {
      i = 1;
    } else {
      i = 0;
    }
    if (i != 0)
    {
      d = paramDrawable;
      f = true;
      e = SystemClock.uptimeMillis();
    }
  }
  
  private static Path a(int paramInt1, int paramInt2, int paramInt3)
  {
    Path localPath = new Path();
    localPath.moveTo(paramInt1, paramInt2);
    localPath.lineTo(paramInt1 + paramInt3, paramInt2);
    localPath.lineTo(paramInt1, paramInt2 + paramInt3);
    return localPath;
  }
  
  private void a(Canvas paramCanvas)
  {
    h.setColor(-1);
    paramCanvas.drawPath(a(0, 0, (int)(b * 16.0F)), h);
    h.setColor(c.c);
    paramCanvas.drawPath(a(0, 0, (int)(b * 15.0F)), h);
  }
  
  static void a(ImageView paramImageView, Context paramContext, Bitmap paramBitmap, t.e paramE, boolean paramBoolean1, boolean paramBoolean2)
  {
    Drawable localDrawable = paramImageView.getDrawable();
    if ((localDrawable instanceof Animatable)) {
      ((Animatable)localDrawable).stop();
    }
    paramImageView.setImageDrawable(new u(paramContext, paramBitmap, localDrawable, paramE, paramBoolean1, paramBoolean2));
  }
  
  static void a(ImageView paramImageView, Drawable paramDrawable)
  {
    paramImageView.setImageDrawable(paramDrawable);
    if ((paramImageView.getDrawable() instanceof Animatable)) {
      ((Animatable)paramImageView.getDrawable()).start();
    }
  }
  
  public void draw(Canvas paramCanvas)
  {
    if (!f)
    {
      super.draw(paramCanvas);
    }
    else
    {
      float f1 = (float)(SystemClock.uptimeMillis() - e) / 200.0F;
      if (f1 >= 1.0F)
      {
        f = false;
        d = null;
        super.draw(paramCanvas);
      }
      else
      {
        Drawable localDrawable = d;
        if (localDrawable != null) {
          localDrawable.draw(paramCanvas);
        }
        super.setAlpha((int)(g * f1));
        super.draw(paramCanvas);
        super.setAlpha(g);
      }
    }
    if (a) {
      a(paramCanvas);
    }
  }
  
  protected void onBoundsChange(Rect paramRect)
  {
    Drawable localDrawable = d;
    if (localDrawable != null) {
      localDrawable.setBounds(paramRect);
    }
    super.onBoundsChange(paramRect);
  }
  
  public void setAlpha(int paramInt)
  {
    g = paramInt;
    Drawable localDrawable = d;
    if (localDrawable != null) {
      localDrawable.setAlpha(paramInt);
    }
    super.setAlpha(paramInt);
  }
  
  public void setColorFilter(ColorFilter paramColorFilter)
  {
    Drawable localDrawable = d;
    if (localDrawable != null) {
      localDrawable.setColorFilter(paramColorFilter);
    }
    super.setColorFilter(paramColorFilter);
  }
}
