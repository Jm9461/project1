package uk.co.chrisjenx.calligraphy;

import android.annotation.TargetApi;
import android.content.Context;
import android.os.Build.VERSION;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.LayoutInflater.Factory;
import android.view.LayoutInflater.Factory2;
import android.view.View;
import android.view.ViewGroup;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import org.xmlpull.v1.XmlPullParser;

class CalligraphyLayoutInflater
  extends LayoutInflater
  implements CalligraphyActivityFactory
{
  private static final String[] sClassPrefixList = { "android.widget.", "android.webkit." };
  private final int mAttributeId;
  private final CalligraphyFactory mCalligraphyFactory;
  private Field mConstructorArgs = null;
  private boolean mSetPrivateFactory = false;
  
  protected CalligraphyLayoutInflater(Context paramContext, int paramInt)
  {
    super(paramContext);
    mAttributeId = paramInt;
    mCalligraphyFactory = new CalligraphyFactory(paramInt);
    setUpLayoutFactories(false);
  }
  
  protected CalligraphyLayoutInflater(LayoutInflater paramLayoutInflater, Context paramContext, int paramInt, boolean paramBoolean)
  {
    super(paramLayoutInflater, paramContext);
    mAttributeId = paramInt;
    mCalligraphyFactory = new CalligraphyFactory(paramInt);
    setUpLayoutFactories(paramBoolean);
  }
  
  /* Error */
  private View createCustomViewInternal(View paramView1, View paramView2, String paramString, Context paramContext, AttributeSet paramAttributeSet)
  {
    // Byte code:
    //   0: invokestatic 76	uk/co/chrisjenx/calligraphy/CalligraphyConfig:get	()Luk/co/chrisjenx/calligraphy/CalligraphyConfig;
    //   3: invokevirtual 80	uk/co/chrisjenx/calligraphy/CalligraphyConfig:isCustomViewCreation	()Z
    //   6: ifne +5 -> 11
    //   9: aload_2
    //   10: areturn
    //   11: aload_2
    //   12: ifnonnull +124 -> 136
    //   15: aload_3
    //   16: bipush 46
    //   18: invokevirtual 84	java/lang/String:indexOf	(I)I
    //   21: iconst_m1
    //   22: if_icmple +114 -> 136
    //   25: aload_0
    //   26: getfield 45	uk/co/chrisjenx/calligraphy/CalligraphyLayoutInflater:mConstructorArgs	Ljava/lang/reflect/Field;
    //   29: ifnonnull +14 -> 43
    //   32: aload_0
    //   33: ldc 4
    //   35: ldc 85
    //   37: invokestatic 91	uk/co/chrisjenx/calligraphy/ReflectionUtils:getField	(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
    //   40: putfield 45	uk/co/chrisjenx/calligraphy/CalligraphyLayoutInflater:mConstructorArgs	Ljava/lang/reflect/Field;
    //   43: aload_0
    //   44: getfield 45	uk/co/chrisjenx/calligraphy/CalligraphyLayoutInflater:mConstructorArgs	Ljava/lang/reflect/Field;
    //   47: aload_0
    //   48: invokestatic 95	uk/co/chrisjenx/calligraphy/ReflectionUtils:getValue	(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
    //   51: checkcast 97	[Ljava/lang/Object;
    //   54: astore 6
    //   56: aload 6
    //   58: iconst_0
    //   59: aaload
    //   60: astore 7
    //   62: aload 6
    //   64: iconst_0
    //   65: aload 4
    //   67: aastore
    //   68: aload_0
    //   69: getfield 45	uk/co/chrisjenx/calligraphy/CalligraphyLayoutInflater:mConstructorArgs	Ljava/lang/reflect/Field;
    //   72: aload_0
    //   73: aload 6
    //   75: invokestatic 101	uk/co/chrisjenx/calligraphy/ReflectionUtils:setValue	(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
    //   78: aload_0
    //   79: aload_3
    //   80: aconst_null
    //   81: aload 5
    //   83: invokevirtual 105	android/view/LayoutInflater:createView	(Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;
    //   86: astore_1
    //   87: aload 6
    //   89: iconst_0
    //   90: aload 7
    //   92: aastore
    //   93: aload_0
    //   94: getfield 45	uk/co/chrisjenx/calligraphy/CalligraphyLayoutInflater:mConstructorArgs	Ljava/lang/reflect/Field;
    //   97: aload_0
    //   98: aload 6
    //   100: invokestatic 101	uk/co/chrisjenx/calligraphy/ReflectionUtils:setValue	(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
    //   103: aload_1
    //   104: areturn
    //   105: astore_1
    //   106: aload 6
    //   108: iconst_0
    //   109: aload 7
    //   111: aastore
    //   112: aload_0
    //   113: getfield 45	uk/co/chrisjenx/calligraphy/CalligraphyLayoutInflater:mConstructorArgs	Ljava/lang/reflect/Field;
    //   116: aload_0
    //   117: aload 6
    //   119: invokestatic 101	uk/co/chrisjenx/calligraphy/ReflectionUtils:setValue	(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
    //   122: aload_1
    //   123: athrow
    //   124: astore_1
    //   125: aload 6
    //   127: iconst_0
    //   128: aload 7
    //   130: aastore
    //   131: aload_2
    //   132: astore_1
    //   133: goto -40 -> 93
    //   136: aload_2
    //   137: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	138	0	this	CalligraphyLayoutInflater
    //   0	138	1	paramView1	View
    //   0	138	2	paramView2	View
    //   0	138	3	paramString	String
    //   0	138	4	paramContext	Context
    //   0	138	5	paramAttributeSet	AttributeSet
    //   54	72	6	arrayOfObject	Object[]
    //   60	69	7	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   78	87	105	finally
    //   78	87	124	java/lang/ClassNotFoundException
  }
  
  private void setPrivateFactoryInternal()
  {
    if (mSetPrivateFactory) {
      return;
    }
    if (!CalligraphyConfig.get().isReflection()) {
      return;
    }
    if (!(getContext() instanceof LayoutInflater.Factory2))
    {
      mSetPrivateFactory = true;
      return;
    }
    Method localMethod = ReflectionUtils.getMethod(LayoutInflater.class, "setPrivateFactory");
    if (localMethod != null) {
      ReflectionUtils.invokeMethod(this, localMethod, new Object[] { new PrivateWrapperFactory2((LayoutInflater.Factory2)getContext(), this, mCalligraphyFactory) });
    }
    mSetPrivateFactory = true;
  }
  
  private void setUpLayoutFactories(boolean paramBoolean)
  {
    if (paramBoolean) {
      return;
    }
    if ((Build.VERSION.SDK_INT >= 11) && (getFactory2() != null) && (!(getFactory2() instanceof WrapperFactory2))) {
      setFactory2(getFactory2());
    }
    if ((getFactory() != null) && (!(getFactory() instanceof WrapperFactory))) {
      setFactory(getFactory());
    }
  }
  
  public LayoutInflater cloneInContext(Context paramContext)
  {
    return new CalligraphyLayoutInflater(this, paramContext, mAttributeId, true);
  }
  
  public View inflate(XmlPullParser paramXmlPullParser, ViewGroup paramViewGroup, boolean paramBoolean)
  {
    setPrivateFactoryInternal();
    return super.inflate(paramXmlPullParser, paramViewGroup, paramBoolean);
  }
  
  @TargetApi(11)
  public View onActivityCreateView(View paramView1, View paramView2, String paramString, Context paramContext, AttributeSet paramAttributeSet)
  {
    return mCalligraphyFactory.onViewCreated(createCustomViewInternal(paramView1, paramView2, paramString, paramContext, paramAttributeSet), paramContext, paramAttributeSet);
  }
  
  @TargetApi(11)
  protected View onCreateView(View paramView, String paramString, AttributeSet paramAttributeSet)
  {
    return mCalligraphyFactory.onViewCreated(super.onCreateView(paramView, paramString, paramAttributeSet), getContext(), paramAttributeSet);
  }
  
  protected View onCreateView(String paramString, AttributeSet paramAttributeSet)
  {
    Object localObject1 = null;
    String[] arrayOfString = sClassPrefixList;
    int j = arrayOfString.length;
    int i = 0;
    while (i < j)
    {
      Object localObject2 = arrayOfString[i];
      try
      {
        localObject2 = createView(paramString, (String)localObject2, paramAttributeSet);
        localObject1 = localObject2;
      }
      catch (ClassNotFoundException localClassNotFoundException) {}
      i += 1;
    }
    Object localObject3 = localObject1;
    if (localObject1 == null) {
      localObject3 = super.onCreateView(paramString, paramAttributeSet);
    }
    return mCalligraphyFactory.onViewCreated((View)localObject3, ((View)localObject3).getContext(), paramAttributeSet);
  }
  
  public void setFactory(LayoutInflater.Factory paramFactory)
  {
    if (!(paramFactory instanceof WrapperFactory))
    {
      super.setFactory(new WrapperFactory(paramFactory, this, mCalligraphyFactory));
      return;
    }
    super.setFactory(paramFactory);
  }
  
  @TargetApi(11)
  public void setFactory2(LayoutInflater.Factory2 paramFactory2)
  {
    if (!(paramFactory2 instanceof WrapperFactory2))
    {
      super.setFactory2(new WrapperFactory2(paramFactory2, mCalligraphyFactory));
      return;
    }
    super.setFactory2(paramFactory2);
  }
  
  @TargetApi(11)
  private static class PrivateWrapperFactory2
    extends CalligraphyLayoutInflater.WrapperFactory2
  {
    private final CalligraphyLayoutInflater mInflater;
    
    public PrivateWrapperFactory2(LayoutInflater.Factory2 paramFactory2, CalligraphyLayoutInflater paramCalligraphyLayoutInflater, CalligraphyFactory paramCalligraphyFactory)
    {
      super(paramCalligraphyFactory);
      mInflater = paramCalligraphyLayoutInflater;
    }
    
    public View onCreateView(View paramView, String paramString, Context paramContext, AttributeSet paramAttributeSet)
    {
      return mCalligraphyFactory.onViewCreated(mInflater.createCustomViewInternal(paramView, mFactory2.onCreateView(paramView, paramString, paramContext, paramAttributeSet), paramString, paramContext, paramAttributeSet), paramContext, paramAttributeSet);
    }
  }
  
  private static class WrapperFactory
    implements LayoutInflater.Factory
  {
    private final CalligraphyFactory mCalligraphyFactory;
    private final LayoutInflater.Factory mFactory;
    private final CalligraphyLayoutInflater mInflater;
    
    public WrapperFactory(LayoutInflater.Factory paramFactory, CalligraphyLayoutInflater paramCalligraphyLayoutInflater, CalligraphyFactory paramCalligraphyFactory)
    {
      mFactory = paramFactory;
      mInflater = paramCalligraphyLayoutInflater;
      mCalligraphyFactory = paramCalligraphyFactory;
    }
    
    public View onCreateView(String paramString, Context paramContext, AttributeSet paramAttributeSet)
    {
      if (Build.VERSION.SDK_INT < 11) {
        return mCalligraphyFactory.onViewCreated(mInflater.createCustomViewInternal(null, mFactory.onCreateView(paramString, paramContext, paramAttributeSet), paramString, paramContext, paramAttributeSet), paramContext, paramAttributeSet);
      }
      return mCalligraphyFactory.onViewCreated(mFactory.onCreateView(paramString, paramContext, paramAttributeSet), paramContext, paramAttributeSet);
    }
  }
  
  @TargetApi(11)
  private static class WrapperFactory2
    implements LayoutInflater.Factory2
  {
    protected final CalligraphyFactory mCalligraphyFactory;
    protected final LayoutInflater.Factory2 mFactory2;
    
    public WrapperFactory2(LayoutInflater.Factory2 paramFactory2, CalligraphyFactory paramCalligraphyFactory)
    {
      mFactory2 = paramFactory2;
      mCalligraphyFactory = paramCalligraphyFactory;
    }
    
    public View onCreateView(View paramView, String paramString, Context paramContext, AttributeSet paramAttributeSet)
    {
      return mCalligraphyFactory.onViewCreated(mFactory2.onCreateView(paramView, paramString, paramContext, paramAttributeSet), paramContext, paramAttributeSet);
    }
    
    public View onCreateView(String paramString, Context paramContext, AttributeSet paramAttributeSet)
    {
      return mCalligraphyFactory.onViewCreated(mFactory2.onCreateView(paramString, paramContext, paramAttributeSet), paramContext, paramAttributeSet);
    }
  }
}
