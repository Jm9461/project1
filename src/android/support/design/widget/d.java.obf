package android.support.design.widget;

import android.os.Handler;
import android.os.Handler.Callback;
import android.os.Looper;
import android.os.Message;
import java.lang.ref.WeakReference;

class t
{
  private static t e;
  private final Object a = new Object();
  private final Handler b = new Handler(Looper.getMainLooper(), new a());
  private c c;
  private c d;
  
  private t() {}
  
  static t a()
  {
    if (e == null) {
      e = new t();
    }
    return e;
  }
  
  private boolean a(c paramC, int paramInt)
  {
    b localB = (b)a.get();
    if (localB != null)
    {
      b.removeCallbacksAndMessages(paramC);
      localB.a(paramInt);
      return true;
    }
    return false;
  }
  
  private void b(c paramC)
  {
    int j = b;
    if (j == -2) {
      return;
    }
    int i = 2750;
    if (j > 0) {
      i = b;
    } else if (j == -1) {
      i = 1500;
    }
    b.removeCallbacksAndMessages(paramC);
    Handler localHandler = b;
    localHandler.sendMessageDelayed(Message.obtain(localHandler, 0, paramC), i);
  }
  
  private boolean c(b paramB)
  {
    c localC = c;
    return (localC != null) && (localC.a(paramB));
  }
  
  public void a(b paramB)
  {
    synchronized (a)
    {
      if ((c(paramB)) && (!c.c))
      {
        c.c = true;
        b.removeCallbacksAndMessages(c);
      }
      return;
    }
  }
  
  void a(c paramC)
  {
    synchronized (a)
    {
      if ((c == paramC) || (d == paramC)) {
        a(paramC, 2);
      }
      return;
    }
  }
  
  public void b(b paramB)
  {
    synchronized (a)
    {
      if ((c(paramB)) && (c.c))
      {
        c.c = false;
        b(c);
      }
      return;
    }
  }
  
  class a
    implements Handler.Callback
  {
    a() {}
    
    public boolean handleMessage(Message paramMessage)
    {
      if (what != 0) {
        return false;
      }
      a((t.c)obj);
      return true;
    }
  }
  
  static abstract interface b
  {
    public abstract void a(int paramInt);
  }
  
  private static class c
  {
    final WeakReference<t.b> a;
    int b;
    boolean c;
    
    boolean a(t.b paramB)
    {
      return (paramB != null) && (a.get() == paramB);
    }
  }
}
