package android.support.design.widget;

import android.support.v4.view.u;
import android.support.v4.widget.s;
import android.support.v4.widget.s.c;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;

public class SwipeDismissBehavior<V extends View>
  extends CoordinatorLayout.c<V>
{
  s a;
  b b;
  private boolean c;
  private float d = 0.0F;
  private boolean e;
  int f = 2;
  float g = 0.5F;
  float h = 0.0F;
  float i = 0.5F;
  private final s.c j = new a();
  
  public SwipeDismissBehavior() {}
  
  static float a(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    return Math.min(Math.max(paramFloat1, paramFloat2), paramFloat3);
  }
  
  static int a(int paramInt1, int paramInt2, int paramInt3)
  {
    return Math.min(Math.max(paramInt1, paramInt2), paramInt3);
  }
  
  private void a(ViewGroup paramViewGroup)
  {
    if (a == null)
    {
      if (e) {
        paramViewGroup = s.a(paramViewGroup, d, j);
      } else {
        paramViewGroup = s.a(paramViewGroup, j);
      }
      a = paramViewGroup;
    }
  }
  
  static float b(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    return (paramFloat3 - paramFloat1) / (paramFloat2 - paramFloat1);
  }
  
  public void a(float paramFloat)
  {
    i = a(0.0F, paramFloat, 1.0F);
  }
  
  public void a(int paramInt)
  {
    f = paramInt;
  }
  
  public boolean a(CoordinatorLayout paramCoordinatorLayout, V paramV, MotionEvent paramMotionEvent)
  {
    boolean bool = c;
    int k = paramMotionEvent.getActionMasked();
    if (k != 0)
    {
      if ((k == 1) || (k == 3)) {
        c = false;
      }
    }
    else
    {
      c = paramCoordinatorLayout.a(paramV, (int)paramMotionEvent.getX(), (int)paramMotionEvent.getY());
      bool = c;
    }
    if (bool)
    {
      a(paramCoordinatorLayout);
      return a.b(paramMotionEvent);
    }
    return false;
  }
  
  public boolean a(View paramView)
  {
    return true;
  }
  
  public void b(float paramFloat)
  {
    h = a(0.0F, paramFloat, 1.0F);
  }
  
  public boolean b(CoordinatorLayout paramCoordinatorLayout, V paramV, MotionEvent paramMotionEvent)
  {
    paramCoordinatorLayout = a;
    if (paramCoordinatorLayout != null)
    {
      paramCoordinatorLayout.a(paramMotionEvent);
      return true;
    }
    return false;
  }
  
  class a
    extends s.c
  {
    private int a;
    private int b = -1;
    
    a() {}
    
    private boolean a(View paramView, float paramFloat)
    {
      boolean bool2 = false;
      boolean bool3 = false;
      boolean bool1 = false;
      if (paramFloat != 0.0F)
      {
        if (u.k(paramView) == 1) {
          i = 1;
        } else {
          i = 0;
        }
        j = f;
        if (j == 2) {
          return true;
        }
        if (j == 0)
        {
          if (i != 0 ? paramFloat < 0.0F : paramFloat > 0.0F) {
            bool1 = true;
          }
          return bool1;
        }
        if (j == 1)
        {
          if (i != 0)
          {
            bool1 = bool2;
            if (paramFloat <= 0.0F) {
              break label113;
            }
          }
          else
          {
            bool1 = bool2;
            if (paramFloat >= 0.0F) {
              break label113;
            }
          }
          bool1 = true;
          label113:
          return bool1;
        }
        return false;
      }
      int i = paramView.getLeft();
      int j = a;
      int k = Math.round(paramView.getWidth() * g);
      bool1 = bool3;
      if (Math.abs(i - j) >= k) {
        bool1 = true;
      }
      return bool1;
    }
    
    public int a(View paramView)
    {
      return paramView.getWidth();
    }
    
    public int a(View paramView, int paramInt1, int paramInt2)
    {
      if (u.k(paramView) == 1) {
        paramInt2 = 1;
      } else {
        paramInt2 = 0;
      }
      int i = f;
      if (i == 0)
      {
        if (paramInt2 != 0)
        {
          paramInt2 = a - paramView.getWidth();
          i = a;
        }
        else
        {
          paramInt2 = a;
          i = a + paramView.getWidth();
        }
      }
      else if (i == 1)
      {
        if (paramInt2 != 0)
        {
          paramInt2 = a;
          i = a + paramView.getWidth();
        }
        else
        {
          paramInt2 = a - paramView.getWidth();
          i = a;
        }
      }
      else
      {
        paramInt2 = a - paramView.getWidth();
        i = a + paramView.getWidth();
      }
      return SwipeDismissBehavior.a(paramInt2, paramInt1, i);
    }
    
    public void a(View paramView, float paramFloat1, float paramFloat2)
    {
      b = -1;
      int i = paramView.getWidth();
      boolean bool = false;
      if (a(paramView, paramFloat1))
      {
        int j = paramView.getLeft();
        int k = a;
        if (j < k) {
          i = k - i;
        } else {
          i = k + i;
        }
        bool = true;
      }
      else
      {
        i = a;
      }
      if (a.d(i, paramView.getTop()))
      {
        u.a(paramView, new SwipeDismissBehavior.c(SwipeDismissBehavior.this, paramView, bool));
        return;
      }
      if (bool)
      {
        SwipeDismissBehavior.b localB = b;
        if (localB != null) {
          localB.a(paramView);
        }
      }
    }
    
    public void a(View paramView, int paramInt)
    {
      b = paramInt;
      a = paramView.getLeft();
      paramView = paramView.getParent();
      if (paramView != null) {
        paramView.requestDisallowInterceptTouchEvent(true);
      }
    }
    
    public void a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
    {
      float f1 = a + paramView.getWidth() * h;
      float f2 = a + paramView.getWidth() * i;
      if (paramInt1 <= f1)
      {
        paramView.setAlpha(1.0F);
        return;
      }
      if (paramInt1 >= f2)
      {
        paramView.setAlpha(0.0F);
        return;
      }
      paramView.setAlpha(SwipeDismissBehavior.a(0.0F, 1.0F - SwipeDismissBehavior.b(f1, f2, paramInt1), 1.0F));
    }
    
    public int b(View paramView, int paramInt1, int paramInt2)
    {
      return paramView.getTop();
    }
    
    public boolean b(View paramView, int paramInt)
    {
      return (b == -1) && (a(paramView));
    }
    
    public void c(int paramInt)
    {
      SwipeDismissBehavior.b localB = b;
      if (localB != null) {
        localB.a(paramInt);
      }
    }
  }
  
  public static abstract interface b
  {
    public abstract void a(int paramInt);
    
    public abstract void a(View paramView);
  }
  
  private class c
    implements Runnable
  {
    private final View c;
    private final boolean d;
    
    c(View paramView, boolean paramBoolean)
    {
      c = paramView;
      d = paramBoolean;
    }
    
    public void run()
    {
      Object localObject = a;
      if ((localObject != null) && (((s)localObject).a(true)))
      {
        u.a(c, this);
        return;
      }
      if (d)
      {
        localObject = b;
        if (localObject != null) {
          ((SwipeDismissBehavior.b)localObject).a(c);
        }
      }
    }
  }
}
