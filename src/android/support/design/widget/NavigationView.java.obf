package android.support.design.widget;

import a.b.c.j;
import android.content.Context;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.content.res.Resources.Theme;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.ClassLoaderCreator;
import android.os.Parcelable.Creator;
import android.support.design.internal.c;
import android.support.design.internal.f;
import android.support.v4.view.c0;
import android.support.v4.view.u;
import android.support.v7.view.menu.h;
import android.support.v7.view.menu.h.a;
import android.support.v7.widget.j1;
import android.util.AttributeSet;
import android.util.TypedValue;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.View.MeasureSpec;
import android.widget.FrameLayout;

public class NavigationView
  extends f
{
  private static final int[] k = { 16842912 };
  private static final int[] l = { -16842910 };
  private final android.support.design.internal.b f;
  private final c g = new c();
  b h;
  private final int i;
  private MenuInflater j;
  
  public NavigationView(Context paramContext)
  {
    this(paramContext, null);
  }
  
  public NavigationView(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, a.b.c.b.navigationViewStyle);
  }
  
  public NavigationView(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    f = new android.support.design.internal.b(paramContext);
    j1 localJ1 = android.support.design.internal.g.d(paramContext, paramAttributeSet, a.b.c.k.NavigationView, paramInt, j.Widget_Design_NavigationView, new int[0]);
    u.a(this, localJ1.b(a.b.c.k.NavigationView_android_background));
    if (localJ1.g(a.b.c.k.NavigationView_elevation)) {
      u.a(this, localJ1.c(a.b.c.k.NavigationView_elevation, 0));
    }
    u.a(this, localJ1.a(a.b.c.k.NavigationView_android_fitsSystemWindows, false));
    i = localJ1.c(a.b.c.k.NavigationView_android_maxWidth, 0);
    ColorStateList localColorStateList;
    if (localJ1.g(a.b.c.k.NavigationView_itemIconTint)) {
      localColorStateList = localJ1.a(a.b.c.k.NavigationView_itemIconTint);
    } else {
      localColorStateList = c(16842808);
    }
    paramInt = 0;
    int m = 0;
    if (localJ1.g(a.b.c.k.NavigationView_itemTextAppearance))
    {
      m = localJ1.g(a.b.c.k.NavigationView_itemTextAppearance, 0);
      paramInt = 1;
    }
    paramAttributeSet = null;
    if (localJ1.g(a.b.c.k.NavigationView_itemTextColor)) {
      paramAttributeSet = localJ1.a(a.b.c.k.NavigationView_itemTextColor);
    }
    Object localObject = paramAttributeSet;
    if (paramInt == 0)
    {
      localObject = paramAttributeSet;
      if (paramAttributeSet == null) {
        localObject = c(16842806);
      }
    }
    paramAttributeSet = localJ1.b(a.b.c.k.NavigationView_itemBackground);
    if (localJ1.g(a.b.c.k.NavigationView_itemHorizontalPadding))
    {
      n = localJ1.c(a.b.c.k.NavigationView_itemHorizontalPadding, 0);
      g.c(n);
    }
    int n = localJ1.c(a.b.c.k.NavigationView_itemIconPadding, 0);
    f.a(new a());
    g.b(1);
    g.a(paramContext, f);
    g.a(localColorStateList);
    if (paramInt != 0) {
      g.e(m);
    }
    g.b((ColorStateList)localObject);
    g.a(paramAttributeSet);
    g.d(n);
    f.a(g);
    addView((View)g.a(this));
    if (localJ1.g(a.b.c.k.NavigationView_menu)) {
      b(localJ1.g(a.b.c.k.NavigationView_menu, 0));
    }
    if (localJ1.g(a.b.c.k.NavigationView_headerLayout)) {
      a(localJ1.g(a.b.c.k.NavigationView_headerLayout, 0));
    }
    localJ1.a();
  }
  
  private ColorStateList c(int paramInt)
  {
    Object localObject = new TypedValue();
    if (!getContext().getTheme().resolveAttribute(paramInt, (TypedValue)localObject, true)) {
      return null;
    }
    ColorStateList localColorStateList = a.b.h.c.a.a.b(getContext(), resourceId);
    if (!getContext().getTheme().resolveAttribute(a.b.h.a.a.colorPrimary, (TypedValue)localObject, true)) {
      return null;
    }
    paramInt = data;
    int m = localColorStateList.getDefaultColor();
    localObject = l;
    int[] arrayOfInt1 = k;
    int[] arrayOfInt2 = FrameLayout.EMPTY_STATE_SET;
    int n = localColorStateList.getColorForState(l, m);
    return new ColorStateList(new int[][] { localObject, arrayOfInt1, arrayOfInt2 }, new int[] { n, paramInt, m });
  }
  
  private MenuInflater getMenuInflater()
  {
    if (j == null) {
      j = new a.b.h.f.g(getContext());
    }
    return j;
  }
  
  public View a(int paramInt)
  {
    return g.a(paramInt);
  }
  
  protected void a(c0 paramC0)
  {
    g.a(paramC0);
  }
  
  public void b(int paramInt)
  {
    g.b(true);
    getMenuInflater().inflate(paramInt, f);
    g.b(false);
    g.a(false);
  }
  
  public MenuItem getCheckedItem()
  {
    return g.d();
  }
  
  public int getHeaderCount()
  {
    return g.e();
  }
  
  public Drawable getItemBackground()
  {
    return g.f();
  }
  
  public int getItemHorizontalPadding()
  {
    return g.g();
  }
  
  public int getItemIconPadding()
  {
    return g.h();
  }
  
  public ColorStateList getItemIconTintList()
  {
    return g.j();
  }
  
  public ColorStateList getItemTextColor()
  {
    return g.i();
  }
  
  public Menu getMenu()
  {
    return f;
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    int m = View.MeasureSpec.getMode(paramInt1);
    if (m != Integer.MIN_VALUE)
    {
      if (m != 0)
      {
        if (m != 1073741824) {}
      }
      else {
        paramInt1 = View.MeasureSpec.makeMeasureSpec(i, 1073741824);
      }
    }
    else {
      paramInt1 = View.MeasureSpec.makeMeasureSpec(Math.min(View.MeasureSpec.getSize(paramInt1), i), 1073741824);
    }
    super.onMeasure(paramInt1, paramInt2);
  }
  
  protected void onRestoreInstanceState(Parcelable paramParcelable)
  {
    if (!(paramParcelable instanceof c))
    {
      super.onRestoreInstanceState(paramParcelable);
      return;
    }
    paramParcelable = (c)paramParcelable;
    super.onRestoreInstanceState(paramParcelable.a());
    f.b(e);
  }
  
  protected Parcelable onSaveInstanceState()
  {
    c localC = new c(super.onSaveInstanceState());
    e = new Bundle();
    f.d(e);
    return localC;
  }
  
  public void setCheckedItem(int paramInt)
  {
    MenuItem localMenuItem = f.findItem(paramInt);
    if (localMenuItem != null) {
      g.a((android.support.v7.view.menu.k)localMenuItem);
    }
  }
  
  public void setCheckedItem(MenuItem paramMenuItem)
  {
    paramMenuItem = f.findItem(paramMenuItem.getItemId());
    if (paramMenuItem != null)
    {
      g.a((android.support.v7.view.menu.k)paramMenuItem);
      return;
    }
    throw new IllegalArgumentException("Called setCheckedItem(MenuItem) with an item that is not in the current menu.");
  }
  
  public void setItemBackground(Drawable paramDrawable)
  {
    g.a(paramDrawable);
  }
  
  public void setItemBackgroundResource(int paramInt)
  {
    setItemBackground(android.support.v4.content.a.c(getContext(), paramInt));
  }
  
  public void setItemHorizontalPadding(int paramInt)
  {
    g.c(paramInt);
  }
  
  public void setItemHorizontalPaddingResource(int paramInt)
  {
    g.c(getResources().getDimensionPixelSize(paramInt));
  }
  
  public void setItemIconPadding(int paramInt)
  {
    g.d(paramInt);
  }
  
  public void setItemIconPaddingResource(int paramInt)
  {
    g.d(getResources().getDimensionPixelSize(paramInt));
  }
  
  public void setItemIconTintList(ColorStateList paramColorStateList)
  {
    g.a(paramColorStateList);
  }
  
  public void setItemTextAppearance(int paramInt)
  {
    g.e(paramInt);
  }
  
  public void setItemTextColor(ColorStateList paramColorStateList)
  {
    g.b(paramColorStateList);
  }
  
  public void setNavigationItemSelectedListener(b paramB)
  {
    h = paramB;
  }
  
  class a
    implements h.a
  {
    a() {}
    
    public void a(h paramH) {}
    
    public boolean a(h paramH, MenuItem paramMenuItem)
    {
      paramH = h;
      return (paramH != null) && (paramH.a(paramMenuItem));
    }
  }
  
  public static abstract interface b
  {
    public abstract boolean a(MenuItem paramMenuItem);
  }
  
  public static class c
    extends android.support.v4.view.a
  {
    public static final Parcelable.Creator<c> CREATOR = new a();
    public Bundle e;
    
    public c(Parcel paramParcel, ClassLoader paramClassLoader)
    {
      super(paramClassLoader);
      e = paramParcel.readBundle(paramClassLoader);
    }
    
    public c(Parcelable paramParcelable)
    {
      super();
    }
    
    public void writeToParcel(Parcel paramParcel, int paramInt)
    {
      super.writeToParcel(paramParcel, paramInt);
      paramParcel.writeBundle(e);
    }
    
    static final class a
      implements Parcelable.ClassLoaderCreator<NavigationView.c>
    {
      a() {}
      
      public NavigationView.c createFromParcel(Parcel paramParcel)
      {
        return new NavigationView.c(paramParcel, null);
      }
      
      public NavigationView.c createFromParcel(Parcel paramParcel, ClassLoader paramClassLoader)
      {
        return new NavigationView.c(paramParcel, paramClassLoader);
      }
      
      public NavigationView.c[] newArray(int paramInt)
      {
        return new NavigationView.c[paramInt];
      }
    }
  }
}
