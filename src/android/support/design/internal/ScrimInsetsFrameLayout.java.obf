package android.support.design.internal;

import a.b.c.j;
import a.b.c.k;
import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.support.v4.view.c0;
import android.support.v4.view.p;
import android.support.v4.view.u;
import android.util.AttributeSet;
import android.view.View;
import android.widget.FrameLayout;

public class f
  extends FrameLayout
{
  Drawable c;
  Rect d;
  private Rect e = new Rect();
  
  public f(Context paramContext)
  {
    this(paramContext, null);
  }
  
  public f(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, 0);
  }
  
  public f(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    paramContext = g.c(paramContext, paramAttributeSet, k.ScrimInsetsFrameLayout, paramInt, j.Widget_Design_ScrimInsetsFrameLayout, new int[0]);
    c = paramContext.getDrawable(k.ScrimInsetsFrameLayout_insetForeground);
    paramContext.recycle();
    setWillNotDraw(true);
    u.a(this, new a());
  }
  
  protected void a(c0 paramC0)
  {
    throw null;
  }
  
  public void draw(Canvas paramCanvas)
  {
    super.draw(paramCanvas);
    int i = getWidth();
    int j = getHeight();
    if ((d != null) && (c != null))
    {
      int k = paramCanvas.save();
      paramCanvas.translate(getScrollX(), getScrollY());
      e.set(0, 0, i, d.top);
      c.setBounds(e);
      c.draw(paramCanvas);
      e.set(0, j - d.bottom, i, j);
      c.setBounds(e);
      c.draw(paramCanvas);
      Rect localRect1 = e;
      Rect localRect2 = d;
      localRect1.set(0, top, left, j - bottom);
      c.setBounds(e);
      c.draw(paramCanvas);
      localRect1 = e;
      localRect2 = d;
      localRect1.set(i - right, top, i, j - bottom);
      c.setBounds(e);
      c.draw(paramCanvas);
      paramCanvas.restoreToCount(k);
    }
  }
  
  protected void onAttachedToWindow()
  {
    super.onAttachedToWindow();
    Drawable localDrawable = c;
    if (localDrawable != null) {
      localDrawable.setCallback(this);
    }
  }
  
  protected void onDetachedFromWindow()
  {
    super.onDetachedFromWindow();
    Drawable localDrawable = c;
    if (localDrawable != null) {
      localDrawable.setCallback(null);
    }
  }
  
  class a
    implements p
  {
    a() {}
    
    public c0 a(View paramView, c0 paramC0)
    {
      paramView = f.this;
      if (d == null) {
        d = new Rect();
      }
      d.set(paramC0.c(), paramC0.e(), paramC0.d(), paramC0.b());
      a(paramC0);
      paramView = f.this;
      boolean bool;
      if ((paramC0.f()) && (c != null)) {
        bool = false;
      } else {
        bool = true;
      }
      paramView.setWillNotDraw(bool);
      u.B(f.this);
      return paramC0.a();
    }
  }
}
