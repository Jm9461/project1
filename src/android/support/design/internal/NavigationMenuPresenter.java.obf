package android.support.design.internal;

import a.b.c.d;
import android.content.Context;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.Drawable.ConstantState;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v4.view.c0;
import android.support.v4.view.u;
import android.support.v7.view.menu.k;
import android.support.v7.view.menu.p;
import android.support.v7.view.menu.p.a;
import android.support.v7.view.menu.q;
import android.support.v7.view.menu.v;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.RecyclerView.d0;
import android.support.v7.widget.RecyclerView.g;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.SubMenu;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import java.util.ArrayList;

public class c
  implements p
{
  private NavigationMenuView c;
  LinearLayout d;
  private p.a e;
  android.support.v7.view.menu.h f;
  private int g;
  c h;
  LayoutInflater i;
  int j;
  boolean k;
  ColorStateList l;
  ColorStateList m;
  Drawable n;
  int o;
  int p;
  private int q;
  int r;
  final View.OnClickListener s = new a();
  
  public c() {}
  
  public int a()
  {
    return g;
  }
  
  public q a(ViewGroup paramViewGroup)
  {
    if (c == null)
    {
      c = ((NavigationMenuView)i.inflate(a.b.c.h.design_navigation_menu, paramViewGroup, false));
      if (h == null) {
        h = new c();
      }
      d = ((LinearLayout)i.inflate(a.b.c.h.design_navigation_item_header, c, false));
      c.setAdapter(h);
    }
    return c;
  }
  
  public View a(int paramInt)
  {
    View localView = i.inflate(paramInt, d, false);
    a(localView);
    return localView;
  }
  
  public void a(Context paramContext, android.support.v7.view.menu.h paramH)
  {
    i = LayoutInflater.from(paramContext);
    f = paramH;
    r = paramContext.getResources().getDimensionPixelOffset(d.design_navigation_separator_vertical_padding);
  }
  
  public void a(ColorStateList paramColorStateList)
  {
    m = paramColorStateList;
    a(false);
  }
  
  public void a(Drawable paramDrawable)
  {
    n = paramDrawable;
    a(false);
  }
  
  public void a(Parcelable paramParcelable)
  {
    if ((paramParcelable instanceof Bundle))
    {
      paramParcelable = (Bundle)paramParcelable;
      Object localObject = paramParcelable.getSparseParcelableArray("android:menu:list");
      if (localObject != null) {
        c.restoreHierarchyState((SparseArray)localObject);
      }
      localObject = paramParcelable.getBundle("android:menu:adapter");
      if (localObject != null) {
        h.a((Bundle)localObject);
      }
      paramParcelable = paramParcelable.getSparseParcelableArray("android:menu:header");
      if (paramParcelable != null) {
        d.restoreHierarchyState(paramParcelable);
      }
    }
  }
  
  public void a(c0 paramC0)
  {
    int i1 = paramC0.e();
    if (q != i1)
    {
      q = i1;
      if (d.getChildCount() == 0)
      {
        NavigationMenuView localNavigationMenuView = c;
        localNavigationMenuView.setPadding(0, q, 0, localNavigationMenuView.getPaddingBottom());
      }
    }
    u.a(d, paramC0);
  }
  
  public void a(android.support.v7.view.menu.h paramH, boolean paramBoolean)
  {
    p.a localA = e;
    if (localA != null) {
      localA.a(paramH, paramBoolean);
    }
  }
  
  public void a(k paramK)
  {
    h.a(paramK);
  }
  
  public void a(View paramView)
  {
    d.addView(paramView);
    paramView = c;
    paramView.setPadding(0, 0, 0, paramView.getPaddingBottom());
  }
  
  public void a(boolean paramBoolean)
  {
    c localC = h;
    if (localC != null) {
      localC.g();
    }
  }
  
  public boolean a(android.support.v7.view.menu.h paramH, k paramK)
  {
    return false;
  }
  
  public boolean a(v paramV)
  {
    return false;
  }
  
  public void b(int paramInt)
  {
    g = paramInt;
  }
  
  public void b(ColorStateList paramColorStateList)
  {
    l = paramColorStateList;
    a(false);
  }
  
  public void b(boolean paramBoolean)
  {
    c localC = h;
    if (localC != null) {
      localC.b(paramBoolean);
    }
  }
  
  public boolean b()
  {
    return false;
  }
  
  public boolean b(android.support.v7.view.menu.h paramH, k paramK)
  {
    return false;
  }
  
  public Parcelable c()
  {
    Bundle localBundle = new Bundle();
    if (c != null)
    {
      localObject = new SparseArray();
      c.saveHierarchyState((SparseArray)localObject);
      localBundle.putSparseParcelableArray("android:menu:list", (SparseArray)localObject);
    }
    Object localObject = h;
    if (localObject != null) {
      localBundle.putBundle("android:menu:adapter", ((c)localObject).e());
    }
    if (d != null)
    {
      localObject = new SparseArray();
      d.saveHierarchyState((SparseArray)localObject);
      localBundle.putSparseParcelableArray("android:menu:header", (SparseArray)localObject);
    }
    return localBundle;
  }
  
  public void c(int paramInt)
  {
    o = paramInt;
    a(false);
  }
  
  public k d()
  {
    return h.f();
  }
  
  public void d(int paramInt)
  {
    p = paramInt;
    a(false);
  }
  
  public int e()
  {
    return d.getChildCount();
  }
  
  public void e(int paramInt)
  {
    j = paramInt;
    k = true;
    a(false);
  }
  
  public Drawable f()
  {
    return n;
  }
  
  public int g()
  {
    return o;
  }
  
  public int h()
  {
    return p;
  }
  
  public ColorStateList i()
  {
    return l;
  }
  
  public ColorStateList j()
  {
    return m;
  }
  
  class a
    implements View.OnClickListener
  {
    a() {}
    
    public void onClick(View paramView)
    {
      paramView = (NavigationMenuItemView)paramView;
      b(true);
      paramView = paramView.getItemData();
      c localC = c.this;
      boolean bool = f.a(paramView, localC, 0);
      if ((paramView != null) && (paramView.isCheckable()) && (bool)) {
        h.a(paramView);
      }
      b(false);
      a(false);
    }
  }
  
  private static class b
    extends c.k
  {
    public b(View paramView)
    {
      super();
    }
  }
  
  private class c
    extends RecyclerView.g<c.k>
  {
    private final ArrayList<c.e> c = new ArrayList();
    private k d;
    private boolean e;
    
    c()
    {
      h();
    }
    
    private void a(int paramInt1, int paramInt2)
    {
      while (paramInt1 < paramInt2)
      {
        c.get(paramInt1)).b = true;
        paramInt1 += 1;
      }
    }
    
    private void h()
    {
      if (e) {
        return;
      }
      e = true;
      c.clear();
      c.add(new c.d());
      int n = -1;
      int j = 0;
      boolean bool2 = false;
      int m = 0;
      int i2 = f.n().size();
      for (;;)
      {
        boolean bool1 = false;
        if (m >= i2) {
          break;
        }
        Object localObject1 = (k)f.n().get(m);
        if (((k)localObject1).isChecked()) {
          a((k)localObject1);
        }
        if (((k)localObject1).isCheckable()) {
          ((k)localObject1).c(false);
        }
        Object localObject2;
        int i;
        int k;
        if (((k)localObject1).hasSubMenu())
        {
          localObject2 = ((k)localObject1).getSubMenu();
          if (((SubMenu)localObject2).hasVisibleItems())
          {
            if (m != 0) {
              c.add(new c.f(r, 0));
            }
            c.add(new c.g((k)localObject1));
            i = 0;
            int i3 = c.size();
            int i1 = 0;
            int i4 = ((SubMenu)localObject2).size();
            while (i1 < i4)
            {
              k localK = (k)((SubMenu)localObject2).getItem(i1);
              k = i;
              if (localK.isVisible())
              {
                k = i;
                if (i == 0)
                {
                  k = i;
                  if (localK.getIcon() != null) {
                    k = 1;
                  }
                }
                if (localK.isCheckable()) {
                  localK.c(false);
                }
                if (((k)localObject1).isChecked()) {
                  a((k)localObject1);
                }
                c.add(new c.g(localK));
              }
              i1 += 1;
              i = k;
            }
            if (i != 0) {
              a(i3, c.size());
            }
          }
          i = j;
          bool1 = bool2;
        }
        else
        {
          k = ((k)localObject1).getGroupId();
          if (k != n)
          {
            j = c.size();
            if (((k)localObject1).getIcon() != null) {
              bool1 = true;
            }
            bool2 = bool1;
            i = j;
            bool1 = bool2;
            if (m != 0)
            {
              i = j + 1;
              localObject2 = c;
              j = r;
              ((ArrayList)localObject2).add(new c.f(j, j));
              bool1 = bool2;
            }
          }
          else
          {
            i = j;
            bool1 = bool2;
            if (!bool2)
            {
              i = j;
              bool1 = bool2;
              if (((k)localObject1).getIcon() != null)
              {
                bool1 = true;
                a(j, c.size());
                i = j;
              }
            }
          }
          localObject1 = new c.g((k)localObject1);
          b = bool1;
          c.add(localObject1);
          n = k;
        }
        m += 1;
        j = i;
        bool2 = bool1;
      }
      e = false;
    }
    
    public int a()
    {
      return c.size();
    }
    
    public long a(int paramInt)
    {
      return paramInt;
    }
    
    public void a(Bundle paramBundle)
    {
      int j = paramBundle.getInt("android:menu:checked", 0);
      int i;
      Object localObject1;
      if (j != 0)
      {
        e = true;
        i = 0;
        int k = c.size();
        while (i < k)
        {
          localObject1 = (c.e)c.get(i);
          if ((localObject1 instanceof c.g))
          {
            localObject1 = ((c.g)localObject1).a();
            if ((localObject1 != null) && (((k)localObject1).getItemId() == j))
            {
              a((k)localObject1);
              break;
            }
          }
          i += 1;
        }
        e = false;
        h();
      }
      paramBundle = paramBundle.getSparseParcelableArray("android:menu:action_views");
      if (paramBundle != null)
      {
        i = 0;
        j = c.size();
        while (i < j)
        {
          localObject1 = (c.e)c.get(i);
          if ((localObject1 instanceof c.g))
          {
            Object localObject2 = ((c.g)localObject1).a();
            if (localObject2 != null)
            {
              localObject1 = ((k)localObject2).getActionView();
              if (localObject1 != null)
              {
                localObject2 = (e)paramBundle.get(((k)localObject2).getItemId());
                if (localObject2 != null) {
                  ((View)localObject1).restoreHierarchyState((SparseArray)localObject2);
                }
              }
            }
          }
          i += 1;
        }
      }
    }
    
    public void a(c.k paramK)
    {
      if ((paramK instanceof c.h)) {
        ((NavigationMenuItemView)c).d();
      }
    }
    
    public void a(c.k paramK, int paramInt)
    {
      int i = b(paramInt);
      if (i != 0)
      {
        if (i != 1)
        {
          if (i != 2) {
            return;
          }
          localObject = (c.f)c.get(paramInt);
          c.setPadding(0, ((c.f)localObject).b(), 0, ((c.f)localObject).a());
          return;
        }
        ((TextView)c).setText(((c.g)c.get(paramInt)).a().getTitle());
        return;
      }
      Object localObject = (NavigationMenuItemView)c;
      ((NavigationMenuItemView)localObject).setIconTintList(m);
      paramK = c.this;
      if (k) {
        ((NavigationMenuItemView)localObject).setTextAppearance(j);
      }
      paramK = l;
      if (paramK != null) {
        ((NavigationMenuItemView)localObject).setTextColor(paramK);
      }
      paramK = n;
      if (paramK != null) {
        paramK = paramK.getConstantState().newDrawable();
      } else {
        paramK = null;
      }
      u.a((View)localObject, paramK);
      paramK = (c.g)c.get(paramInt);
      ((NavigationMenuItemView)localObject).setNeedsEmptyIcon(b);
      ((NavigationMenuItemView)localObject).setHorizontalPadding(o);
      ((NavigationMenuItemView)localObject).setIconPadding(p);
      ((NavigationMenuItemView)localObject).a(paramK.a(), 0);
    }
    
    public void a(k paramK)
    {
      if (d != paramK)
      {
        if (!paramK.isCheckable()) {
          return;
        }
        k localK = d;
        if (localK != null) {
          localK.setChecked(false);
        }
        d = paramK;
        paramK.setChecked(true);
        return;
      }
    }
    
    public int b(int paramInt)
    {
      c.e localE = (c.e)c.get(paramInt);
      if ((localE instanceof c.f)) {
        return 2;
      }
      if ((localE instanceof c.d)) {
        return 3;
      }
      if ((localE instanceof c.g))
      {
        if (((c.g)localE).a().hasSubMenu()) {
          return 1;
        }
        return 0;
      }
      throw new RuntimeException("Unknown item type.");
    }
    
    public c.k b(ViewGroup paramViewGroup, int paramInt)
    {
      if (paramInt != 0)
      {
        if (paramInt != 1)
        {
          if (paramInt != 2)
          {
            if (paramInt != 3) {
              return null;
            }
            return new c.b(d);
          }
          return new c.i(i, paramViewGroup);
        }
        return new c.j(i, paramViewGroup);
      }
      c localC = c.this;
      return new c.h(i, paramViewGroup, s);
    }
    
    public void b(boolean paramBoolean)
    {
      e = paramBoolean;
    }
    
    public Bundle e()
    {
      Bundle localBundle = new Bundle();
      Object localObject = d;
      if (localObject != null) {
        localBundle.putInt("android:menu:checked", ((k)localObject).getItemId());
      }
      SparseArray localSparseArray = new SparseArray();
      int i = 0;
      int j = c.size();
      while (i < j)
      {
        localObject = (c.e)c.get(i);
        if ((localObject instanceof c.g))
        {
          k localK = ((c.g)localObject).a();
          if (localK != null) {
            localObject = localK.getActionView();
          } else {
            localObject = null;
          }
          if (localObject != null)
          {
            e localE = new e();
            ((View)localObject).saveHierarchyState(localE);
            localSparseArray.put(localK.getItemId(), localE);
          }
        }
        i += 1;
      }
      localBundle.putSparseParcelableArray("android:menu:action_views", localSparseArray);
      return localBundle;
    }
    
    public k f()
    {
      return d;
    }
    
    public void g()
    {
      h();
      d();
    }
  }
  
  private static class d
    implements c.e
  {
    d() {}
  }
  
  private static abstract interface e {}
  
  private static class f
    implements c.e
  {
    private final int a;
    private final int b;
    
    public f(int paramInt1, int paramInt2)
    {
      a = paramInt1;
      b = paramInt2;
    }
    
    public int a()
    {
      return b;
    }
    
    public int b()
    {
      return a;
    }
  }
  
  private static class g
    implements c.e
  {
    private final k a;
    boolean b;
    
    g(k paramK)
    {
      a = paramK;
    }
    
    public k a()
    {
      return a;
    }
  }
  
  private static class h
    extends c.k
  {
    public h(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup, View.OnClickListener paramOnClickListener)
    {
      super();
      c.setOnClickListener(paramOnClickListener);
    }
  }
  
  private static class i
    extends c.k
  {
    public i(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup)
    {
      super();
    }
  }
  
  private static class j
    extends c.k
  {
    public j(LayoutInflater paramLayoutInflater, ViewGroup paramViewGroup)
    {
      super();
    }
  }
  
  private static abstract class k
    extends RecyclerView.d0
  {
    public k(View paramView)
    {
      super();
    }
  }
}
