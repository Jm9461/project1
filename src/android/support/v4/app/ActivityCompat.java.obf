package android.support.v4.app;

import android.app.Activity;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;

public class a
  extends android.support.v4.content.a
{
  private static c c;
  
  public static c a()
  {
    return c;
  }
  
  public static void a(Activity paramActivity)
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      paramActivity.finishAffinity();
      return;
    }
    paramActivity.finish();
  }
  
  public static void a(Activity paramActivity, Intent paramIntent, int paramInt, Bundle paramBundle)
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      paramActivity.startActivityForResult(paramIntent, paramInt, paramBundle);
      return;
    }
    paramActivity.startActivityForResult(paramIntent, paramInt);
  }
  
  public static void a(final Activity paramActivity, String[] paramArrayOfString, final int paramInt)
  {
    c localC = c;
    if ((localC != null) && (localC.a(paramActivity, paramArrayOfString, paramInt))) {
      return;
    }
    if (Build.VERSION.SDK_INT >= 23)
    {
      if ((paramActivity instanceof d)) {
        ((d)paramActivity).a(paramInt);
      }
      paramActivity.requestPermissions(paramArrayOfString, paramInt);
      return;
    }
    if ((paramActivity instanceof b)) {
      new Handler(Looper.getMainLooper()).post(new a(paramArrayOfString, paramActivity, paramInt));
    }
  }
  
  static final class a
    implements Runnable
  {
    a(String[] paramArrayOfString, Activity paramActivity, int paramInt) {}
    
    public void run()
    {
      int[] arrayOfInt = new int[c.length];
      PackageManager localPackageManager = paramActivity.getPackageManager();
      String str = paramActivity.getPackageName();
      int j = c.length;
      int i = 0;
      while (i < j)
      {
        arrayOfInt[i] = localPackageManager.checkPermission(c[i], str);
        i += 1;
      }
      ((a.b)paramActivity).onRequestPermissionsResult(paramInt, c, arrayOfInt);
    }
  }
  
  public static abstract interface b
  {
    public abstract void onRequestPermissionsResult(int paramInt, String[] paramArrayOfString, int[] paramArrayOfInt);
  }
  
  public static abstract interface c
  {
    public abstract boolean a(Activity paramActivity, int paramInt1, int paramInt2, Intent paramIntent);
    
    public abstract boolean a(Activity paramActivity, String[] paramArrayOfString, int paramInt);
  }
  
  public static abstract interface d
  {
    public abstract void a(int paramInt);
  }
}
