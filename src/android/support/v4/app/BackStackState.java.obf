package android.support.v4.app;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.text.TextUtils;
import android.util.Log;
import android.util.SparseArray;
import java.util.ArrayList;

final class d
  implements Parcelable
{
  public static final Parcelable.Creator<d> CREATOR = new a();
  final int[] c;
  final int d;
  final int e;
  final String f;
  final int g;
  final int h;
  final CharSequence i;
  final int j;
  final CharSequence k;
  final ArrayList<String> l;
  final ArrayList<String> m;
  final boolean n;
  
  public d(Parcel paramParcel)
  {
    c = paramParcel.createIntArray();
    d = paramParcel.readInt();
    e = paramParcel.readInt();
    f = paramParcel.readString();
    g = paramParcel.readInt();
    h = paramParcel.readInt();
    i = ((CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(paramParcel));
    j = paramParcel.readInt();
    k = ((CharSequence)TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(paramParcel));
    l = paramParcel.createStringArrayList();
    m = paramParcel.createStringArrayList();
    boolean bool;
    if (paramParcel.readInt() != 0) {
      bool = true;
    } else {
      bool = false;
    }
    n = bool;
  }
  
  public d(c paramC)
  {
    int i3 = b.size();
    c = new int[i3 * 6];
    if (i)
    {
      int i2 = 0;
      int i1 = 0;
      while (i1 < i3)
      {
        c.a localA = (c.a)b.get(i1);
        int[] arrayOfInt = c;
        int i4 = i2 + 1;
        arrayOfInt[i2] = a;
        int i5 = i4 + 1;
        f localF = b;
        if (localF != null) {
          i2 = g;
        } else {
          i2 = -1;
        }
        arrayOfInt[i4] = i2;
        arrayOfInt = c;
        i2 = i5 + 1;
        arrayOfInt[i5] = c;
        i4 = i2 + 1;
        arrayOfInt[i2] = d;
        i5 = i4 + 1;
        arrayOfInt[i4] = e;
        i2 = i5 + 1;
        arrayOfInt[i5] = f;
        i1 += 1;
      }
      d = g;
      e = h;
      f = j;
      g = l;
      h = m;
      i = n;
      j = o;
      k = p;
      l = q;
      m = r;
      n = s;
      return;
    }
    paramC = new IllegalStateException("Not on back stack");
    for (;;)
    {
      throw paramC;
    }
  }
  
  public c a(l paramL)
  {
    c localC = new c(paramL);
    int i2 = 0;
    int i1 = 0;
    while (i2 < c.length)
    {
      c.a localA = new c.a();
      Object localObject = c;
      int i3 = i2 + 1;
      a = localObject[i2];
      if (l.G)
      {
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append("Instantiate ");
        ((StringBuilder)localObject).append(localC);
        ((StringBuilder)localObject).append(" op #");
        ((StringBuilder)localObject).append(i1);
        ((StringBuilder)localObject).append(" base fragment #");
        ((StringBuilder)localObject).append(c[i3]);
        Log.v("FragmentManager", ((StringBuilder)localObject).toString());
      }
      localObject = c;
      i2 = i3 + 1;
      i3 = localObject[i3];
      if (i3 >= 0) {
        b = ((f)g.get(i3));
      } else {
        b = null;
      }
      localObject = c;
      i3 = i2 + 1;
      c = localObject[i2];
      i2 = i3 + 1;
      d = localObject[i3];
      i3 = i2 + 1;
      e = localObject[i2];
      f = localObject[i3];
      c = c;
      d = d;
      e = e;
      f = f;
      localC.a(localA);
      i1 += 1;
      i2 = i3 + 1;
    }
    g = d;
    h = e;
    j = f;
    l = g;
    i = true;
    m = h;
    n = i;
    o = j;
    p = k;
    q = l;
    r = m;
    s = n;
    localC.a(1);
    return localC;
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.provideAs(TypeTransformer.java:780)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.e1expr(TypeTransformer.java:496)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:713)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:698)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.s1stmt(TypeTransformer.java:810)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.sxStmt(TypeTransformer.java:840)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:206)\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\n");
  }
  
  static final class a
    implements Parcelable.Creator<d>
  {
    a() {}
    
    public d createFromParcel(Parcel paramParcel)
    {
      return new d(paramParcel);
    }
    
    public d[] newArray(int paramInt)
    {
      return new d[paramInt];
    }
  }
}
