package android.support.v7.widget;

import android.content.Context;
import android.support.v4.view.u;
import android.support.v4.view.v;
import android.text.TextUtils;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnAttachStateChangeListener;
import android.view.View.OnHoverListener;
import android.view.View.OnLongClickListener;
import android.view.ViewConfiguration;
import android.view.accessibility.AccessibilityManager;

class m1
  implements View.OnLongClickListener, View.OnHoverListener, View.OnAttachStateChangeListener
{
  private static m1 l;
  private static m1 m;
  private final View c;
  private final CharSequence d;
  private final int e;
  private final Runnable f = new a();
  private final Runnable g = new b();
  private int h;
  private int i;
  private n1 j;
  private boolean k;
  
  private m1(View paramView, CharSequence paramCharSequence)
  {
    c = paramView;
    d = paramCharSequence;
    e = v.a(ViewConfiguration.get(c.getContext()));
    c();
    c.setOnLongClickListener(this);
    c.setOnHoverListener(this);
  }
  
  private static void a(m1 paramM1)
  {
    m1 localM1 = l;
    if (localM1 != null) {
      localM1.b();
    }
    l = paramM1;
    paramM1 = l;
    if (paramM1 != null) {
      paramM1.d();
    }
  }
  
  public static void a(View paramView, CharSequence paramCharSequence)
  {
    m1 localM1 = l;
    if ((localM1 != null) && (c == paramView)) {
      a(null);
    }
    if (TextUtils.isEmpty(paramCharSequence))
    {
      paramCharSequence = m;
      if ((paramCharSequence != null) && (c == paramView)) {
        paramCharSequence.a();
      }
      paramView.setOnLongClickListener(null);
      paramView.setLongClickable(false);
      paramView.setOnHoverListener(null);
      return;
    }
    new m1(paramView, paramCharSequence);
  }
  
  private boolean a(MotionEvent paramMotionEvent)
  {
    int n = (int)paramMotionEvent.getX();
    int i1 = (int)paramMotionEvent.getY();
    if ((Math.abs(n - h) <= e) && (Math.abs(i1 - i) <= e)) {
      return false;
    }
    h = n;
    i = i1;
    return true;
  }
  
  private void b()
  {
    c.removeCallbacks(f);
  }
  
  private void c()
  {
    h = Integer.MAX_VALUE;
    i = Integer.MAX_VALUE;
  }
  
  private void d()
  {
    c.postDelayed(f, ViewConfiguration.getLongPressTimeout());
  }
  
  void a()
  {
    if (m == this)
    {
      m = null;
      n1 localN1 = j;
      if (localN1 != null)
      {
        localN1.a();
        j = null;
        c();
        c.removeOnAttachStateChangeListener(this);
      }
      else
      {
        Log.e("TooltipCompatHandler", "sActiveHandler.mPopup == null");
      }
    }
    if (l == this) {
      a(null);
    }
    c.removeCallbacks(g);
  }
  
  void a(boolean paramBoolean)
  {
    if (!u.x(c)) {
      return;
    }
    a(null);
    m1 localM1 = m;
    if (localM1 != null) {
      localM1.a();
    }
    m = this;
    k = paramBoolean;
    j = new n1(c.getContext());
    j.a(c, h, i, k, d);
    c.addOnAttachStateChangeListener(this);
    long l1;
    if (k) {
      l1 = 2500L;
    } else if ((u.r(c) & 0x1) == 1) {
      l1 = 3000L - ViewConfiguration.getLongPressTimeout();
    } else {
      l1 = 15000L - ViewConfiguration.getLongPressTimeout();
    }
    c.removeCallbacks(g);
    c.postDelayed(g, l1);
  }
  
  public boolean onHover(View paramView, MotionEvent paramMotionEvent)
  {
    if ((j != null) && (k)) {
      return false;
    }
    paramView = (AccessibilityManager)c.getContext().getSystemService("accessibility");
    if ((paramView.isEnabled()) && (paramView.isTouchExplorationEnabled())) {
      return false;
    }
    int n = paramMotionEvent.getAction();
    if (n != 7)
    {
      if (n != 10) {
        return false;
      }
      c();
      a();
      return false;
    }
    if ((c.isEnabled()) && (j == null) && (a(paramMotionEvent))) {
      a(this);
    }
    return false;
  }
  
  public boolean onLongClick(View paramView)
  {
    h = (paramView.getWidth() / 2);
    i = (paramView.getHeight() / 2);
    a(true);
    return true;
  }
  
  public void onViewAttachedToWindow(View paramView) {}
  
  public void onViewDetachedFromWindow(View paramView)
  {
    a();
  }
  
  class a
    implements Runnable
  {
    a() {}
    
    public void run()
    {
      a(false);
    }
  }
  
  class b
    implements Runnable
  {
    b() {}
    
    public void run()
    {
      a();
    }
  }
}
