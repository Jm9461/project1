package android.support.v7.widget;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.res.ColorStateList;
import android.content.res.Resources.NotFoundException;
import android.graphics.Typeface;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.support.v4.content.e.f.a;
import android.support.v4.widget.b;
import android.support.v4.widget.p;
import android.text.method.PasswordTransformationMethod;
import android.util.AttributeSet;
import android.widget.TextView;
import java.lang.ref.WeakReference;

class w
{
  private final TextView a;
  private h1 b;
  private h1 c;
  private h1 d;
  private h1 e;
  private h1 f;
  private h1 g;
  private final x h;
  private int i = 0;
  private Typeface j;
  private boolean k;
  
  w(TextView paramTextView)
  {
    a = paramTextView;
    h = new x(a);
  }
  
  private static h1 a(Context paramContext, j paramJ, int paramInt)
  {
    paramContext = paramJ.b(paramContext, paramInt);
    if (paramContext != null)
    {
      paramJ = new h1();
      d = true;
      a = paramContext;
      return paramJ;
    }
    return null;
  }
  
  private void a(Context paramContext, j1 paramJ1)
  {
    i = paramJ1.d(a.b.h.a.j.TextAppearance_android_textStyle, i);
    boolean bool2 = paramJ1.g(a.b.h.a.j.TextAppearance_android_fontFamily);
    boolean bool1 = false;
    int m;
    if ((!bool2) && (!paramJ1.g(a.b.h.a.j.TextAppearance_fontFamily)))
    {
      if (paramJ1.g(a.b.h.a.j.TextAppearance_android_typeface))
      {
        k = false;
        m = paramJ1.d(a.b.h.a.j.TextAppearance_android_typeface, 1);
        if (m != 1)
        {
          if (m != 2)
          {
            if (m != 3) {
              return;
            }
            j = Typeface.MONOSPACE;
            return;
          }
          j = Typeface.SERIF;
          return;
        }
        j = Typeface.SANS_SERIF;
      }
      return;
    }
    j = null;
    if (paramJ1.g(a.b.h.a.j.TextAppearance_fontFamily)) {
      m = a.b.h.a.j.TextAppearance_fontFamily;
    } else {
      m = a.b.h.a.j.TextAppearance_android_fontFamily;
    }
    if (!paramContext.isRestricted())
    {
      paramContext = new a(new WeakReference(a));
      try
      {
        j = paramJ1.a(m, i, paramContext);
        if (j == null) {
          bool1 = true;
        }
        k = bool1;
      }
      catch (Resources.NotFoundException paramContext) {}catch (UnsupportedOperationException paramContext) {}
    }
    if (j == null)
    {
      paramContext = paramJ1.d(m);
      if (paramContext != null) {
        j = Typeface.create(paramContext, i);
      }
    }
  }
  
  private void a(Drawable paramDrawable, h1 paramH1)
  {
    if ((paramDrawable != null) && (paramH1 != null)) {
      j.a(paramDrawable, paramH1, a.getDrawableState());
    }
  }
  
  private void b(int paramInt, float paramFloat)
  {
    h.a(paramInt, paramFloat);
  }
  
  void a()
  {
    Drawable[] arrayOfDrawable;
    if ((b != null) || (c != null) || (d != null) || (e != null))
    {
      arrayOfDrawable = a.getCompoundDrawables();
      a(arrayOfDrawable[0], b);
      a(arrayOfDrawable[1], c);
      a(arrayOfDrawable[2], d);
      a(arrayOfDrawable[3], e);
    }
    if ((Build.VERSION.SDK_INT >= 17) && ((f != null) || (g != null)))
    {
      arrayOfDrawable = a.getCompoundDrawablesRelative();
      a(arrayOfDrawable[0], f);
      a(arrayOfDrawable[2], g);
    }
  }
  
  void a(int paramInt)
  {
    h.a(paramInt);
  }
  
  void a(int paramInt, float paramFloat)
  {
    if ((!b.a) && (!h())) {
      b(paramInt, paramFloat);
    }
  }
  
  void a(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    h.a(paramInt1, paramInt2, paramInt3, paramInt4);
  }
  
  void a(Context paramContext, int paramInt)
  {
    j1 localJ1 = j1.a(paramContext, paramInt, a.b.h.a.j.TextAppearance);
    if (localJ1.g(a.b.h.a.j.TextAppearance_textAllCaps)) {
      a(localJ1.a(a.b.h.a.j.TextAppearance_textAllCaps, false));
    }
    if ((Build.VERSION.SDK_INT < 23) && (localJ1.g(a.b.h.a.j.TextAppearance_android_textColor)))
    {
      ColorStateList localColorStateList = localJ1.a(a.b.h.a.j.TextAppearance_android_textColor);
      if (localColorStateList != null) {
        a.setTextColor(localColorStateList);
      }
    }
    if ((localJ1.g(a.b.h.a.j.TextAppearance_android_textSize)) && (localJ1.c(a.b.h.a.j.TextAppearance_android_textSize, -1) == 0)) {
      a.setTextSize(0, 0.0F);
    }
    a(paramContext, localJ1);
    localJ1.a();
    paramContext = j;
    if (paramContext != null) {
      a.setTypeface(paramContext, i);
    }
  }
  
  @SuppressLint({"NewApi"})
  void a(AttributeSet paramAttributeSet, int paramInt)
  {
    Context localContext = a.getContext();
    Object localObject1 = j.a();
    Object localObject2 = j1.a(localContext, paramAttributeSet, a.b.h.a.j.AppCompatTextHelper, paramInt, 0);
    int i1 = ((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_textAppearance, -1);
    if (((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableLeft)) {
      b = a(localContext, (j)localObject1, ((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableLeft, 0));
    }
    if (((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableTop)) {
      c = a(localContext, (j)localObject1, ((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableTop, 0));
    }
    if (((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableRight)) {
      d = a(localContext, (j)localObject1, ((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableRight, 0));
    }
    if (((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableBottom)) {
      e = a(localContext, (j)localObject1, ((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableBottom, 0));
    }
    if (Build.VERSION.SDK_INT >= 17)
    {
      if (((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableStart)) {
        f = a(localContext, (j)localObject1, ((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableStart, 0));
      }
      if (((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableEnd)) {
        g = a(localContext, (j)localObject1, ((j1)localObject2).g(a.b.h.a.j.AppCompatTextHelper_android_drawableEnd, 0));
      }
    }
    ((j1)localObject2).a();
    boolean bool3 = a.getTransformationMethod() instanceof PasswordTransformationMethod;
    boolean bool1 = false;
    boolean bool2 = false;
    int m = 0;
    int n = 0;
    Object localObject7 = null;
    localObject2 = null;
    j1 localJ11 = null;
    Object localObject4 = null;
    localObject1 = null;
    Object localObject5 = null;
    Object localObject3 = null;
    Object localObject6 = null;
    if (i1 != -1)
    {
      j1 localJ12 = j1.a(localContext, i1, a.b.h.a.j.TextAppearance);
      bool1 = bool2;
      m = n;
      if (!bool3)
      {
        bool1 = bool2;
        m = n;
        if (localJ12.g(a.b.h.a.j.TextAppearance_textAllCaps))
        {
          bool1 = localJ12.a(a.b.h.a.j.TextAppearance_textAllCaps, false);
          m = 1;
        }
      }
      a(localContext, localJ12);
      localObject2 = localObject7;
      localObject3 = localObject6;
      if (Build.VERSION.SDK_INT < 23)
      {
        localObject1 = localJ11;
        if (localJ12.g(a.b.h.a.j.TextAppearance_android_textColor)) {
          localObject1 = localJ12.a(a.b.h.a.j.TextAppearance_android_textColor);
        }
        if (localJ12.g(a.b.h.a.j.TextAppearance_android_textColorHint)) {
          localObject5 = localJ12.a(a.b.h.a.j.TextAppearance_android_textColorHint);
        }
        localObject2 = localObject1;
        localObject4 = localObject5;
        localObject3 = localObject6;
        if (localJ12.g(a.b.h.a.j.TextAppearance_android_textColorLink))
        {
          localObject3 = localJ12.a(a.b.h.a.j.TextAppearance_android_textColorLink);
          localObject4 = localObject5;
          localObject2 = localObject1;
        }
      }
      localJ12.a();
      localObject1 = localObject4;
    }
    localJ11 = j1.a(localContext, paramAttributeSet, a.b.h.a.j.TextAppearance, paramInt, 0);
    bool2 = bool1;
    n = m;
    if (!bool3)
    {
      bool2 = bool1;
      n = m;
      if (localJ11.g(a.b.h.a.j.TextAppearance_textAllCaps))
      {
        n = 1;
        bool2 = localJ11.a(a.b.h.a.j.TextAppearance_textAllCaps, false);
      }
    }
    localObject4 = localObject2;
    localObject5 = localObject1;
    localObject6 = localObject3;
    if (Build.VERSION.SDK_INT < 23)
    {
      if (localJ11.g(a.b.h.a.j.TextAppearance_android_textColor)) {
        localObject2 = localJ11.a(a.b.h.a.j.TextAppearance_android_textColor);
      }
      if (localJ11.g(a.b.h.a.j.TextAppearance_android_textColorHint)) {
        localObject1 = localJ11.a(a.b.h.a.j.TextAppearance_android_textColorHint);
      }
      localObject4 = localObject2;
      localObject5 = localObject1;
      localObject6 = localObject3;
      if (localJ11.g(a.b.h.a.j.TextAppearance_android_textColorLink))
      {
        localObject6 = localJ11.a(a.b.h.a.j.TextAppearance_android_textColorLink);
        localObject5 = localObject1;
        localObject4 = localObject2;
      }
    }
    if ((Build.VERSION.SDK_INT >= 28) && (localJ11.g(a.b.h.a.j.TextAppearance_android_textSize)) && (localJ11.c(a.b.h.a.j.TextAppearance_android_textSize, -1) == 0)) {
      a.setTextSize(0, 0.0F);
    }
    a(localContext, localJ11);
    localJ11.a();
    if (localObject4 != null) {
      a.setTextColor(localObject4);
    }
    if (localObject5 != null) {
      a.setHintTextColor((ColorStateList)localObject5);
    }
    if (localObject6 != null) {
      a.setLinkTextColor((ColorStateList)localObject6);
    }
    if ((!bool3) && (n != 0)) {
      a(bool2);
    }
    localObject1 = j;
    if (localObject1 != null) {
      a.setTypeface((Typeface)localObject1, i);
    }
    h.a(paramAttributeSet, paramInt);
    if (b.a) {
      if (h.f() != 0)
      {
        localObject1 = h.e();
        if (localObject1.length > 0) {
          if (a.getAutoSizeStepGranularity() != -1.0F) {
            a.setAutoSizeTextTypeUniformWithConfiguration(h.c(), h.b(), h.d(), 0);
          } else {
            a.setAutoSizeTextTypeUniformWithPresetSizes((int[])localObject1, 0);
          }
        }
      }
      else {}
    }
    paramAttributeSet = j1.a(localContext, paramAttributeSet, a.b.h.a.j.AppCompatTextView);
    paramInt = paramAttributeSet.c(a.b.h.a.j.AppCompatTextView_firstBaselineToTopHeight, -1);
    m = paramAttributeSet.c(a.b.h.a.j.AppCompatTextView_lastBaselineToBottomHeight, -1);
    n = paramAttributeSet.c(a.b.h.a.j.AppCompatTextView_lineHeight, -1);
    paramAttributeSet.a();
    if (paramInt != -1) {
      p.a(a, paramInt);
    }
    if (m != -1) {
      p.b(a, m);
    }
    if (n != -1) {
      p.c(a, n);
    }
  }
  
  void a(WeakReference<TextView> paramWeakReference, Typeface paramTypeface)
  {
    if (k)
    {
      j = paramTypeface;
      paramWeakReference = (TextView)paramWeakReference.get();
      if (paramWeakReference != null) {
        paramWeakReference.setTypeface(paramTypeface, i);
      }
    }
  }
  
  void a(boolean paramBoolean)
  {
    a.setAllCaps(paramBoolean);
  }
  
  void a(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    if (!b.a) {
      b();
    }
  }
  
  void a(int[] paramArrayOfInt, int paramInt)
  {
    h.a(paramArrayOfInt, paramInt);
  }
  
  void b()
  {
    h.a();
  }
  
  int c()
  {
    return h.b();
  }
  
  int d()
  {
    return h.c();
  }
  
  int e()
  {
    return h.d();
  }
  
  int[] f()
  {
    return h.e();
  }
  
  int g()
  {
    return h.f();
  }
  
  boolean h()
  {
    return h.g();
  }
  
  class a
    extends f.a
  {
    a(WeakReference paramWeakReference) {}
    
    public void a(int paramInt) {}
    
    public void a(Typeface paramTypeface)
    {
      a(a, paramTypeface);
    }
  }
}
