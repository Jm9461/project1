package android.support.v7.widget;

import java.util.List;

class s0
{
  final a a;
  
  s0(a paramA)
  {
    a = paramA;
  }
  
  private void a(List<d.b> paramList, int paramInt1, int paramInt2)
  {
    d.b localB1 = (d.b)paramList.get(paramInt1);
    d.b localB2 = (d.b)paramList.get(paramInt2);
    int i = a;
    if (i != 1)
    {
      if (i != 2)
      {
        if (i != 4) {
          return;
        }
        b(paramList, paramInt1, localB1, paramInt2, localB2);
        return;
      }
      a(paramList, paramInt1, localB1, paramInt2, localB2);
      return;
    }
    c(paramList, paramInt1, localB1, paramInt2, localB2);
  }
  
  private int b(List<d.b> paramList)
  {
    int j = 0;
    int i = paramList.size() - 1;
    while (i >= 0)
    {
      int k;
      if (geta == 8)
      {
        k = j;
        if (j != 0) {
          return i;
        }
      }
      else
      {
        k = 1;
      }
      i -= 1;
      j = k;
    }
    return -1;
  }
  
  private void c(List<d.b> paramList, int paramInt1, d.b paramB1, int paramInt2, d.b paramB2)
  {
    int i = 0;
    if (d < b) {
      i = 0 - 1;
    }
    int j = i;
    if (b < b) {
      j = i + 1;
    }
    i = b;
    int k = b;
    if (i <= k) {
      b = (k + d);
    }
    i = b;
    k = d;
    if (i <= k) {
      d = (k + d);
    }
    b += j;
    paramList.set(paramInt1, paramB2);
    paramList.set(paramInt2, paramB1);
  }
  
  void a(List<d.b> paramList)
  {
    for (;;)
    {
      int i = b(paramList);
      if (i == -1) {
        break;
      }
      a(paramList, i, i + 1);
    }
  }
  
  void a(List<d.b> paramList, int paramInt1, d.b paramB1, int paramInt2, d.b paramB2)
  {
    d.b localB = null;
    int k = 0;
    int n = b;
    int i1 = d;
    int i;
    int j;
    if (n < i1)
    {
      m = 0;
      i = k;
      j = m;
      if (b == n)
      {
        i = k;
        j = m;
        if (d == i1 - n)
        {
          i = 1;
          j = m;
        }
      }
    }
    else
    {
      m = 1;
      i = k;
      j = m;
      if (b == i1 + 1)
      {
        i = k;
        j = m;
        if (d == n - i1)
        {
          i = 1;
          j = m;
        }
      }
    }
    k = d;
    int m = b;
    if (k < m)
    {
      b = (m - 1);
    }
    else
    {
      n = d;
      if (k < m + n)
      {
        d = (n - 1);
        a = 2;
        d = 1;
        if (d == 0)
        {
          paramList.remove(paramInt2);
          a.a(paramB2);
        }
        return;
      }
    }
    k = b;
    m = b;
    if (k <= m)
    {
      b = (m + 1);
    }
    else
    {
      n = d;
      if (k < m + n)
      {
        localB = a.a(2, k + 1, m + n - k, null);
        d = (b - b);
      }
    }
    if (i != 0)
    {
      paramList.set(paramInt1, paramB2);
      paramList.remove(paramInt2);
      a.a(paramB1);
      return;
    }
    if (j != 0)
    {
      if (localB != null)
      {
        i = b;
        if (i > b) {
          b = (i - d);
        }
        i = d;
        if (i > b) {
          d = (i - d);
        }
      }
      i = b;
      if (i > b) {
        b = (i - d);
      }
      i = d;
      if (i > b) {
        d = (i - d);
      }
    }
    else
    {
      if (localB != null)
      {
        i = b;
        if (i >= b) {
          b = (i - d);
        }
        i = d;
        if (i >= b) {
          d = (i - d);
        }
      }
      i = b;
      if (i >= b) {
        b = (i - d);
      }
      i = d;
      if (i >= b) {
        d = (i - d);
      }
    }
    paramList.set(paramInt1, paramB2);
    if (b != d) {
      paramList.set(paramInt2, paramB1);
    } else {
      paramList.remove(paramInt2);
    }
    if (localB != null) {
      paramList.add(paramInt1, localB);
    }
  }
  
  void b(List<d.b> paramList, int paramInt1, d.b paramB1, int paramInt2, d.b paramB2)
  {
    d.b localB1 = null;
    d.b localB2 = null;
    int i = d;
    int j = b;
    int k;
    if (i < j)
    {
      b = (j - 1);
    }
    else
    {
      k = d;
      if (i < j + k)
      {
        d = (k - 1);
        localB1 = a.a(4, b, 1, c);
      }
    }
    i = b;
    j = b;
    if (i <= j)
    {
      b = (j + 1);
    }
    else
    {
      k = d;
      if (i < j + k)
      {
        j = j + k - i;
        localB2 = a.a(4, i + 1, j, c);
        d -= j;
      }
    }
    paramList.set(paramInt2, paramB1);
    if (d > 0)
    {
      paramList.set(paramInt1, paramB2);
    }
    else
    {
      paramList.remove(paramInt1);
      a.a(paramB2);
    }
    if (localB1 != null) {
      paramList.add(paramInt1, localB1);
    }
    if (localB2 != null) {
      paramList.add(paramInt1, localB2);
    }
  }
  
  static abstract interface a
  {
    public abstract d.b a(int paramInt1, int paramInt2, int paramInt3, Object paramObject);
    
    public abstract void a(d.b paramB);
  }
}
