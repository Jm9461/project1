package android.support.v7.view.menu;

import a.b.h.a.d;
import android.content.Context;
import android.content.res.Resources;
import android.os.Parcelable;
import android.support.v7.widget.p0;
import android.support.v7.widget.r0;
import android.util.DisplayMetrics;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnAttachStateChangeListener;
import android.view.View.OnKeyListener;
import android.view.ViewGroup;
import android.view.ViewTreeObserver;
import android.view.ViewTreeObserver.OnGlobalLayoutListener;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.FrameLayout;
import android.widget.ListView;
import android.widget.PopupWindow.OnDismissListener;
import android.widget.TextView;

final class u
  extends n
  implements PopupWindow.OnDismissListener, AdapterView.OnItemClickListener, p, View.OnKeyListener
{
  private static final int x = a.b.h.a.g.abc_popup_menu_item_layout;
  private final Context d;
  private final h e;
  private final g f;
  private final boolean g;
  private final int h;
  private final int i;
  private final int j;
  final r0 k;
  final ViewTreeObserver.OnGlobalLayoutListener l = new a();
  private final View.OnAttachStateChangeListener m = new b();
  private PopupWindow.OnDismissListener n;
  private View o;
  View p;
  private p.a q;
  ViewTreeObserver r;
  private boolean s;
  private boolean t;
  private int u;
  private int v = 0;
  private boolean w;
  
  public u(Context paramContext, h paramH, View paramView, int paramInt1, int paramInt2, boolean paramBoolean)
  {
    d = paramContext;
    e = paramH;
    g = paramBoolean;
    f = new g(paramH, LayoutInflater.from(paramContext), g, x);
    i = paramInt1;
    j = paramInt2;
    Resources localResources = paramContext.getResources();
    h = Math.max(getDisplayMetricswidthPixels / 2, localResources.getDimensionPixelSize(d.abc_config_prefDialogWidth));
    o = paramView;
    k = new r0(d, null, i, j);
    paramH.a(this, paramContext);
  }
  
  private boolean i()
  {
    if (e()) {
      return true;
    }
    if (!s)
    {
      Object localObject = o;
      if (localObject == null) {
        return false;
      }
      p = ((View)localObject);
      k.a(this);
      k.a(this);
      k.a(true);
      localObject = p;
      int i1;
      if (r == null) {
        i1 = 1;
      } else {
        i1 = 0;
      }
      r = ((View)localObject).getViewTreeObserver();
      if (i1 != 0) {
        r.addOnGlobalLayoutListener(l);
      }
      ((View)localObject).addOnAttachStateChangeListener(m);
      k.a((View)localObject);
      k.c(v);
      if (!t)
      {
        u = n.a(f, null, d, h);
        t = true;
      }
      k.b(u);
      k.e(2);
      k.a(h());
      k.d();
      localObject = k.f();
      ((ListView)localObject).setOnKeyListener(this);
      if ((w) && (e.h() != null))
      {
        FrameLayout localFrameLayout = (FrameLayout)LayoutInflater.from(d).inflate(a.b.h.a.g.abc_popup_menu_header_item_layout, (ViewGroup)localObject, false);
        TextView localTextView = (TextView)localFrameLayout.findViewById(16908310);
        if (localTextView != null) {
          localTextView.setText(e.h());
        }
        localFrameLayout.setEnabled(false);
        ((ListView)localObject).addHeaderView(localFrameLayout, null, false);
      }
      k.a(f);
      k.d();
      return true;
    }
    return false;
  }
  
  public void a(int paramInt)
  {
    v = paramInt;
  }
  
  public void a(Parcelable paramParcelable) {}
  
  public void a(h paramH) {}
  
  public void a(h paramH, boolean paramBoolean)
  {
    if (paramH != e) {
      return;
    }
    dismiss();
    p.a localA = q;
    if (localA != null) {
      localA.a(paramH, paramBoolean);
    }
  }
  
  public void a(p.a paramA)
  {
    q = paramA;
  }
  
  public void a(View paramView)
  {
    o = paramView;
  }
  
  public void a(PopupWindow.OnDismissListener paramOnDismissListener)
  {
    n = paramOnDismissListener;
  }
  
  public void a(boolean paramBoolean)
  {
    t = false;
    g localG = f;
    if (localG != null) {
      localG.notifyDataSetChanged();
    }
  }
  
  public boolean a(v paramV)
  {
    if (paramV.hasVisibleItems())
    {
      Object localObject = new o(d, paramV, p, g, i, j);
      ((o)localObject).a(q);
      ((o)localObject).a(n.b(paramV));
      ((o)localObject).a(n);
      n = null;
      e.a(false);
      int i2 = k.g();
      int i3 = k.h();
      int i1 = i2;
      if ((Gravity.getAbsoluteGravity(v, android.support.v4.view.u.k(o)) & 0x7) == 5) {
        i1 = i2 + o.getWidth();
      }
      if (((o)localObject).a(i1, i3))
      {
        localObject = q;
        if (localObject != null) {
          ((p.a)localObject).a(paramV);
        }
        return true;
      }
    }
    return false;
  }
  
  public void b(int paramInt)
  {
    k.d(paramInt);
  }
  
  public void b(boolean paramBoolean)
  {
    f.a(paramBoolean);
  }
  
  public boolean b()
  {
    return false;
  }
  
  public Parcelable c()
  {
    return null;
  }
  
  public void c(int paramInt)
  {
    k.h(paramInt);
  }
  
  public void c(boolean paramBoolean)
  {
    w = paramBoolean;
  }
  
  public void d()
  {
    if (i()) {
      return;
    }
    throw new IllegalStateException("StandardMenuPopup cannot be used without an anchor");
  }
  
  public void dismiss()
  {
    if (e()) {
      k.dismiss();
    }
  }
  
  public boolean e()
  {
    return (!s) && (k.e());
  }
  
  public ListView f()
  {
    return k.f();
  }
  
  public void onDismiss()
  {
    s = true;
    e.close();
    Object localObject = r;
    if (localObject != null)
    {
      if (!((ViewTreeObserver)localObject).isAlive()) {
        r = p.getViewTreeObserver();
      }
      r.removeGlobalOnLayoutListener(l);
      r = null;
    }
    p.removeOnAttachStateChangeListener(m);
    localObject = n;
    if (localObject != null) {
      ((PopupWindow.OnDismissListener)localObject).onDismiss();
    }
  }
  
  public boolean onKey(View paramView, int paramInt, KeyEvent paramKeyEvent)
  {
    if ((paramKeyEvent.getAction() == 1) && (paramInt == 82))
    {
      dismiss();
      return true;
    }
    return false;
  }
  
  class a
    implements ViewTreeObserver.OnGlobalLayoutListener
  {
    a() {}
    
    public void onGlobalLayout()
    {
      if ((e()) && (!k.k()))
      {
        View localView = p;
        if ((localView != null) && (localView.isShown()))
        {
          k.d();
          return;
        }
        dismiss();
      }
    }
  }
  
  class b
    implements View.OnAttachStateChangeListener
  {
    b() {}
    
    public void onViewAttachedToWindow(View paramView) {}
    
    public void onViewDetachedFromWindow(View paramView)
    {
      Object localObject = r;
      if (localObject != null)
      {
        if (!((ViewTreeObserver)localObject).isAlive()) {
          r = paramView.getViewTreeObserver();
        }
        localObject = u.this;
        r.removeGlobalOnLayoutListener(l);
      }
      paramView.removeOnAttachStateChangeListener(this);
    }
  }
}
