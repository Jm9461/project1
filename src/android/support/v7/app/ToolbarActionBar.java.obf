package android.support.v7.app;

import a.b.h.f.i;
import android.content.Context;
import android.content.res.Configuration;
import android.graphics.drawable.Drawable;
import android.support.v4.view.u;
import android.support.v7.view.menu.h;
import android.support.v7.view.menu.h.a;
import android.support.v7.view.menu.p.a;
import android.support.v7.widget.Toolbar;
import android.support.v7.widget.Toolbar.f;
import android.support.v7.widget.f0;
import android.support.v7.widget.k1;
import android.view.KeyCharacterMap;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window.Callback;
import java.util.ArrayList;

class k
  extends a
{
  f0 a;
  boolean b;
  Window.Callback c;
  private boolean d;
  private boolean e;
  private ArrayList<a.b> f = new ArrayList();
  private final Runnable g = new a();
  private final Toolbar.f h = new b();
  
  k(Toolbar paramToolbar, CharSequence paramCharSequence, Window.Callback paramCallback)
  {
    a = new k1(paramToolbar, false);
    c = new e(paramCallback);
    a.setWindowCallback(c);
    paramToolbar.setOnMenuItemClickListener(h);
    a.setWindowTitle(paramCharSequence);
  }
  
  private Menu n()
  {
    if (!d)
    {
      a.a(new c(), new d());
      d = true;
    }
    return a.i();
  }
  
  public void a(float paramFloat)
  {
    u.a(a.j(), paramFloat);
  }
  
  public void a(int paramInt1, int paramInt2)
  {
    int i = a.h();
    a.d(paramInt1 & paramInt2 | (paramInt2 ^ 0xFFFFFFFF) & i);
  }
  
  public void a(Configuration paramConfiguration)
  {
    super.a(paramConfiguration);
  }
  
  public void a(Drawable paramDrawable)
  {
    a.a(paramDrawable);
  }
  
  public void a(CharSequence paramCharSequence)
  {
    a.setTitle(paramCharSequence);
  }
  
  public boolean a(int paramInt, KeyEvent paramKeyEvent)
  {
    Menu localMenu = n();
    if (localMenu != null)
    {
      if (paramKeyEvent != null) {
        i = paramKeyEvent.getDeviceId();
      } else {
        i = -1;
      }
      int i = KeyCharacterMap.load(i).getKeyboardType();
      boolean bool = true;
      if (i == 1) {
        bool = false;
      }
      localMenu.setQwertyMode(bool);
      return localMenu.performShortcut(paramInt, paramKeyEvent, 0);
    }
    return false;
  }
  
  public boolean a(KeyEvent paramKeyEvent)
  {
    if (paramKeyEvent.getAction() == 1) {
      k();
    }
    return true;
  }
  
  public void b(int paramInt)
  {
    a.c(paramInt);
  }
  
  public void b(Drawable paramDrawable)
  {
    a.b(paramDrawable);
  }
  
  public void b(CharSequence paramCharSequence)
  {
    a.setWindowTitle(paramCharSequence);
  }
  
  public void b(boolean paramBoolean)
  {
    if (paramBoolean == e) {
      return;
    }
    e = paramBoolean;
    int j = f.size();
    int i = 0;
    while (i < j)
    {
      ((a.b)f.get(i)).a(paramBoolean);
      i += 1;
    }
  }
  
  public void c(boolean paramBoolean) {}
  
  public void d(boolean paramBoolean)
  {
    int i;
    if (paramBoolean) {
      i = 4;
    } else {
      i = 0;
    }
    a(i, 4);
  }
  
  public void e(boolean paramBoolean)
  {
    int i;
    if (paramBoolean) {
      i = 8;
    } else {
      i = 0;
    }
    a(i, 8);
  }
  
  public boolean e()
  {
    return a.c();
  }
  
  public void f(boolean paramBoolean) {}
  
  public boolean f()
  {
    if (a.n())
    {
      a.collapseActionView();
      return true;
    }
    return false;
  }
  
  public int g()
  {
    return a.h();
  }
  
  public void g(boolean paramBoolean) {}
  
  public Context h()
  {
    return a.k();
  }
  
  public boolean i()
  {
    a.j().removeCallbacks(g);
    u.a(a.j(), g);
    return true;
  }
  
  void j()
  {
    a.j().removeCallbacks(g);
  }
  
  public boolean k()
  {
    return a.d();
  }
  
  public Window.Callback l()
  {
    return c;
  }
  
  void m()
  {
    Menu localMenu = n();
    h localH;
    if ((localMenu instanceof h)) {
      localH = (h)localMenu;
    } else {
      localH = null;
    }
    if (localH != null) {
      localH.s();
    }
    try
    {
      localMenu.clear();
      if ((!c.onCreatePanelMenu(0, localMenu)) || (!c.onPreparePanel(0, null, localMenu))) {
        localMenu.clear();
      }
      return;
    }
    finally
    {
      if (localH != null) {
        localH.r();
      }
    }
  }
  
  class a
    implements Runnable
  {
    a() {}
    
    public void run()
    {
      m();
    }
  }
  
  class b
    implements Toolbar.f
  {
    b() {}
    
    public boolean onMenuItemClick(MenuItem paramMenuItem)
    {
      return c.onMenuItemSelected(0, paramMenuItem);
    }
  }
  
  private final class c
    implements p.a
  {
    private boolean c;
    
    c() {}
    
    public void a(h paramH, boolean paramBoolean)
    {
      if (c) {
        return;
      }
      c = true;
      a.g();
      Window.Callback localCallback = c;
      if (localCallback != null) {
        localCallback.onPanelClosed(108, paramH);
      }
      c = false;
    }
    
    public boolean a(h paramH)
    {
      Window.Callback localCallback = c;
      if (localCallback != null)
      {
        localCallback.onMenuOpened(108, paramH);
        return true;
      }
      return false;
    }
  }
  
  private final class d
    implements h.a
  {
    d() {}
    
    public void a(h paramH)
    {
      k localK = k.this;
      if (c != null)
      {
        if (a.b())
        {
          c.onPanelClosed(108, paramH);
          return;
        }
        if (c.onPreparePanel(0, null, paramH)) {
          c.onMenuOpened(108, paramH);
        }
      }
    }
    
    public boolean a(h paramH, MenuItem paramMenuItem)
    {
      return false;
    }
  }
  
  private class e
    extends i
  {
    public e(Window.Callback paramCallback)
    {
      super();
    }
    
    public View onCreatePanelView(int paramInt)
    {
      if (paramInt == 0) {
        return new View(a.k());
      }
      return super.onCreatePanelView(paramInt);
    }
    
    public boolean onPreparePanel(int paramInt, View paramView, Menu paramMenu)
    {
      boolean bool = super.onPreparePanel(paramInt, paramView, paramMenu);
      if (bool)
      {
        paramView = k.this;
        if (!b)
        {
          a.e();
          b = true;
        }
      }
      return bool;
    }
  }
}
