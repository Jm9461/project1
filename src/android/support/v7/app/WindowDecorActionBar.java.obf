package android.support.v7.app;

import a.b.h.a.f;
import a.b.h.a.j;
import a.b.h.f.b;
import a.b.h.f.b.a;
import a.b.h.f.g;
import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.content.res.Resources.Theme;
import android.content.res.TypedArray;
import android.graphics.drawable.Drawable;
import android.support.v4.view.a0;
import android.support.v4.view.b0;
import android.support.v4.view.u;
import android.support.v4.view.y;
import android.support.v4.view.z;
import android.support.v7.view.menu.h.a;
import android.support.v7.widget.ActionBarContainer;
import android.support.v7.widget.ActionBarContextView;
import android.support.v7.widget.ActionBarOverlayLayout;
import android.support.v7.widget.ActionBarOverlayLayout.d;
import android.support.v7.widget.Toolbar;
import android.support.v7.widget.b1;
import android.support.v7.widget.f0;
import android.util.TypedValue;
import android.view.ContextThemeWrapper;
import android.view.KeyCharacterMap;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.DecelerateInterpolator;
import android.view.animation.Interpolator;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import java.lang.ref.WeakReference;
import java.util.ArrayList;

public class n
  extends a
  implements ActionBarOverlayLayout.d
{
  private static final Interpolator B = new AccelerateInterpolator();
  private static final Interpolator C = new DecelerateInterpolator();
  final b0 A;
  Context a;
  private Context b;
  ActionBarOverlayLayout c;
  ActionBarContainer d;
  f0 e;
  ActionBarContextView f;
  View g;
  b1 h;
  private boolean i;
  d j;
  b k;
  b.a l;
  private boolean m;
  private ArrayList<a.b> n;
  private boolean o;
  private int p;
  boolean q;
  boolean r;
  boolean s;
  private boolean t;
  private boolean u;
  a.b.h.f.h v;
  private boolean w;
  boolean x;
  final z y;
  final z z;
  
  public n(Activity paramActivity, boolean paramBoolean)
  {
    new ArrayList();
    n = new ArrayList();
    p = 0;
    q = true;
    u = true;
    y = new a();
    z = new b();
    A = new c();
    paramActivity = paramActivity.getWindow().getDecorView();
    b(paramActivity);
    if (!paramBoolean) {
      g = paramActivity.findViewById(16908290);
    }
  }
  
  public n(Dialog paramDialog)
  {
    new ArrayList();
    n = new ArrayList();
    p = 0;
    q = true;
    u = true;
    y = new a();
    z = new b();
    A = new c();
    b(paramDialog.getWindow().getDecorView());
  }
  
  private f0 a(View paramView)
  {
    if ((paramView instanceof f0)) {
      return (f0)paramView;
    }
    if ((paramView instanceof Toolbar)) {
      return ((Toolbar)paramView).getWrapper();
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("Can't make a decor toolbar out of ");
    if (paramView != null) {
      paramView = paramView.getClass().getSimpleName();
    } else {
      paramView = "null";
    }
    localStringBuilder.append(paramView);
    throw new IllegalStateException(localStringBuilder.toString());
  }
  
  static boolean a(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3)
  {
    if (paramBoolean3) {
      return true;
    }
    return (!paramBoolean1) && (!paramBoolean2);
  }
  
  private void b(View paramView)
  {
    c = ((ActionBarOverlayLayout)paramView.findViewById(f.decor_content_parent));
    ActionBarOverlayLayout localActionBarOverlayLayout = c;
    if (localActionBarOverlayLayout != null) {
      localActionBarOverlayLayout.setActionBarVisibilityCallback(this);
    }
    e = a(paramView.findViewById(f.action_bar));
    f = ((ActionBarContextView)paramView.findViewById(f.action_context_bar));
    d = ((ActionBarContainer)paramView.findViewById(f.action_bar_container));
    paramView = e;
    if ((paramView != null) && (f != null) && (d != null))
    {
      a = paramView.k();
      if ((e.h() & 0x4) != 0) {
        i1 = 1;
      } else {
        i1 = 0;
      }
      if (i1 != 0) {
        i = true;
      }
      paramView = a.b.h.f.a.a(a);
      boolean bool;
      if ((!paramView.a()) && (i1 == 0)) {
        bool = false;
      } else {
        bool = true;
      }
      f(bool);
      l(paramView.f());
      paramView = a.obtainStyledAttributes(null, j.ActionBar, a.b.h.a.a.actionBarStyle, 0);
      if (paramView.getBoolean(j.ActionBar_hideOnContentScroll, false)) {
        k(true);
      }
      int i1 = paramView.getDimensionPixelSize(j.ActionBar_elevation, 0);
      if (i1 != 0) {
        a(i1);
      }
      paramView.recycle();
      return;
    }
    paramView = new StringBuilder();
    paramView.append(getClass().getSimpleName());
    paramView.append(" can only be used ");
    paramView.append("with a compatible window decor layout");
    throw new IllegalStateException(paramView.toString());
  }
  
  private void l(boolean paramBoolean)
  {
    o = paramBoolean;
    if (!o)
    {
      e.a(null);
      d.setTabContainer(h);
    }
    else
    {
      d.setTabContainer(null);
      e.a(h);
    }
    int i1 = m();
    boolean bool = true;
    if (i1 == 2) {
      i1 = 1;
    } else {
      i1 = 0;
    }
    Object localObject = h;
    if (localObject != null) {
      if (i1 != 0)
      {
        ((HorizontalScrollView)localObject).setVisibility(0);
        localObject = c;
        if (localObject != null) {
          u.C((View)localObject);
        }
      }
      else
      {
        ((HorizontalScrollView)localObject).setVisibility(8);
      }
    }
    localObject = e;
    if ((!o) && (i1 != 0)) {
      paramBoolean = true;
    } else {
      paramBoolean = false;
    }
    ((f0)localObject).b(paramBoolean);
    localObject = c;
    if ((!o) && (i1 != 0)) {
      paramBoolean = bool;
    } else {
      paramBoolean = false;
    }
    ((ActionBarOverlayLayout)localObject).setHasNonEmbeddedTabs(paramBoolean);
  }
  
  private void m(boolean paramBoolean)
  {
    if (a(r, s, t))
    {
      if (!u)
      {
        u = true;
        j(paramBoolean);
      }
    }
    else if (u)
    {
      u = false;
      i(paramBoolean);
    }
  }
  
  private void n()
  {
    if (t)
    {
      t = false;
      ActionBarOverlayLayout localActionBarOverlayLayout = c;
      if (localActionBarOverlayLayout != null) {
        localActionBarOverlayLayout.setShowingForActionMode(false);
      }
      m(false);
    }
  }
  
  private boolean o()
  {
    return u.y(d);
  }
  
  private void p()
  {
    if (!t)
    {
      t = true;
      ActionBarOverlayLayout localActionBarOverlayLayout = c;
      if (localActionBarOverlayLayout != null) {
        localActionBarOverlayLayout.setShowingForActionMode(true);
      }
      m(false);
    }
  }
  
  public b a(b.a paramA)
  {
    d localD = j;
    if (localD != null) {
      localD.a();
    }
    c.setHideOnContentScrollEnabled(false);
    f.c();
    paramA = new d(f.getContext(), paramA);
    if (paramA.k())
    {
      j = paramA;
      paramA.i();
      f.a(paramA);
      h(true);
      f.sendAccessibilityEvent(32);
      return paramA;
    }
    return null;
  }
  
  public void a()
  {
    if (s)
    {
      s = false;
      m(true);
    }
  }
  
  public void a(float paramFloat)
  {
    u.a(d, paramFloat);
  }
  
  public void a(int paramInt)
  {
    p = paramInt;
  }
  
  public void a(int paramInt1, int paramInt2)
  {
    int i1 = e.h();
    if ((paramInt2 & 0x4) != 0) {
      i = true;
    }
    e.d(paramInt1 & paramInt2 | (paramInt2 ^ 0xFFFFFFFF) & i1);
  }
  
  public void a(Configuration paramConfiguration)
  {
    l(a.b.h.f.a.a(a).f());
  }
  
  public void a(Drawable paramDrawable)
  {
    d.setPrimaryBackground(paramDrawable);
  }
  
  public void a(CharSequence paramCharSequence)
  {
    e.setTitle(paramCharSequence);
  }
  
  public void a(boolean paramBoolean)
  {
    q = paramBoolean;
  }
  
  public boolean a(int paramInt, KeyEvent paramKeyEvent)
  {
    Object localObject = j;
    if (localObject == null) {
      return false;
    }
    localObject = ((d)localObject).c();
    if (localObject != null)
    {
      if (paramKeyEvent != null) {
        i1 = paramKeyEvent.getDeviceId();
      } else {
        i1 = -1;
      }
      int i1 = KeyCharacterMap.load(i1).getKeyboardType();
      boolean bool = true;
      if (i1 == 1) {
        bool = false;
      }
      ((Menu)localObject).setQwertyMode(bool);
      return ((Menu)localObject).performShortcut(paramInt, paramKeyEvent, 0);
    }
    return false;
  }
  
  public void b()
  {
    a.b.h.f.h localH = v;
    if (localH != null)
    {
      localH.a();
      v = null;
    }
  }
  
  public void b(int paramInt)
  {
    e.c(paramInt);
  }
  
  public void b(Drawable paramDrawable)
  {
    e.b(paramDrawable);
  }
  
  public void b(CharSequence paramCharSequence)
  {
    e.setWindowTitle(paramCharSequence);
  }
  
  public void b(boolean paramBoolean)
  {
    if (paramBoolean == m) {
      return;
    }
    m = paramBoolean;
    int i2 = n.size();
    int i1 = 0;
    while (i1 < i2)
    {
      ((a.b)n.get(i1)).a(paramBoolean);
      i1 += 1;
    }
  }
  
  public void c()
  {
    if (!s)
    {
      s = true;
      m(true);
    }
  }
  
  public void c(boolean paramBoolean)
  {
    if (!i) {
      d(paramBoolean);
    }
  }
  
  public void d() {}
  
  public void d(boolean paramBoolean)
  {
    int i1;
    if (paramBoolean) {
      i1 = 4;
    } else {
      i1 = 0;
    }
    a(i1, 4);
  }
  
  public void e(boolean paramBoolean)
  {
    int i1;
    if (paramBoolean) {
      i1 = 8;
    } else {
      i1 = 0;
    }
    a(i1, 8);
  }
  
  public void f(boolean paramBoolean)
  {
    e.a(paramBoolean);
  }
  
  public boolean f()
  {
    f0 localF0 = e;
    if ((localF0 != null) && (localF0.n()))
    {
      e.collapseActionView();
      return true;
    }
    return false;
  }
  
  public int g()
  {
    return e.h();
  }
  
  public void g(boolean paramBoolean)
  {
    w = paramBoolean;
    if (!paramBoolean)
    {
      a.b.h.f.h localH = v;
      if (localH != null) {
        localH.a();
      }
    }
  }
  
  public Context h()
  {
    if (b == null)
    {
      TypedValue localTypedValue = new TypedValue();
      a.getTheme().resolveAttribute(a.b.h.a.a.actionBarWidgetTheme, localTypedValue, true);
      int i1 = resourceId;
      if (i1 != 0) {
        b = new ContextThemeWrapper(a, i1);
      } else {
        b = a;
      }
    }
    return b;
  }
  
  public void h(boolean paramBoolean)
  {
    if (paramBoolean) {
      p();
    } else {
      n();
    }
    if (o())
    {
      y localY1;
      y localY2;
      if (paramBoolean)
      {
        localY1 = e.a(4, 100L);
        localY2 = f.a(0, 200L);
      }
      else
      {
        localY2 = e.a(0, 200L);
        localY1 = f.a(8, 100L);
      }
      a.b.h.f.h localH = new a.b.h.f.h();
      localH.a(localY1, localY2);
      localH.c();
      return;
    }
    if (paramBoolean)
    {
      e.a(4);
      f.setVisibility(0);
      return;
    }
    e.a(0);
    f.setVisibility(8);
  }
  
  public void i(boolean paramBoolean)
  {
    a.b.h.f.h localH = v;
    if (localH != null) {
      localH.a();
    }
    if ((p == 0) && ((w) || (paramBoolean)))
    {
      d.setAlpha(1.0F);
      d.setTransitioning(true);
      localH = new a.b.h.f.h();
      float f2 = -d.getHeight();
      float f1 = f2;
      if (paramBoolean)
      {
        localObject = new int[2];
        Object tmp82_80 = localObject;
        tmp82_80[0] = 0;
        Object tmp86_82 = tmp82_80;
        tmp86_82[1] = 0;
        tmp86_82;
        d.getLocationInWindow((int[])localObject);
        f1 = f2 - localObject[1];
      }
      Object localObject = u.a(d).b(f1);
      ((y)localObject).a(A);
      localH.a((y)localObject);
      if (q)
      {
        localObject = g;
        if (localObject != null)
        {
          localObject = u.a((View)localObject);
          ((y)localObject).b(f1);
          localH.a((y)localObject);
        }
      }
      localH.a(B);
      localH.a(250L);
      localH.a(y);
      v = localH;
      localH.c();
      return;
    }
    y.a(null);
  }
  
  public void j(boolean paramBoolean)
  {
    Object localObject1 = v;
    if (localObject1 != null) {
      ((a.b.h.f.h)localObject1).a();
    }
    d.setVisibility(0);
    if ((p == 0) && ((w) || (paramBoolean)))
    {
      d.setTranslationY(0.0F);
      float f2 = -d.getHeight();
      float f1 = f2;
      if (paramBoolean)
      {
        localObject1 = new int[2];
        Object tmp73_71 = localObject1;
        tmp73_71[0] = 0;
        Object tmp77_73 = tmp73_71;
        tmp77_73[1] = 0;
        tmp77_73;
        d.getLocationInWindow((int[])localObject1);
        f1 = f2 - localObject1[1];
      }
      d.setTranslationY(f1);
      localObject1 = new a.b.h.f.h();
      Object localObject2 = u.a(d).b(0.0F);
      ((y)localObject2).a(A);
      ((a.b.h.f.h)localObject1).a((y)localObject2);
      if (q)
      {
        localObject2 = g;
        if (localObject2 != null)
        {
          ((View)localObject2).setTranslationY(f1);
          localObject2 = u.a(g);
          ((y)localObject2).b(0.0F);
          ((a.b.h.f.h)localObject1).a((y)localObject2);
        }
      }
      ((a.b.h.f.h)localObject1).a(C);
      ((a.b.h.f.h)localObject1).a(250L);
      ((a.b.h.f.h)localObject1).a(z);
      v = ((a.b.h.f.h)localObject1);
      ((a.b.h.f.h)localObject1).c();
    }
    else
    {
      d.setAlpha(1.0F);
      d.setTranslationY(0.0F);
      if (q)
      {
        localObject1 = g;
        if (localObject1 != null) {
          ((View)localObject1).setTranslationY(0.0F);
        }
      }
      z.a(null);
    }
    localObject1 = c;
    if (localObject1 != null) {
      u.C((View)localObject1);
    }
  }
  
  public void k(boolean paramBoolean)
  {
    if ((paramBoolean) && (!c.i())) {
      throw new IllegalStateException("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to enable hide on content scroll");
    }
    x = paramBoolean;
    c.setHideOnContentScrollEnabled(paramBoolean);
  }
  
  void l()
  {
    b.a localA = l;
    if (localA != null)
    {
      localA.a(k);
      k = null;
      l = null;
    }
  }
  
  public int m()
  {
    return e.l();
  }
  
  class a
    extends a0
  {
    a() {}
    
    public void a(View paramView)
    {
      paramView = n.this;
      if (q)
      {
        paramView = g;
        if (paramView != null)
        {
          paramView.setTranslationY(0.0F);
          d.setTranslationY(0.0F);
        }
      }
      d.setVisibility(8);
      d.setTransitioning(false);
      paramView = n.this;
      v = null;
      paramView.l();
      paramView = c;
      if (paramView != null) {
        u.C(paramView);
      }
    }
  }
  
  class b
    extends a0
  {
    b() {}
    
    public void a(View paramView)
    {
      paramView = n.this;
      v = null;
      d.requestLayout();
    }
  }
  
  class c
    implements b0
  {
    c() {}
    
    public void a(View paramView)
    {
      ((View)d.getParent()).invalidate();
    }
  }
  
  public class d
    extends b
    implements h.a
  {
    private final Context e;
    private final android.support.v7.view.menu.h f;
    private b.a g;
    private WeakReference<View> h;
    
    public d(Context paramContext, b.a paramA)
    {
      e = paramContext;
      g = paramA;
      this$1 = new android.support.v7.view.menu.h(paramContext);
      c(1);
      f = n.this;
      f.a(this);
    }
    
    public void a()
    {
      n localN = n.this;
      if (j != this) {
        return;
      }
      if (!n.a(r, s, false))
      {
        localN = n.this;
        k = this;
        l = g;
      }
      else
      {
        g.a(this);
      }
      g = null;
      h(false);
      f.a();
      e.j().sendAccessibilityEvent(32);
      localN = n.this;
      c.setHideOnContentScrollEnabled(x);
      j = null;
    }
    
    public void a(int paramInt)
    {
      a(a.getResources().getString(paramInt));
    }
    
    public void a(android.support.v7.view.menu.h paramH)
    {
      if (g == null) {
        return;
      }
      i();
      f.d();
    }
    
    public void a(View paramView)
    {
      f.setCustomView(paramView);
      h = new WeakReference(paramView);
    }
    
    public void a(CharSequence paramCharSequence)
    {
      f.setSubtitle(paramCharSequence);
    }
    
    public void a(boolean paramBoolean)
    {
      super.a(paramBoolean);
      f.setTitleOptional(paramBoolean);
    }
    
    public boolean a(android.support.v7.view.menu.h paramH, MenuItem paramMenuItem)
    {
      paramH = g;
      if (paramH != null) {
        return paramH.a(this, paramMenuItem);
      }
      return false;
    }
    
    public View b()
    {
      WeakReference localWeakReference = h;
      if (localWeakReference != null) {
        return (View)localWeakReference.get();
      }
      return null;
    }
    
    public void b(int paramInt)
    {
      b(a.getResources().getString(paramInt));
    }
    
    public void b(CharSequence paramCharSequence)
    {
      f.setTitle(paramCharSequence);
    }
    
    public Menu c()
    {
      return f;
    }
    
    public MenuInflater d()
    {
      return new g(e);
    }
    
    public CharSequence e()
    {
      return f.getSubtitle();
    }
    
    public CharSequence g()
    {
      return f.getTitle();
    }
    
    public void i()
    {
      if (j != this) {
        return;
      }
      f.s();
      try
      {
        g.b(this, f);
        return;
      }
      finally
      {
        f.r();
      }
    }
    
    public boolean j()
    {
      return f.b();
    }
    
    public boolean k()
    {
      f.s();
      try
      {
        boolean bool = g.a(this, f);
        return bool;
      }
      finally
      {
        f.r();
      }
    }
  }
}
