package android.support.constraint.i.j;

import android.support.constraint.i.c;
import android.support.constraint.i.i;
import android.support.constraint.i.i.a;

public class d
{
  private k a = new k(this);
  final e b;
  final d c;
  d d;
  public int e = 0;
  int f = -1;
  private c g = c.c;
  private int h;
  i i;
  
  public d(e paramE, d paramD)
  {
    b localB = b.c;
    h = 0;
    b = paramE;
    c = paramD;
  }
  
  public int a()
  {
    return h;
  }
  
  public void a(c paramC)
  {
    paramC = i;
    if (paramC == null)
    {
      i = new i(i.a.c, null);
      return;
    }
    paramC.a();
  }
  
  public boolean a(d paramD)
  {
    boolean bool4 = false;
    boolean bool2 = false;
    boolean bool3 = false;
    if (paramD == null) {
      return false;
    }
    d localD1 = paramD.h();
    d localD2 = c;
    if (localD1 == localD2) {
      return (localD2 != d.h) || ((paramD.c().y()) && (c().y()));
    }
    switch (a.a[localD2.ordinal()])
    {
    default: 
      throw new AssertionError(c.name());
    case 6: 
    case 7: 
    case 8: 
    case 9: 
      return false;
    case 4: 
    case 5: 
      if ((localD1 != d.e) && (localD1 != d.g)) {
        bool1 = false;
      } else {
        bool1 = true;
      }
      bool2 = bool1;
      if ((paramD.c() instanceof g))
      {
        if (!bool1)
        {
          bool1 = bool3;
          if (localD1 != d.k) {}
        }
        else
        {
          bool1 = true;
        }
        bool2 = bool1;
      }
      return bool2;
    case 2: 
    case 3: 
      if ((localD1 != d.d) && (localD1 != d.f)) {
        bool1 = false;
      } else {
        bool1 = true;
      }
      bool2 = bool1;
      if ((paramD.c() instanceof g))
      {
        if (!bool1)
        {
          bool1 = bool4;
          if (localD1 != d.j) {}
        }
        else
        {
          bool1 = true;
        }
        bool2 = bool1;
      }
      return bool2;
    }
    boolean bool1 = bool2;
    if (localD1 != d.h)
    {
      bool1 = bool2;
      if (localD1 != d.j)
      {
        bool1 = bool2;
        if (localD1 != d.k) {
          bool1 = true;
        }
      }
    }
    return bool1;
  }
  
  public boolean a(d paramD, int paramInt1, int paramInt2, c paramC, int paramInt3, boolean paramBoolean)
  {
    if (paramD == null)
    {
      d = null;
      e = 0;
      f = -1;
      g = c.c;
      h = 2;
      return true;
    }
    if ((!paramBoolean) && (!a(paramD))) {
      return false;
    }
    d = paramD;
    if (paramInt1 > 0) {
      e = paramInt1;
    } else {
      e = 0;
    }
    f = paramInt2;
    g = paramC;
    h = paramInt3;
    return true;
  }
  
  public boolean a(d paramD, int paramInt1, c paramC, int paramInt2)
  {
    return a(paramD, paramInt1, -1, paramC, paramInt2, false);
  }
  
  public int b()
  {
    if (b.s() == 8) {
      return 0;
    }
    if (f > -1)
    {
      d localD = d;
      if ((localD != null) && (b.s() == 8)) {
        return f;
      }
    }
    return e;
  }
  
  public e c()
  {
    return b;
  }
  
  public k d()
  {
    return a;
  }
  
  public i e()
  {
    return i;
  }
  
  public c f()
  {
    return g;
  }
  
  public d g()
  {
    return d;
  }
  
  public d h()
  {
    return c;
  }
  
  public boolean i()
  {
    return d != null;
  }
  
  public void j()
  {
    d = null;
    e = 0;
    f = -1;
    g = c.d;
    h = 0;
    b localB = b.c;
    a.d();
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(b.f());
    localStringBuilder.append(":");
    localStringBuilder.append(c.toString());
    return localStringBuilder.toString();
  }
  
  public static enum b
  {
    private b() {}
  }
  
  public static enum c
  {
    private c() {}
  }
  
  public static enum d
  {
    private d() {}
  }
}
