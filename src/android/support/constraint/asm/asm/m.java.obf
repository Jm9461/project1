package android.support.constraint.i.j;

import android.support.constraint.i.f;
import android.support.constraint.i.i;

public class k
  extends m
{
  d c;
  k d;
  float e;
  k f;
  float g;
  int h = 0;
  private k i;
  private l j = null;
  private int k = 1;
  private l l = null;
  private int m = 1;
  
  public k(d paramD)
  {
    c = paramD;
  }
  
  String a(int paramInt)
  {
    if (paramInt == 1) {
      return "DIRECT";
    }
    if (paramInt == 2) {
      return "CENTER";
    }
    if (paramInt == 3) {
      return "MATCH";
    }
    if (paramInt == 4) {
      return "CHAIN";
    }
    if (paramInt == 5) {
      return "BARRIER";
    }
    return "UNCONNECTED";
  }
  
  public void a(int paramInt1, k paramK, int paramInt2)
  {
    h = paramInt1;
    d = paramK;
    e = paramInt2;
    d.a(this);
  }
  
  void a(android.support.constraint.i.e paramE)
  {
    i localI = c.e();
    k localK = f;
    if (localK == null)
    {
      paramE.a(localI, (int)g);
      return;
    }
    paramE.a(localI, paramE.a(c), (int)g, 6);
  }
  
  public void a(k paramK, float paramFloat)
  {
    if ((b == 0) || ((f != paramK) && (g != paramFloat)))
    {
      f = paramK;
      g = paramFloat;
      if (b == 1) {
        b();
      }
      a();
    }
  }
  
  public void a(k paramK, int paramInt)
  {
    d = paramK;
    e = paramInt;
    d.a(this);
  }
  
  public void a(k paramK, int paramInt, l paramL)
  {
    d = paramK;
    d.a(this);
    j = paramL;
    k = paramInt;
    j.a(this);
  }
  
  public void b(int paramInt)
  {
    h = paramInt;
  }
  
  public void b(k paramK, float paramFloat)
  {
    i = paramK;
  }
  
  public void b(k paramK, int paramInt, l paramL)
  {
    i = paramK;
    l = paramL;
    m = paramInt;
  }
  
  public void d()
  {
    super.d();
    d = null;
    e = 0.0F;
    j = null;
    k = 1;
    l = null;
    m = 1;
    f = null;
    g = 0.0F;
    i = null;
    h = 0;
  }
  
  public void e()
  {
    int n = b;
    int i1 = 1;
    if (n == 1) {
      return;
    }
    if (h == 4) {
      return;
    }
    Object localObject1 = j;
    if (localObject1 != null)
    {
      if (b != 1) {
        return;
      }
      e = (k * c);
    }
    localObject1 = l;
    float f1;
    if (localObject1 != null)
    {
      if (b != 1) {
        return;
      }
      f1 = c;
    }
    if (h == 1)
    {
      localObject1 = d;
      if ((localObject1 == null) || (b == 1))
      {
        localObject1 = d;
        if (localObject1 == null)
        {
          f = this;
          g = e;
        }
        else
        {
          f = f;
          g = (g + e);
        }
        a();
        return;
      }
    }
    Object localObject2;
    if (h == 2)
    {
      localObject1 = d;
      if ((localObject1 != null) && (b == 1))
      {
        localObject1 = i;
        if (localObject1 != null)
        {
          localObject1 = d;
          if ((localObject1 != null) && (b == 1))
          {
            if (android.support.constraint.i.e.h() != null)
            {
              localObject1 = android.support.constraint.i.e.h();
              v += 1L;
            }
            f = d.f;
            localObject1 = i;
            f = d.f;
            localObject1 = c.c;
            n = i1;
            if (localObject1 != d.d.f) {
              if (localObject1 == d.d.g) {
                n = i1;
              } else {
                n = 0;
              }
            }
            if (n != 0) {
              f1 = d.g - i.d.g;
            } else {
              f1 = i.d.g - d.g;
            }
            localObject1 = c;
            localObject2 = c;
            if ((localObject2 != d.d.d) && (localObject2 != d.d.f))
            {
              f2 = f1 - b.i();
              f1 = c.b.T;
            }
            else
            {
              f2 = f1 - c.b.t();
              f1 = c.b.S;
            }
            i1 = c.b();
            int i2 = i.c.b();
            if (c.g() == i.c.g())
            {
              f1 = 0.5F;
              i1 = 0;
              i2 = 0;
            }
            float f2 = f2 - i1 - i2;
            if (n != 0)
            {
              localObject1 = i;
              g = (d.g + i2 + f2 * f1);
              g = (d.g - i1 - (1.0F - f1) * f2);
            }
            else
            {
              g = (d.g + i1 + f2 * f1);
              localObject1 = i;
              g = (d.g - i2 - (1.0F - f1) * f2);
            }
            a();
            i.a();
            return;
          }
        }
      }
    }
    if (h == 3)
    {
      localObject1 = d;
      if ((localObject1 != null) && (b == 1))
      {
        localObject1 = i;
        if (localObject1 != null)
        {
          localObject1 = d;
          if ((localObject1 != null) && (b == 1))
          {
            if (android.support.constraint.i.e.h() != null)
            {
              localObject1 = android.support.constraint.i.e.h();
              w += 1L;
            }
            localObject1 = d;
            f = f;
            localObject2 = i;
            k localK = d;
            f = f;
            g = (g + e);
            g = (g + e);
            a();
            i.a();
            return;
          }
        }
      }
    }
    if (h == 5) {
      c.b.E();
    }
  }
  
  public float f()
  {
    return g;
  }
  
  public void g()
  {
    d localD = c.g();
    if (localD == null) {
      return;
    }
    if (localD.g() == c)
    {
      h = 4;
      dh = 4;
    }
    int i1 = c.b();
    d.d localD1 = c.c;
    int n;
    if (localD1 != d.d.f)
    {
      n = i1;
      if (localD1 != d.d.g) {}
    }
    else
    {
      n = -i1;
    }
    a(localD.d(), n);
  }
  
  public String toString()
  {
    if (b == 1)
    {
      if (f == this)
      {
        localStringBuilder = new StringBuilder();
        localStringBuilder.append("[");
        localStringBuilder.append(c);
        localStringBuilder.append(", RESOLVED: ");
        localStringBuilder.append(g);
        localStringBuilder.append("]  type: ");
        localStringBuilder.append(a(h));
        return localStringBuilder.toString();
      }
      localStringBuilder = new StringBuilder();
      localStringBuilder.append("[");
      localStringBuilder.append(c);
      localStringBuilder.append(", RESOLVED: ");
      localStringBuilder.append(f);
      localStringBuilder.append(":");
      localStringBuilder.append(g);
      localStringBuilder.append("] type: ");
      localStringBuilder.append(a(h));
      return localStringBuilder.toString();
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("{ ");
    localStringBuilder.append(c);
    localStringBuilder.append(" UNRESOLVED} type: ");
    localStringBuilder.append(a(h));
    return localStringBuilder.toString();
  }
}
