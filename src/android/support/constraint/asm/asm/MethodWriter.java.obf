package android.support.constraint.i.j;

import android.support.constraint.i.i;
import java.util.ArrayList;

public class g
  extends e
{
  protected float e0 = -1.0F;
  protected int f0 = -1;
  protected int g0 = -1;
  private d h0 = s;
  private int i0 = 0;
  private boolean j0 = false;
  
  public g()
  {
    new j();
    A.clear();
    A.add(h0);
    int j = z.length;
    int i = 0;
    while (i < j)
    {
      z[i] = h0;
      i += 1;
    }
  }
  
  public int H()
  {
    return i0;
  }
  
  public d a(d.d paramD)
  {
    switch (a.a[paramD.ordinal()])
    {
    default: 
      break;
    case 5: 
    case 6: 
    case 7: 
    case 8: 
    case 9: 
      return null;
    case 3: 
    case 4: 
      if (i0 == 0) {
        return h0;
      }
      break;
    case 1: 
    case 2: 
      if (i0 == 1) {
        return h0;
      }
      break;
    }
    throw new AssertionError(paramD.name());
  }
  
  public void a(int paramInt)
  {
    e localE = l();
    if (localE == null) {
      return;
    }
    if (H() == 1)
    {
      s.d().a(1, s.d(), 0);
      u.d().a(1, s.d(), 0);
      if (f0 != -1)
      {
        r.d().a(1, r.d(), f0);
        t.d().a(1, r.d(), f0);
        return;
      }
      if (g0 != -1)
      {
        r.d().a(1, t.d(), -g0);
        t.d().a(1, t.d(), -g0);
        return;
      }
      if ((e0 != -1.0F) && (localE.k() == e.b.c))
      {
        paramInt = (int)(D * e0);
        r.d().a(1, r.d(), paramInt);
        t.d().a(1, r.d(), paramInt);
      }
    }
    else
    {
      r.d().a(1, r.d(), 0);
      t.d().a(1, r.d(), 0);
      if (f0 != -1)
      {
        s.d().a(1, s.d(), f0);
        u.d().a(1, s.d(), f0);
        return;
      }
      if (g0 != -1)
      {
        s.d().a(1, u.d(), -g0);
        u.d().a(1, u.d(), -g0);
        return;
      }
      if ((e0 != -1.0F) && (localE.r() == e.b.c))
      {
        paramInt = (int)(E * e0);
        s.d().a(1, s.d(), paramInt);
        u.d().a(1, s.d(), paramInt);
      }
    }
  }
  
  public void a(android.support.constraint.i.e paramE)
  {
    Object localObject2 = (f)l();
    if (localObject2 == null) {
      return;
    }
    d localD = ((e)localObject2).a(d.d.d);
    Object localObject1 = ((e)localObject2).a(d.d.f);
    e localE = C;
    int j = 1;
    int i;
    if ((localE != null) && (B[0] == e.b.d)) {
      i = 1;
    } else {
      i = 0;
    }
    if (i0 == 0)
    {
      localD = ((e)localObject2).a(d.d.e);
      localObject1 = ((e)localObject2).a(d.d.g);
      localObject2 = C;
      if ((localObject2 != null) && (B[1] == e.b.d)) {
        i = j;
      } else {
        i = 0;
      }
    }
    if (f0 != -1)
    {
      localObject2 = paramE.a(h0);
      paramE.a((i)localObject2, paramE.a(localD), f0, 6);
      if (i != 0) {
        paramE.b(paramE.a(localObject1), (i)localObject2, 0, 5);
      }
      return;
    }
    if (g0 != -1)
    {
      localObject2 = paramE.a(h0);
      localObject1 = paramE.a(localObject1);
      paramE.a((i)localObject2, (i)localObject1, -g0, 6);
      if (i != 0)
      {
        paramE.b((i)localObject2, paramE.a(localD), 0, 5);
        paramE.b((i)localObject1, (i)localObject2, 0, 5);
      }
    }
    else if (e0 != -1.0F)
    {
      paramE.a(android.support.constraint.i.e.a(paramE, paramE.a(h0), paramE.a(localD), paramE.a(localObject1), e0, j0));
      return;
    }
  }
  
  public boolean a()
  {
    return true;
  }
  
  public ArrayList<d> b()
  {
    return A;
  }
  
  public void c(android.support.constraint.i.e paramE)
  {
    if (l() == null) {
      return;
    }
    int i = paramE.b(h0);
    if (i0 == 1)
    {
      n(i);
      o(0);
      c(l().i());
      k(0);
      return;
    }
    n(0);
    o(i);
    k(l().t());
    c(0);
  }
  
  public void e(float paramFloat)
  {
    if (paramFloat > -1.0F)
    {
      e0 = paramFloat;
      f0 = -1;
      g0 = -1;
    }
  }
  
  public void p(int paramInt)
  {
    if (paramInt > -1)
    {
      e0 = -1.0F;
      f0 = paramInt;
      g0 = -1;
    }
  }
  
  public void q(int paramInt)
  {
    if (paramInt > -1)
    {
      e0 = -1.0F;
      f0 = -1;
      g0 = paramInt;
    }
  }
  
  public void r(int paramInt)
  {
    if (i0 == paramInt) {
      return;
    }
    i0 = paramInt;
    A.clear();
    if (i0 == 1) {
      h0 = r;
    } else {
      h0 = s;
    }
    A.add(h0);
    int i = z.length;
    paramInt = 0;
    while (paramInt < i)
    {
      z[paramInt] = h0;
      paramInt += 1;
    }
  }
}
