package android.support.constraint.i;

import java.util.Arrays;

public class i
{
  private static int k = 1;
  private String a;
  public int b = -1;
  int c = -1;
  public int d = 0;
  public float e;
  float[] f = new float[7];
  a g;
  b[] h = new b[8];
  int i = 0;
  public int j = 0;
  
  public i(a paramA, String paramString)
  {
    g = paramA;
  }
  
  static void b()
  {
    k += 1;
  }
  
  public void a()
  {
    a = null;
    g = a.g;
    d = 0;
    b = -1;
    c = -1;
    e = 0.0F;
    i = 0;
    j = 0;
  }
  
  public final void a(b paramB)
  {
    int m = 0;
    int n;
    for (;;)
    {
      n = i;
      if (m >= n) {
        break;
      }
      if (h[m] == paramB) {
        return;
      }
      m += 1;
    }
    b[] arrayOfB = h;
    if (n >= arrayOfB.length) {
      h = ((b[])Arrays.copyOf(arrayOfB, arrayOfB.length * 2));
    }
    arrayOfB = h;
    m = i;
    arrayOfB[m] = paramB;
    i = (m + 1);
  }
  
  public void a(a paramA, String paramString)
  {
    g = paramA;
  }
  
  public final void b(b paramB)
  {
    int i1 = i;
    int m = 0;
    while (m < i1)
    {
      if (h[m] == paramB)
      {
        int n = 0;
        while (n < i1 - m - 1)
        {
          paramB = h;
          paramB[(m + n)] = paramB[(m + n + 1)];
          n += 1;
        }
        i -= 1;
        return;
      }
      m += 1;
    }
  }
  
  public final void c(b paramB)
  {
    int n = i;
    int m = 0;
    while (m < n)
    {
      b[] arrayOfB = h;
      d.a(arrayOfB[m], paramB, false);
      m += 1;
    }
    i = 0;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("");
    localStringBuilder.append(a);
    return localStringBuilder.toString();
  }
  
  public static enum a
  {
    private a() {}
  }
}
