package android.support.constraint;

import android.content.Context;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import java.lang.reflect.Field;
import java.util.Arrays;

public abstract class b
  extends View
{
  protected int[] c = new int[32];
  protected int d = 0;
  protected Context e;
  protected android.support.constraint.i.j.h f = null;
  protected boolean g = false;
  private String h;
  
  public b(Context paramContext)
  {
    super(paramContext);
    e = paramContext;
    a(null);
  }
  
  private void a(String paramString)
  {
    if (paramString == null) {
      return;
    }
    if (e == null) {
      return;
    }
    paramString = paramString.trim();
    int j = 0;
    try
    {
      i = g.class.getField(paramString).getInt(null);
      j = i;
    }
    catch (Exception localException) {}
    int i = j;
    if (j == 0) {
      i = e.getResources().getIdentifier(paramString, "id", e.getPackageName());
    }
    j = i;
    if (i == 0)
    {
      j = i;
      if (isInEditMode())
      {
        j = i;
        if ((getParent() instanceof ConstraintLayout))
        {
          localObject = ((ConstraintLayout)getParent()).a(0, paramString);
          j = i;
          if (localObject != null)
          {
            j = i;
            if ((localObject instanceof Integer)) {
              j = ((Integer)localObject).intValue();
            }
          }
        }
      }
    }
    if (j != 0)
    {
      setTag(j, null);
      return;
    }
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("Could not find id of \"");
    ((StringBuilder)localObject).append(paramString);
    ((StringBuilder)localObject).append("\"");
    Log.w("ConstraintHelper", ((StringBuilder)localObject).toString());
  }
  
  private void setIds(String paramString)
  {
    if (paramString == null) {
      return;
    }
    int j;
    for (int i = 0;; i = j + 1)
    {
      j = paramString.indexOf(',', i);
      if (j == -1)
      {
        a(paramString.substring(i));
        return;
      }
      a(paramString.substring(i, j));
    }
  }
  
  public void a()
  {
    if (f == null) {
      return;
    }
    ViewGroup.LayoutParams localLayoutParams = getLayoutParams();
    if ((localLayoutParams instanceof ConstraintLayout.a)) {
      k0 = f;
    }
  }
  
  public void a(ConstraintLayout paramConstraintLayout) {}
  
  protected void a(AttributeSet paramAttributeSet)
  {
    if (paramAttributeSet != null)
    {
      paramAttributeSet = getContext().obtainStyledAttributes(paramAttributeSet, h.ConstraintLayout_Layout);
      int j = paramAttributeSet.getIndexCount();
      int i = 0;
      while (i < j)
      {
        int k = paramAttributeSet.getIndex(i);
        if (k == h.ConstraintLayout_Layout_constraint_referenced_ids)
        {
          h = paramAttributeSet.getString(k);
          setIds(h);
        }
        i += 1;
      }
    }
  }
  
  public void b(ConstraintLayout paramConstraintLayout) {}
  
  public void c(ConstraintLayout paramConstraintLayout)
  {
    if (isInEditMode()) {
      setIds(h);
    }
    Object localObject = f;
    if (localObject == null) {
      return;
    }
    ((android.support.constraint.i.j.h)localObject).H();
    int i = 0;
    while (i < d)
    {
      localObject = paramConstraintLayout.findViewById(c[i]);
      if (localObject != null) {
        f.b(paramConstraintLayout.a((View)localObject));
      }
      i += 1;
    }
  }
  
  public int[] getReferencedIds()
  {
    return Arrays.copyOf(c, d);
  }
  
  public void onDraw(Canvas paramCanvas) {}
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    if (g)
    {
      super.onMeasure(paramInt1, paramInt2);
      return;
    }
    setMeasuredDimension(0, 0);
  }
  
  public void setReferencedIds(int[] paramArrayOfInt)
  {
    d = 0;
    int i = 0;
    while (i < paramArrayOfInt.length)
    {
      setTag(paramArrayOfInt[i], null);
      i += 1;
    }
  }
  
  public void setTag(int paramInt, Object paramObject)
  {
    int i = d;
    paramObject = c;
    if (i + 1 > paramObject.length) {
      c = Arrays.copyOf(paramObject, paramObject.length * 2);
    }
    paramObject = c;
    i = d;
    paramObject[i] = paramInt;
    d = (i + 1);
  }
}
