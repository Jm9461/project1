package f;

import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;

final class n
  implements e
{
  public final c c = new c();
  public final s d;
  boolean e;
  
  n(s paramS)
  {
    if (paramS != null)
    {
      d = paramS;
      return;
    }
    throw new NullPointerException("source == null");
  }
  
  public long a(byte paramByte)
  {
    return a(paramByte, 0L, Long.MAX_VALUE);
  }
  
  public long a(byte paramByte, long paramLong1, long paramLong2)
  {
    if (!e)
    {
      if ((paramLong1 >= 0L) && (paramLong2 >= paramLong1))
      {
        while (paramLong1 < paramLong2)
        {
          long l = c.a(paramByte, paramLong1, paramLong2);
          if (l != -1L) {
            return l;
          }
          localObject = c;
          l = d;
          if (l < paramLong2)
          {
            if (d.b((c)localObject, 8192L) == -1L) {
              return -1L;
            }
            paramLong1 = Math.max(paramLong1, l);
          }
          else
          {
            return -1L;
          }
        }
        return -1L;
      }
      throw new IllegalArgumentException(String.format("fromIndex=%s toIndex=%s", new Object[] { Long.valueOf(paramLong1), Long.valueOf(paramLong2) }));
    }
    Object localObject = new IllegalStateException("closed");
    for (;;)
    {
      throw ((Throwable)localObject);
    }
  }
  
  public c a()
  {
    return c;
  }
  
  public boolean a(long paramLong)
  {
    if (paramLong >= 0L)
    {
      if (!e)
      {
        do
        {
          localObject = c;
          if (d >= paramLong) {
            break;
          }
        } while (d.b((c)localObject, 8192L) != -1L);
        return false;
        return true;
      }
      throw new IllegalStateException("closed");
    }
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("byteCount < 0: ");
    ((StringBuilder)localObject).append(paramLong);
    localObject = new IllegalArgumentException(((StringBuilder)localObject).toString());
    for (;;)
    {
      throw ((Throwable)localObject);
    }
  }
  
  public boolean a(long paramLong, f paramF)
  {
    return a(paramLong, paramF, 0, paramF.f());
  }
  
  public boolean a(long paramLong, f paramF, int paramInt1, int paramInt2)
  {
    if (!e)
    {
      if ((paramLong >= 0L) && (paramInt1 >= 0) && (paramInt2 >= 0))
      {
        if (paramF.f() - paramInt1 < paramInt2) {
          return false;
        }
        int i = 0;
        while (i < paramInt2)
        {
          long l = i + paramLong;
          if (!a(1L + l)) {
            return false;
          }
          if (c.g(l) != paramF.a(paramInt1 + i)) {
            return false;
          }
          i += 1;
        }
        return true;
      }
      return false;
    }
    paramF = new IllegalStateException("closed");
    for (;;)
    {
      throw paramF;
    }
  }
  
  public long b(c paramC, long paramLong)
  {
    if (paramC != null)
    {
      if (paramLong >= 0L)
      {
        if (!e)
        {
          c localC = c;
          if ((d == 0L) && (d.b(localC, 8192L) == -1L)) {
            return -1L;
          }
          paramLong = Math.min(paramLong, c.d);
          return c.b(paramC, paramLong);
        }
        throw new IllegalStateException("closed");
      }
      paramC = new StringBuilder();
      paramC.append("byteCount < 0: ");
      paramC.append(paramLong);
      throw new IllegalArgumentException(paramC.toString());
    }
    throw new IllegalArgumentException("sink == null");
  }
  
  public f b(long paramLong)
  {
    d(paramLong);
    return c.b(paramLong);
  }
  
  public t b()
  {
    return d.b();
  }
  
  public String c(long paramLong)
  {
    if (paramLong >= 0L)
    {
      long l1;
      if (paramLong == Long.MAX_VALUE) {
        l1 = Long.MAX_VALUE;
      } else {
        l1 = paramLong + 1L;
      }
      long l2 = a((byte)10, 0L, l1);
      if (l2 != -1L) {
        return c.i(l2);
      }
      if ((l1 < Long.MAX_VALUE) && (a(l1)) && (c.g(l1 - 1L) == 13) && (a(1L + l1)) && (c.g(l1) == 10)) {
        return c.i(l1);
      }
      localObject1 = new c();
      Object localObject2 = c;
      ((c)localObject2).a((c)localObject1, 0L, Math.min(32L, ((c)localObject2).q()));
      localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("\\n not found: limit=");
      ((StringBuilder)localObject2).append(Math.min(c.q(), paramLong));
      ((StringBuilder)localObject2).append(" content=");
      ((StringBuilder)localObject2).append(((c)localObject1).o().b());
      ((StringBuilder)localObject2).append('?');
      throw new EOFException(((StringBuilder)localObject2).toString());
    }
    Object localObject1 = new StringBuilder();
    ((StringBuilder)localObject1).append("limit < 0: ");
    ((StringBuilder)localObject1).append(paramLong);
    throw new IllegalArgumentException(((StringBuilder)localObject1).toString());
  }
  
  public short c()
  {
    d(2L);
    return c.c();
  }
  
  public void close()
  {
    if (e) {
      return;
    }
    e = true;
    d.close();
    c.m();
  }
  
  public void d(long paramLong)
  {
    if (a(paramLong)) {
      return;
    }
    throw new EOFException();
  }
  
  public long e()
  {
    d(1L);
    int i = 0;
    while (a(i + 1))
    {
      byte b = c.g(i);
      if (((b >= 48) && (b <= 57)) || ((i == 0) && (b == 45))) {
        i += 1;
      } else if (i == 0) {
        throw new NumberFormatException(String.format("Expected leading [0-9] or '-' character but was %#x", new Object[] { Byte.valueOf(b) }));
      }
    }
    return c.e();
  }
  
  public String f()
  {
    return c(Long.MAX_VALUE);
  }
  
  public byte[] f(long paramLong)
  {
    d(paramLong);
    return c.f(paramLong);
  }
  
  public byte[] g()
  {
    c.a(d);
    return c.g();
  }
  
  public int h()
  {
    d(4L);
    return c.h();
  }
  
  public boolean i()
  {
    if (!e) {
      return (c.i()) && (d.b(c, 8192L) == -1L);
    }
    throw new IllegalStateException("closed");
  }
  
  public boolean isOpen()
  {
    return e ^ true;
  }
  
  public long j()
  {
    d(1L);
    int i = 0;
    while (a(i + 1))
    {
      byte b = c.g(i);
      if (((b >= 48) && (b <= 57)) || ((b >= 97) && (b <= 102)) || ((b >= 65) && (b <= 70))) {
        i += 1;
      } else if (i == 0) {
        throw new NumberFormatException(String.format("Expected leading [0-9a-fA-F] character but was %#x", new Object[] { Byte.valueOf(b) }));
      }
    }
    return c.j();
  }
  
  public InputStream k()
  {
    return new a();
  }
  
  public int read(ByteBuffer paramByteBuffer)
  {
    c localC = c;
    if ((d == 0L) && (d.b(localC, 8192L) == -1L)) {
      return -1;
    }
    return c.read(paramByteBuffer);
  }
  
  public byte readByte()
  {
    d(1L);
    return c.readByte();
  }
  
  public void readFully(byte[] paramArrayOfByte)
  {
    label71:
    try
    {
      d(paramArrayOfByte.length);
      c.readFully(paramArrayOfByte);
      return;
    }
    catch (EOFException localEOFException)
    {
      int i = 0;
      for (;;)
      {
        c localC = c;
        long l = d;
        if (l <= 0L) {
          break label71;
        }
        int j = localC.a(paramArrayOfByte, i, (int)l);
        if (j == -1) {
          break;
        }
        i += j;
      }
      throw new AssertionError();
    }
    for (;;)
    {
      throw localEOFException;
    }
  }
  
  public int readInt()
  {
    d(4L);
    return c.readInt();
  }
  
  public short readShort()
  {
    d(2L);
    return c.readShort();
  }
  
  public void skip(long paramLong)
  {
    if (!e)
    {
      while (paramLong > 0L)
      {
        localObject = c;
        if ((d == 0L) && (d.b((c)localObject, 8192L) == -1L)) {
          throw new EOFException();
        }
        long l = Math.min(paramLong, c.q());
        c.skip(l);
        paramLong -= l;
      }
      return;
    }
    Object localObject = new IllegalStateException("closed");
    for (;;)
    {
      throw ((Throwable)localObject);
    }
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("buffer(");
    localStringBuilder.append(d);
    localStringBuilder.append(")");
    return localStringBuilder.toString();
  }
  
  class a
    extends InputStream
  {
    a() {}
    
    public int available()
    {
      n localN = n.this;
      if (!e) {
        return (int)Math.min(c.d, 2147483647L);
      }
      throw new IOException("closed");
    }
    
    public void close()
    {
      n.this.close();
    }
    
    public int read()
    {
      n localN = n.this;
      if (!e)
      {
        c localC = c;
        if ((d == 0L) && (d.b(localC, 8192L) == -1L)) {
          return -1;
        }
        return c.readByte() & 0xFF;
      }
      throw new IOException("closed");
    }
    
    public int read(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
    {
      if (!e)
      {
        u.a(paramArrayOfByte.length, paramInt1, paramInt2);
        n localN = n.this;
        c localC = c;
        if ((d == 0L) && (d.b(localC, 8192L) == -1L)) {
          return -1;
        }
        return c.a(paramArrayOfByte, paramInt1, paramInt2);
      }
      throw new IOException("closed");
    }
    
    public String toString()
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append(n.this);
      localStringBuilder.append(".inputStream()");
      return localStringBuilder.toString();
    }
  }
}
