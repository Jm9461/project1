package a.a.a.b;

import java.util.HashMap;
import java.util.Map.Entry;

public class a<K, V>
  extends b<K, V>
{
  private HashMap<K, b.d<K, V>> g = new HashMap();
  
  public a() {}
  
  protected b.d<K, V> a(K paramK)
  {
    return (b.d)g.get(paramK);
  }
  
  public V b(K paramK, V paramV)
  {
    b.d localD = a(paramK);
    if (localD != null) {
      return d;
    }
    g.put(paramK, a(paramK, paramV));
    return null;
  }
  
  public Map.Entry<K, V> b(K paramK)
  {
    if (contains(paramK)) {
      return g.get(paramK)).f;
    }
    return null;
  }
  
  public boolean contains(K paramK)
  {
    return g.containsKey(paramK);
  }
  
  public V remove(K paramK)
  {
    Object localObject = super.remove(paramK);
    g.remove(paramK);
    return localObject;
  }
}
