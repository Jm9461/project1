package a.b.g.a;

import android.content.Context;
import android.content.res.Resources;
import android.os.Process;
import java.io.Closeable;
import java.io.File;
import java.io.IOException;
import java.nio.ByteBuffer;

public class i
{
  public static File a(Context paramContext)
  {
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append(".font");
    ((StringBuilder)localObject).append(Process.myPid());
    ((StringBuilder)localObject).append("-");
    ((StringBuilder)localObject).append(Process.myTid());
    ((StringBuilder)localObject).append("-");
    localObject = ((StringBuilder)localObject).toString();
    int i = 0;
    while (i < 100)
    {
      File localFile = paramContext.getCacheDir();
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append((String)localObject);
      localStringBuilder.append(i);
      localFile = new File(localFile, localStringBuilder.toString());
      try
      {
        boolean bool = localFile.createNewFile();
        if (bool) {
          return localFile;
        }
      }
      catch (IOException localIOException) {}
      i += 1;
    }
    return null;
  }
  
  public static ByteBuffer a(Context paramContext, Resources paramResources, int paramInt)
  {
    File localFile = a(paramContext);
    paramContext = null;
    if (localFile == null) {
      return null;
    }
    try
    {
      boolean bool = a(localFile, paramResources, paramInt);
      if (!bool) {}
      for (;;)
      {
        localFile.delete();
        return paramContext;
        paramContext = a(localFile);
      }
      throw paramContext;
    }
    finally
    {
      localFile.delete();
    }
    for (;;) {}
  }
  
  /* Error */
  public static ByteBuffer a(Context paramContext, android.os.CancellationSignal paramCancellationSignal, android.net.Uri paramUri)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokevirtual 71	android/content/Context:getContentResolver	()Landroid/content/ContentResolver;
    //   4: astore_0
    //   5: aload_0
    //   6: aload_2
    //   7: ldc 73
    //   9: aload_1
    //   10: invokevirtual 79	android/content/ContentResolver:openFileDescriptor	(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/os/ParcelFileDescriptor;
    //   13: astore_0
    //   14: aload_0
    //   15: ifnonnull +13 -> 28
    //   18: aload_0
    //   19: ifnull +7 -> 26
    //   22: aload_0
    //   23: invokevirtual 84	android/os/ParcelFileDescriptor:close	()V
    //   26: aconst_null
    //   27: areturn
    //   28: new 86	java/io/FileInputStream
    //   31: dup
    //   32: aload_0
    //   33: invokevirtual 90	android/os/ParcelFileDescriptor:getFileDescriptor	()Ljava/io/FileDescriptor;
    //   36: invokespecial 93	java/io/FileInputStream:<init>	(Ljava/io/FileDescriptor;)V
    //   39: astore_1
    //   40: aload_1
    //   41: invokevirtual 97	java/io/FileInputStream:getChannel	()Ljava/nio/channels/FileChannel;
    //   44: astore_2
    //   45: aload_2
    //   46: invokevirtual 103	java/nio/channels/FileChannel:size	()J
    //   49: lstore_3
    //   50: aload_2
    //   51: getstatic 109	java/nio/channels/FileChannel$MapMode:READ_ONLY	Ljava/nio/channels/FileChannel$MapMode;
    //   54: lconst_0
    //   55: lload_3
    //   56: invokevirtual 113	java/nio/channels/FileChannel:map	(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
    //   59: astore_2
    //   60: aload_1
    //   61: invokevirtual 114	java/io/FileInputStream:close	()V
    //   64: aload_0
    //   65: ifnull +7 -> 72
    //   68: aload_0
    //   69: invokevirtual 84	android/os/ParcelFileDescriptor:close	()V
    //   72: aload_2
    //   73: areturn
    //   74: astore_2
    //   75: aload_2
    //   76: athrow
    //   77: astore 5
    //   79: aload_1
    //   80: invokevirtual 114	java/io/FileInputStream:close	()V
    //   83: goto +9 -> 92
    //   86: astore_1
    //   87: aload_2
    //   88: aload_1
    //   89: invokevirtual 120	java/lang/Throwable:addSuppressed	(Ljava/lang/Throwable;)V
    //   92: aload 5
    //   94: athrow
    //   95: astore_1
    //   96: aload_1
    //   97: athrow
    //   98: astore_2
    //   99: aload_0
    //   100: ifnull +16 -> 116
    //   103: aload_0
    //   104: invokevirtual 84	android/os/ParcelFileDescriptor:close	()V
    //   107: goto +9 -> 116
    //   110: astore_0
    //   111: aload_1
    //   112: aload_0
    //   113: invokevirtual 120	java/lang/Throwable:addSuppressed	(Ljava/lang/Throwable;)V
    //   116: aload_2
    //   117: athrow
    //   118: astore_0
    //   119: aconst_null
    //   120: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	121	0	paramContext	Context
    //   0	121	1	paramCancellationSignal	android.os.CancellationSignal
    //   0	121	2	paramUri	android.net.Uri
    //   49	7	3	l	long
    //   77	16	5	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   40	60	74	finally
    //   75	77	77	finally
    //   79	83	86	finally
    //   28	40	95	finally
    //   60	64	95	finally
    //   87	92	95	finally
    //   92	95	95	finally
    //   96	98	98	finally
    //   103	107	110	finally
    //   5	14	118	java/io/IOException
    //   22	26	118	java/io/IOException
    //   68	72	118	java/io/IOException
    //   111	116	118	java/io/IOException
    //   116	118	118	java/io/IOException
  }
  
  /* Error */
  private static ByteBuffer a(File paramFile)
  {
    // Byte code:
    //   0: new 86	java/io/FileInputStream
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 123	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   8: astore_0
    //   9: aload_0
    //   10: invokevirtual 97	java/io/FileInputStream:getChannel	()Ljava/nio/channels/FileChannel;
    //   13: astore_3
    //   14: aload_3
    //   15: invokevirtual 103	java/nio/channels/FileChannel:size	()J
    //   18: lstore_1
    //   19: aload_3
    //   20: getstatic 109	java/nio/channels/FileChannel$MapMode:READ_ONLY	Ljava/nio/channels/FileChannel$MapMode;
    //   23: lconst_0
    //   24: lload_1
    //   25: invokevirtual 113	java/nio/channels/FileChannel:map	(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
    //   28: astore_3
    //   29: aload_0
    //   30: invokevirtual 114	java/io/FileInputStream:close	()V
    //   33: aload_3
    //   34: areturn
    //   35: astore_3
    //   36: aload_3
    //   37: athrow
    //   38: astore 4
    //   40: aload_0
    //   41: invokevirtual 114	java/io/FileInputStream:close	()V
    //   44: goto +9 -> 53
    //   47: astore_0
    //   48: aload_3
    //   49: aload_0
    //   50: invokevirtual 120	java/lang/Throwable:addSuppressed	(Ljava/lang/Throwable;)V
    //   53: aload 4
    //   55: athrow
    //   56: astore_0
    //   57: aconst_null
    //   58: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	59	0	paramFile	File
    //   18	7	1	l	long
    //   13	21	3	localObject1	Object
    //   35	14	3	localObject2	Object
    //   38	16	4	localObject3	Object
    // Exception table:
    //   from	to	target	type
    //   9	29	35	finally
    //   36	38	38	finally
    //   40	44	47	finally
    //   0	9	56	java/io/IOException
    //   29	33	56	java/io/IOException
    //   48	53	56	java/io/IOException
    //   53	56	56	java/io/IOException
  }
  
  public static void a(Closeable paramCloseable)
  {
    if (paramCloseable != null) {
      try
      {
        paramCloseable.close();
        return;
      }
      catch (IOException paramCloseable) {}
    }
  }
  
  public static boolean a(File paramFile, Resources paramResources, int paramInt)
  {
    Resources localResources = null;
    try
    {
      paramResources = paramResources.openRawResource(paramInt);
      localResources = paramResources;
      boolean bool = a(paramFile, paramResources);
      return bool;
    }
    finally
    {
      a(localResources);
    }
  }
  
  /* Error */
  public static boolean a(File paramFile, java.io.InputStream paramInputStream)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aconst_null
    //   4: astore_3
    //   5: invokestatic 144	android/os/StrictMode:allowThreadDiskWrites	()Landroid/os/StrictMode$ThreadPolicy;
    //   8: astore 5
    //   10: new 146	java/io/FileOutputStream
    //   13: dup
    //   14: aload_0
    //   15: iconst_0
    //   16: invokespecial 149	java/io/FileOutputStream:<init>	(Ljava/io/File;Z)V
    //   19: astore_0
    //   20: aload_0
    //   21: astore_3
    //   22: aload_0
    //   23: astore 4
    //   25: sipush 1024
    //   28: newarray byte
    //   30: astore 6
    //   32: aload_0
    //   33: astore_3
    //   34: aload_0
    //   35: astore 4
    //   37: aload_1
    //   38: aload 6
    //   40: invokevirtual 155	java/io/InputStream:read	([B)I
    //   43: istore_2
    //   44: iload_2
    //   45: iconst_m1
    //   46: if_icmpeq +19 -> 65
    //   49: aload_0
    //   50: astore_3
    //   51: aload_0
    //   52: astore 4
    //   54: aload_0
    //   55: aload 6
    //   57: iconst_0
    //   58: iload_2
    //   59: invokevirtual 159	java/io/FileOutputStream:write	([BII)V
    //   62: goto -30 -> 32
    //   65: aload_0
    //   66: invokestatic 138	a/b/g/a/i:a	(Ljava/io/Closeable;)V
    //   69: aload 5
    //   71: invokestatic 163	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   74: iconst_1
    //   75: ireturn
    //   76: astore_0
    //   77: goto +62 -> 139
    //   80: astore_0
    //   81: aload 4
    //   83: astore_3
    //   84: new 10	java/lang/StringBuilder
    //   87: dup
    //   88: invokespecial 14	java/lang/StringBuilder:<init>	()V
    //   91: astore_1
    //   92: aload 4
    //   94: astore_3
    //   95: aload_1
    //   96: ldc -91
    //   98: invokevirtual 20	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   101: pop
    //   102: aload 4
    //   104: astore_3
    //   105: aload_1
    //   106: aload_0
    //   107: invokevirtual 168	java/io/IOException:getMessage	()Ljava/lang/String;
    //   110: invokevirtual 20	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   113: pop
    //   114: aload 4
    //   116: astore_3
    //   117: ldc -86
    //   119: aload_1
    //   120: invokevirtual 38	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   123: invokestatic 176	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;)I
    //   126: pop
    //   127: aload 4
    //   129: invokestatic 138	a/b/g/a/i:a	(Ljava/io/Closeable;)V
    //   132: aload 5
    //   134: invokestatic 163	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   137: iconst_0
    //   138: ireturn
    //   139: aload_3
    //   140: invokestatic 138	a/b/g/a/i:a	(Ljava/io/Closeable;)V
    //   143: aload 5
    //   145: invokestatic 163	android/os/StrictMode:setThreadPolicy	(Landroid/os/StrictMode$ThreadPolicy;)V
    //   148: goto +5 -> 153
    //   151: aload_0
    //   152: athrow
    //   153: goto -2 -> 151
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	156	0	paramFile	File
    //   0	156	1	paramInputStream	java.io.InputStream
    //   43	16	2	i	int
    //   4	136	3	localFile1	File
    //   1	127	4	localFile2	File
    //   8	136	5	localThreadPolicy	android.os.StrictMode.ThreadPolicy
    //   30	26	6	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   10	20	76	finally
    //   25	32	76	finally
    //   37	44	76	finally
    //   54	62	76	finally
    //   84	92	76	finally
    //   95	102	76	finally
    //   105	114	76	finally
    //   117	127	76	finally
    //   10	20	80	java/io/IOException
    //   25	32	80	java/io/IOException
    //   37	44	80	java/io/IOException
    //   54	62	80	java/io/IOException
  }
}
