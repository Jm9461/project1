package a.b.g.a;

import a.b.g.e.b.f;
import a.b.g.g.n;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Typeface;
import android.net.Uri;
import android.os.CancellationSignal;
import android.support.v4.content.e.c.b;
import android.support.v4.content.e.c.c;
import android.util.Log;
import java.lang.reflect.Array;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.nio.ByteBuffer;

class e
  extends h
{
  private static final Class a;
  private static final Constructor b;
  private static final Method c;
  private static final Method d;
  
  /* Error */
  static
  {
    // Byte code:
    //   0: ldc 19
    //   2: invokestatic 25	java/lang/Class:forName	(Ljava/lang/String;)Ljava/lang/Class;
    //   5: astore_0
    //   6: aload_0
    //   7: iconst_0
    //   8: anewarray 21	java/lang/Class
    //   11: invokevirtual 29	java/lang/Class:getConstructor	([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
    //   14: astore_2
    //   15: aload_0
    //   16: ldc 31
    //   18: iconst_5
    //   19: anewarray 21	java/lang/Class
    //   22: dup
    //   23: iconst_0
    //   24: ldc 33
    //   26: aastore
    //   27: dup
    //   28: iconst_1
    //   29: getstatic 38	java/lang/Integer:TYPE	Ljava/lang/Class;
    //   32: aastore
    //   33: dup
    //   34: iconst_2
    //   35: ldc 40
    //   37: aastore
    //   38: dup
    //   39: iconst_3
    //   40: getstatic 38	java/lang/Integer:TYPE	Ljava/lang/Class;
    //   43: aastore
    //   44: dup
    //   45: iconst_4
    //   46: getstatic 43	java/lang/Boolean:TYPE	Ljava/lang/Class;
    //   49: aastore
    //   50: invokevirtual 47	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   53: astore_3
    //   54: ldc 49
    //   56: ldc 51
    //   58: iconst_1
    //   59: anewarray 21	java/lang/Class
    //   62: dup
    //   63: iconst_0
    //   64: aload_0
    //   65: iconst_1
    //   66: invokestatic 57	java/lang/reflect/Array:newInstance	(Ljava/lang/Class;I)Ljava/lang/Object;
    //   69: invokevirtual 63	java/lang/Object:getClass	()Ljava/lang/Class;
    //   72: aastore
    //   73: invokevirtual 47	java/lang/Class:getMethod	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    //   76: astore_1
    //   77: goto +54 -> 131
    //   80: astore_0
    //   81: goto +28 -> 109
    //   84: astore_0
    //   85: goto +24 -> 109
    //   88: astore_0
    //   89: goto +20 -> 109
    //   92: astore_0
    //   93: goto +16 -> 109
    //   96: astore_0
    //   97: goto +12 -> 109
    //   100: astore_0
    //   101: goto +8 -> 109
    //   104: astore_0
    //   105: goto +4 -> 109
    //   108: astore_0
    //   109: ldc 65
    //   111: aload_0
    //   112: invokevirtual 63	java/lang/Object:getClass	()Ljava/lang/Class;
    //   115: invokevirtual 69	java/lang/Class:getName	()Ljava/lang/String;
    //   118: aload_0
    //   119: invokestatic 75	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   122: pop
    //   123: aconst_null
    //   124: astore_0
    //   125: aconst_null
    //   126: astore_2
    //   127: aconst_null
    //   128: astore_3
    //   129: aconst_null
    //   130: astore_1
    //   131: aload_2
    //   132: putstatic 77	a/b/g/a/e:b	Ljava/lang/reflect/Constructor;
    //   135: aload_0
    //   136: putstatic 79	a/b/g/a/e:a	Ljava/lang/Class;
    //   139: aload_3
    //   140: putstatic 81	a/b/g/a/e:c	Ljava/lang/reflect/Method;
    //   143: aload_1
    //   144: putstatic 83	a/b/g/a/e:d	Ljava/lang/reflect/Method;
    //   147: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   5	60	0	localClass	Class
    //   80	1	0	localNoSuchMethodException1	NoSuchMethodException
    //   84	1	0	localClassNotFoundException1	ClassNotFoundException
    //   88	1	0	localNoSuchMethodException2	NoSuchMethodException
    //   92	1	0	localClassNotFoundException2	ClassNotFoundException
    //   96	1	0	localNoSuchMethodException3	NoSuchMethodException
    //   100	1	0	localClassNotFoundException3	ClassNotFoundException
    //   104	1	0	localNoSuchMethodException4	NoSuchMethodException
    //   108	11	0	localClassNotFoundException4	ClassNotFoundException
    //   124	12	0	localObject	Object
    //   76	68	1	localMethod1	Method
    //   14	118	2	localConstructor	Constructor
    //   53	87	3	localMethod2	Method
    // Exception table:
    //   from	to	target	type
    //   54	77	80	java/lang/NoSuchMethodException
    //   54	77	84	java/lang/ClassNotFoundException
    //   15	54	88	java/lang/NoSuchMethodException
    //   15	54	92	java/lang/ClassNotFoundException
    //   6	15	96	java/lang/NoSuchMethodException
    //   6	15	100	java/lang/ClassNotFoundException
    //   0	6	104	java/lang/NoSuchMethodException
    //   0	6	108	java/lang/ClassNotFoundException
  }
  
  e() {}
  
  private static Typeface a(Object paramObject)
  {
    try
    {
      Object localObject = Array.newInstance(a, 1);
      Array.set(localObject, 0, paramObject);
      paramObject = (Typeface)d.invoke(null, new Object[] { localObject });
      return paramObject;
    }
    catch (InvocationTargetException paramObject) {}catch (IllegalAccessException paramObject) {}
    throw new RuntimeException(paramObject);
  }
  
  public static boolean a()
  {
    if (c == null) {
      Log.w("TypefaceCompatApi24Impl", "Unable to collect necessary private methods.Fallback to legacy implementation.");
    }
    return c != null;
  }
  
  private static boolean a(Object paramObject, ByteBuffer paramByteBuffer, int paramInt1, int paramInt2, boolean paramBoolean)
  {
    try
    {
      paramBoolean = ((Boolean)c.invoke(paramObject, new Object[] { paramByteBuffer, Integer.valueOf(paramInt1), null, Integer.valueOf(paramInt2), Boolean.valueOf(paramBoolean) })).booleanValue();
      return paramBoolean;
    }
    catch (InvocationTargetException paramObject) {}catch (IllegalAccessException paramObject) {}
    throw new RuntimeException(paramObject);
  }
  
  private static Object b()
  {
    try
    {
      Object localObject = b.newInstance(new Object[0]);
      return localObject;
    }
    catch (InvocationTargetException localInvocationTargetException) {}catch (InstantiationException localInstantiationException) {}catch (IllegalAccessException localIllegalAccessException) {}
    throw new RuntimeException(localIllegalAccessException);
  }
  
  public Typeface a(Context paramContext, CancellationSignal paramCancellationSignal, b.f[] paramArrayOfF, int paramInt)
  {
    Object localObject = b();
    n localN = new n();
    int j = paramArrayOfF.length;
    int i = 0;
    while (i < j)
    {
      b.f localF = paramArrayOfF[i];
      Uri localUri = localF.c();
      ByteBuffer localByteBuffer2 = (ByteBuffer)localN.get(localUri);
      ByteBuffer localByteBuffer1 = localByteBuffer2;
      if (localByteBuffer2 == null)
      {
        localByteBuffer1 = i.a(paramContext, paramCancellationSignal, localUri);
        localN.put(localUri, localByteBuffer1);
      }
      if (!a(localObject, localByteBuffer1, localF.b(), localF.d(), localF.e())) {
        return null;
      }
      i += 1;
    }
    return Typeface.create(a(localObject), paramInt);
  }
  
  public Typeface a(Context paramContext, c.b paramB, Resources paramResources, int paramInt)
  {
    Object localObject1 = b();
    paramB = paramB.a();
    int i = paramB.length;
    paramInt = 0;
    while (paramInt < i)
    {
      Object localObject2 = paramB[paramInt];
      ByteBuffer localByteBuffer = i.a(paramContext, paramResources, localObject2.b());
      if (localByteBuffer == null) {
        return null;
      }
      if (!a(localObject1, localByteBuffer, localObject2.c(), localObject2.e(), localObject2.f())) {
        return null;
      }
      paramInt += 1;
    }
    return a(localObject1);
  }
}
