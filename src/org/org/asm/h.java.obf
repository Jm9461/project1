package a.b.f;

import a.b.g.g.f;
import a.b.g.g.n;
import android.animation.Animator;
import android.animation.AnimatorListenerAdapter;
import android.animation.TimeInterpolator;
import android.graphics.Path;
import android.support.v4.view.u;
import android.util.SparseArray;
import android.util.SparseIntArray;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListAdapter;
import android.widget.ListView;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

public abstract class m
  implements Cloneable
{
  private static final int[] I = { 2, 1, 3, 4 };
  private static final g J = new a();
  private static ThreadLocal<a.b.g.g.a<Animator, d>> K = new ThreadLocal();
  private boolean A = false;
  private boolean B = false;
  private ArrayList<f> C = null;
  private ArrayList<Animator> D = new ArrayList();
  p E;
  private e F;
  private a.b.g.g.a<String, String> G;
  private g H = J;
  private String c = getClass().getName();
  private long d = -1L;
  long e = -1L;
  private TimeInterpolator f = null;
  ArrayList<Integer> g = new ArrayList();
  ArrayList<View> h = new ArrayList();
  private ArrayList<String> i = null;
  private ArrayList<Class> j = null;
  private ArrayList<Integer> k = null;
  private ArrayList<View> l = null;
  private ArrayList<Class> m = null;
  private ArrayList<String> n = null;
  private ArrayList<Integer> o = null;
  private ArrayList<View> p = null;
  private ArrayList<Class> q = null;
  private t r = new t();
  private t s = new t();
  q t = null;
  private int[] u = I;
  private ArrayList<s> v;
  private ArrayList<s> w;
  boolean x = false;
  ArrayList<Animator> y = new ArrayList();
  private int z = 0;
  
  public m() {}
  
  private void a(t paramT1, t paramT2)
  {
    a.b.g.g.a localA1 = new a.b.g.g.a(a);
    a.b.g.g.a localA2 = new a.b.g.g.a(a);
    int i1 = 0;
    for (;;)
    {
      int[] arrayOfInt = u;
      if (i1 >= arrayOfInt.length) {
        break;
      }
      int i2 = arrayOfInt[i1];
      if (i2 != 1)
      {
        if (i2 != 2)
        {
          if (i2 != 3)
          {
            if (i2 == 4) {
              a(localA1, localA2, c, c);
            }
          }
          else {
            a(localA1, localA2, b, b);
          }
        }
        else {
          a(localA1, localA2, d, d);
        }
      }
      else {
        b(localA1, localA2);
      }
      i1 += 1;
    }
    a(localA1, localA2);
  }
  
  private static void a(t paramT, View paramView, s paramS)
  {
    a.put(paramView, paramS);
    int i1 = paramView.getId();
    if (i1 >= 0) {
      if (b.indexOfKey(i1) >= 0) {
        b.put(i1, null);
      } else {
        b.put(i1, paramView);
      }
    }
    paramS = u.q(paramView);
    if (paramS != null) {
      if (d.containsKey(paramS)) {
        d.put(paramS, null);
      } else {
        d.put(paramS, paramView);
      }
    }
    if ((paramView.getParent() instanceof ListView))
    {
      paramS = (ListView)paramView.getParent();
      if (paramS.getAdapter().hasStableIds())
      {
        long l1 = paramS.getItemIdAtPosition(paramS.getPositionForView(paramView));
        if (c.c(l1) >= 0)
        {
          paramView = (View)c.b(l1);
          if (paramView != null)
          {
            u.b(paramView, false);
            c.c(l1, null);
          }
          return;
        }
        u.b(paramView, true);
        c.c(l1, paramView);
      }
    }
  }
  
  private void a(a.b.g.g.a<View, s> paramA1, a.b.g.g.a<View, s> paramA2)
  {
    int i1 = 0;
    while (i1 < paramA1.size())
    {
      s localS = (s)paramA1.d(i1);
      if (b(b))
      {
        v.add(localS);
        w.add(null);
      }
      i1 += 1;
    }
    i1 = 0;
    while (i1 < paramA2.size())
    {
      paramA1 = (s)paramA2.d(i1);
      if (b(b))
      {
        w.add(paramA1);
        v.add(null);
      }
      i1 += 1;
    }
  }
  
  private void a(a.b.g.g.a<View, s> paramA1, a.b.g.g.a<View, s> paramA2, a.b.g.g.a<String, View> paramA3, a.b.g.g.a<String, View> paramA4)
  {
    int i2 = paramA3.size();
    int i1 = 0;
    while (i1 < i2)
    {
      View localView1 = (View)paramA3.d(i1);
      if ((localView1 != null) && (b(localView1)))
      {
        View localView2 = (View)paramA4.get(paramA3.b(i1));
        if ((localView2 != null) && (b(localView2)))
        {
          s localS1 = (s)paramA1.get(localView1);
          s localS2 = (s)paramA2.get(localView2);
          if ((localS1 != null) && (localS2 != null))
          {
            v.add(localS1);
            w.add(localS2);
            paramA1.remove(localView1);
            paramA2.remove(localView2);
          }
        }
      }
      i1 += 1;
    }
  }
  
  private void a(a.b.g.g.a<View, s> paramA1, a.b.g.g.a<View, s> paramA2, f<View> paramF1, f<View> paramF2)
  {
    int i2 = paramF1.b();
    int i1 = 0;
    while (i1 < i2)
    {
      View localView1 = (View)paramF1.c(i1);
      if ((localView1 != null) && (b(localView1)))
      {
        View localView2 = (View)paramF2.b(paramF1.a(i1));
        if ((localView2 != null) && (b(localView2)))
        {
          s localS1 = (s)paramA1.get(localView1);
          s localS2 = (s)paramA2.get(localView2);
          if ((localS1 != null) && (localS2 != null))
          {
            v.add(localS1);
            w.add(localS2);
            paramA1.remove(localView1);
            paramA2.remove(localView2);
          }
        }
      }
      i1 += 1;
    }
  }
  
  private void a(a.b.g.g.a<View, s> paramA1, a.b.g.g.a<View, s> paramA2, SparseArray<View> paramSparseArray1, SparseArray<View> paramSparseArray2)
  {
    int i2 = paramSparseArray1.size();
    int i1 = 0;
    while (i1 < i2)
    {
      View localView1 = (View)paramSparseArray1.valueAt(i1);
      if ((localView1 != null) && (b(localView1)))
      {
        View localView2 = (View)paramSparseArray2.get(paramSparseArray1.keyAt(i1));
        if ((localView2 != null) && (b(localView2)))
        {
          s localS1 = (s)paramA1.get(localView1);
          s localS2 = (s)paramA2.get(localView2);
          if ((localS1 != null) && (localS2 != null))
          {
            v.add(localS1);
            w.add(localS2);
            paramA1.remove(localView1);
            paramA2.remove(localView2);
          }
        }
      }
      i1 += 1;
    }
  }
  
  private void a(Animator paramAnimator, final a.b.g.g.a<Animator, d> paramA)
  {
    if (paramAnimator != null)
    {
      paramAnimator.addListener(new b(paramA));
      a(paramAnimator);
    }
  }
  
  private static boolean a(s paramS1, s paramS2, String paramString)
  {
    paramS1 = a.get(paramString);
    paramS2 = a.get(paramString);
    if ((paramS1 == null) && (paramS2 == null)) {
      return false;
    }
    if ((paramS1 != null) && (paramS2 != null)) {
      return paramS1.equals(paramS2) ^ true;
    }
    return true;
  }
  
  private void b(a.b.g.g.a<View, s> paramA1, a.b.g.g.a<View, s> paramA2)
  {
    int i1 = paramA1.size() - 1;
    while (i1 >= 0)
    {
      Object localObject1 = (View)paramA1.b(i1);
      if ((localObject1 != null) && (b((View)localObject1)))
      {
        localObject1 = (s)paramA2.remove(localObject1);
        if (localObject1 != null)
        {
          Object localObject2 = b;
          if ((localObject2 != null) && (b((View)localObject2)))
          {
            localObject2 = (s)paramA1.c(i1);
            v.add(localObject2);
            w.add(localObject1);
          }
        }
      }
      i1 -= 1;
    }
  }
  
  private void c(View paramView, boolean paramBoolean)
  {
    if (paramView == null) {
      return;
    }
    int i2 = paramView.getId();
    Object localObject = k;
    if ((localObject != null) && (((ArrayList)localObject).contains(Integer.valueOf(i2)))) {
      return;
    }
    localObject = l;
    if ((localObject != null) && (((ArrayList)localObject).contains(paramView))) {
      return;
    }
    localObject = m;
    int i1;
    if (localObject != null)
    {
      int i3 = ((ArrayList)localObject).size();
      i1 = 0;
      while (i1 < i3)
      {
        if (((Class)m.get(i1)).isInstance(paramView)) {
          return;
        }
        i1 += 1;
      }
    }
    if ((paramView.getParent() instanceof ViewGroup))
    {
      localObject = new s();
      b = paramView;
      if (paramBoolean) {
        c((s)localObject);
      } else {
        a((s)localObject);
      }
      c.add(this);
      b((s)localObject);
      if (paramBoolean) {
        a(r, paramView, (s)localObject);
      } else {
        a(s, paramView, (s)localObject);
      }
    }
    if ((paramView instanceof ViewGroup))
    {
      localObject = o;
      if ((localObject != null) && (((ArrayList)localObject).contains(Integer.valueOf(i2)))) {
        return;
      }
      localObject = p;
      if ((localObject != null) && (((ArrayList)localObject).contains(paramView))) {
        return;
      }
      localObject = q;
      if (localObject != null)
      {
        i2 = ((ArrayList)localObject).size();
        i1 = 0;
        while (i1 < i2)
        {
          if (((Class)q.get(i1)).isInstance(paramView)) {
            return;
          }
          i1 += 1;
        }
      }
      paramView = (ViewGroup)paramView;
      i1 = 0;
      while (i1 < paramView.getChildCount())
      {
        c(paramView.getChildAt(i1), paramBoolean);
        i1 += 1;
      }
    }
  }
  
  private static a.b.g.g.a<Animator, d> q()
  {
    a.b.g.g.a localA2 = (a.b.g.g.a)K.get();
    a.b.g.g.a localA1 = localA2;
    if (localA2 == null)
    {
      localA1 = new a.b.g.g.a();
      K.set(localA1);
    }
    return localA1;
  }
  
  public m a(long paramLong)
  {
    e = paramLong;
    return this;
  }
  
  public m a(f paramF)
  {
    if (C == null) {
      C = new ArrayList();
    }
    C.add(paramF);
    return this;
  }
  
  public m a(TimeInterpolator paramTimeInterpolator)
  {
    f = paramTimeInterpolator;
    return this;
  }
  
  public m a(View paramView)
  {
    h.add(paramView);
    return this;
  }
  
  s a(View paramView, boolean paramBoolean)
  {
    Object localObject = t;
    if (localObject != null) {
      return ((m)localObject).a(paramView, paramBoolean);
    }
    if (paramBoolean) {
      localObject = v;
    } else {
      localObject = w;
    }
    if (localObject == null) {
      return null;
    }
    int i4 = ((ArrayList)localObject).size();
    int i3 = -1;
    int i1 = 0;
    int i2;
    for (;;)
    {
      i2 = i3;
      if (i1 >= i4) {
        break;
      }
      s localS = (s)((ArrayList)localObject).get(i1);
      if (localS == null) {
        return null;
      }
      if (b == paramView)
      {
        i2 = i1;
        break;
      }
      i1 += 1;
    }
    paramView = null;
    if (i2 >= 0)
    {
      if (paramBoolean) {
        paramView = w;
      } else {
        paramView = v;
      }
      paramView = (s)paramView.get(i2);
    }
    return paramView;
  }
  
  public Animator a(ViewGroup paramViewGroup, s paramS1, s paramS2)
  {
    return null;
  }
  
  String a(String paramString)
  {
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append(paramString);
    ((StringBuilder)localObject).append(getClass().getSimpleName());
    ((StringBuilder)localObject).append("@");
    ((StringBuilder)localObject).append(Integer.toHexString(hashCode()));
    ((StringBuilder)localObject).append(": ");
    localObject = ((StringBuilder)localObject).toString();
    paramString = (String)localObject;
    if (e != -1L)
    {
      paramString = new StringBuilder();
      paramString.append((String)localObject);
      paramString.append("dur(");
      paramString.append(e);
      paramString.append(") ");
      paramString = paramString.toString();
    }
    localObject = paramString;
    if (d != -1L)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(paramString);
      ((StringBuilder)localObject).append("dly(");
      ((StringBuilder)localObject).append(d);
      ((StringBuilder)localObject).append(") ");
      localObject = ((StringBuilder)localObject).toString();
    }
    paramString = (String)localObject;
    if (f != null)
    {
      paramString = new StringBuilder();
      paramString.append((String)localObject);
      paramString.append("interp(");
      paramString.append(f);
      paramString.append(") ");
      paramString = paramString.toString();
    }
    if (g.size() <= 0)
    {
      localObject = paramString;
      if (h.size() <= 0) {}
    }
    else
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(paramString);
      ((StringBuilder)localObject).append("tgts(");
      paramString = ((StringBuilder)localObject).toString();
      localObject = paramString;
      int i1;
      if (g.size() > 0)
      {
        i1 = 0;
        for (;;)
        {
          localObject = paramString;
          if (i1 >= g.size()) {
            break;
          }
          localObject = paramString;
          if (i1 > 0)
          {
            localObject = new StringBuilder();
            ((StringBuilder)localObject).append(paramString);
            ((StringBuilder)localObject).append(", ");
            localObject = ((StringBuilder)localObject).toString();
          }
          paramString = new StringBuilder();
          paramString.append((String)localObject);
          paramString.append(g.get(i1));
          paramString = paramString.toString();
          i1 += 1;
        }
      }
      paramString = (String)localObject;
      if (h.size() > 0)
      {
        i1 = 0;
        for (;;)
        {
          paramString = (String)localObject;
          if (i1 >= h.size()) {
            break;
          }
          paramString = (String)localObject;
          if (i1 > 0)
          {
            paramString = new StringBuilder();
            paramString.append((String)localObject);
            paramString.append(", ");
            paramString = paramString.toString();
          }
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append(paramString);
          ((StringBuilder)localObject).append(h.get(i1));
          localObject = ((StringBuilder)localObject).toString();
          i1 += 1;
        }
      }
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(paramString);
      ((StringBuilder)localObject).append(")");
      localObject = ((StringBuilder)localObject).toString();
    }
    return localObject;
  }
  
  protected void a()
  {
    z -= 1;
    if (z == 0)
    {
      Object localObject = C;
      if ((localObject != null) && (((ArrayList)localObject).size() > 0))
      {
        localObject = (ArrayList)C.clone();
        int i2 = ((ArrayList)localObject).size();
        i1 = 0;
        while (i1 < i2)
        {
          ((f)((ArrayList)localObject).get(i1)).b(this);
          i1 += 1;
        }
      }
      int i1 = 0;
      while (i1 < r.c.b())
      {
        localObject = (View)r.c.c(i1);
        if (localObject != null) {
          u.b((View)localObject, false);
        }
        i1 += 1;
      }
      i1 = 0;
      while (i1 < s.c.b())
      {
        localObject = (View)s.c.c(i1);
        if (localObject != null) {
          u.b((View)localObject, false);
        }
        i1 += 1;
      }
      B = true;
    }
  }
  
  public void a(g paramG)
  {
    if (paramG == null)
    {
      H = J;
      return;
    }
    H = paramG;
  }
  
  public void a(e paramE)
  {
    F = paramE;
  }
  
  public void a(p paramP)
  {
    E = paramP;
  }
  
  public abstract void a(s paramS);
  
  protected void a(Animator paramAnimator)
  {
    if (paramAnimator == null)
    {
      a();
      return;
    }
    if (b() >= 0L) {
      paramAnimator.setDuration(b());
    }
    if (h() >= 0L) {
      paramAnimator.setStartDelay(h());
    }
    if (d() != null) {
      paramAnimator.setInterpolator(d());
    }
    paramAnimator.addListener(new c());
    paramAnimator.start();
  }
  
  void a(ViewGroup paramViewGroup)
  {
    v = new ArrayList();
    w = new ArrayList();
    a(r, s);
    a.b.g.g.a localA = q();
    int i1 = localA.size();
    l0 localL0 = d0.d(paramViewGroup);
    i1 -= 1;
    while (i1 >= 0)
    {
      Animator localAnimator = (Animator)localA.b(i1);
      if (localAnimator != null)
      {
        d localD = (d)localA.get(localAnimator);
        if ((localD != null) && (a != null) && (localL0.equals(d)))
        {
          s localS1 = c;
          Object localObject = a;
          int i2 = 1;
          s localS2 = b((View)localObject, true);
          localObject = a((View)localObject, true);
          if (((localS2 == null) && (localObject == null)) || (!e.a(localS1, (s)localObject))) {
            i2 = 0;
          }
          if (i2 != 0) {
            if ((!localAnimator.isRunning()) && (!localAnimator.isStarted())) {
              localA.remove(localAnimator);
            } else {
              localAnimator.cancel();
            }
          }
        }
      }
      i1 -= 1;
    }
    a(paramViewGroup, r, s, v, w);
    o();
  }
  
  protected void a(ViewGroup paramViewGroup, t paramT1, t paramT2, ArrayList<s> paramArrayList1, ArrayList<s> paramArrayList2)
  {
    a.b.g.g.a localA = q();
    long l1 = Long.MAX_VALUE;
    SparseIntArray localSparseIntArray = new SparseIntArray();
    int i3 = paramArrayList1.size();
    int i1 = 0;
    int i2;
    while (i1 < i3)
    {
      s localS1 = (s)paramArrayList1.get(i1);
      s localS2 = (s)paramArrayList2.get(i1);
      if ((localS1 != null) && (!c.contains(this))) {
        localS1 = null;
      }
      if ((localS2 != null) && (!c.contains(this))) {
        localS2 = null;
      }
      long l2;
      if ((localS1 == null) && (localS2 == null))
      {
        l2 = l1;
      }
      else
      {
        if ((localS1 != null) && (localS2 != null) && (!a(localS1, localS2))) {
          i2 = 0;
        } else {
          i2 = 1;
        }
        if (i2 != 0)
        {
          paramT1 = a(paramViewGroup, localS1, localS2);
          if (paramT1 != null)
          {
            Object localObject1 = null;
            View localView;
            Object localObject2;
            if (localS2 != null)
            {
              localView = b;
              String[] arrayOfString = n();
              if ((localView != null) && (arrayOfString != null)) {
                if (arrayOfString.length > 0)
                {
                  localObject2 = new s();
                  b = localView;
                  localObject1 = (s)a.get(localView);
                  if (localObject1 != null)
                  {
                    i2 = 0;
                    while (i2 < arrayOfString.length)
                    {
                      a.put(arrayOfString[i2], a.get(arrayOfString[i2]));
                      i2 += 1;
                    }
                  }
                  i2 = localA.size();
                  int i4 = 0;
                  while (i4 < i2)
                  {
                    localObject1 = (d)localA.get((Animator)localA.b(i4));
                    if ((c != null) && (a == localView) && (b.equals(e())) && (c.equals(localObject2)))
                    {
                      paramT1 = null;
                      localObject1 = localObject2;
                      break label412;
                    }
                    i4 += 1;
                  }
                  localObject1 = localObject2;
                }
                else {}
              }
              label412:
              i2 = i1;
            }
            else
            {
              localView = b;
              localObject1 = null;
              i2 = i1;
            }
            l2 = l1;
            i1 = i2;
            if (paramT1 != null)
            {
              localObject2 = E;
              if (localObject2 != null)
              {
                l2 = ((p)localObject2).a(paramViewGroup, this, localS1, localS2);
                localSparseIntArray.put(D.size(), (int)l2);
                l1 = Math.min(l2, l1);
              }
              localA.put(paramT1, new d(localView, e(), this, d0.d(paramViewGroup), (s)localObject1));
              D.add(paramT1);
              l2 = l1;
              i1 = i2;
            }
          }
          else
          {
            l2 = l1;
          }
        }
        else
        {
          l2 = l1;
        }
      }
      i1 += 1;
      l1 = l2;
    }
    if (l1 != 0L)
    {
      i1 = 0;
      while (i1 < localSparseIntArray.size())
      {
        i2 = localSparseIntArray.keyAt(i1);
        paramViewGroup = (Animator)D.get(i2);
        paramViewGroup.setStartDelay(localSparseIntArray.valueAt(i1) - l1 + paramViewGroup.getStartDelay());
        i1 += 1;
      }
    }
  }
  
  void a(ViewGroup paramViewGroup, boolean paramBoolean)
  {
    a(paramBoolean);
    Object localObject1;
    if ((g.size() > 0) || (h.size() > 0))
    {
      localObject1 = i;
      if ((localObject1 == null) || (((ArrayList)localObject1).isEmpty()))
      {
        localObject1 = j;
        if ((localObject1 == null) || (((ArrayList)localObject1).isEmpty())) {
          break label75;
        }
      }
    }
    c(paramViewGroup, paramBoolean);
    break label309;
    label75:
    int i1 = 0;
    Object localObject2;
    while (i1 < g.size())
    {
      localObject1 = paramViewGroup.findViewById(((Integer)g.get(i1)).intValue());
      if (localObject1 != null)
      {
        localObject2 = new s();
        b = ((View)localObject1);
        if (paramBoolean) {
          c((s)localObject2);
        } else {
          a((s)localObject2);
        }
        c.add(this);
        b((s)localObject2);
        if (paramBoolean) {
          a(r, (View)localObject1, (s)localObject2);
        } else {
          a(s, (View)localObject1, (s)localObject2);
        }
      }
      i1 += 1;
    }
    i1 = 0;
    while (i1 < h.size())
    {
      paramViewGroup = (View)h.get(i1);
      localObject1 = new s();
      b = paramViewGroup;
      if (paramBoolean) {
        c((s)localObject1);
      } else {
        a((s)localObject1);
      }
      c.add(this);
      b((s)localObject1);
      if (paramBoolean) {
        a(r, paramViewGroup, (s)localObject1);
      } else {
        a(s, paramViewGroup, (s)localObject1);
      }
      i1 += 1;
    }
    label309:
    if (!paramBoolean)
    {
      paramViewGroup = G;
      if (paramViewGroup != null)
      {
        int i2 = paramViewGroup.size();
        paramViewGroup = new ArrayList(i2);
        i1 = 0;
        while (i1 < i2)
        {
          localObject1 = (String)G.b(i1);
          paramViewGroup.add(r.d.remove(localObject1));
          i1 += 1;
        }
        i1 = 0;
        while (i1 < i2)
        {
          localObject1 = (View)paramViewGroup.get(i1);
          if (localObject1 != null)
          {
            localObject2 = (String)G.d(i1);
            r.d.put(localObject2, localObject1);
          }
          i1 += 1;
        }
      }
    }
  }
  
  void a(boolean paramBoolean)
  {
    if (paramBoolean)
    {
      r.a.clear();
      r.b.clear();
      r.c.a();
      return;
    }
    s.a.clear();
    s.b.clear();
    s.c.a();
  }
  
  public boolean a(s paramS1, s paramS2)
  {
    boolean bool2 = false;
    if ((paramS1 != null) && (paramS2 != null))
    {
      Object localObject = n();
      if (localObject != null)
      {
        int i2 = localObject.length;
        int i1 = 0;
        boolean bool1;
        for (;;)
        {
          bool1 = bool2;
          if (i1 >= i2) {
            break;
          }
          if (a(paramS1, paramS2, localObject[i1]))
          {
            bool1 = true;
            break;
          }
          i1 += 1;
        }
        return bool1;
      }
      localObject = a.keySet().iterator();
      while (((Iterator)localObject).hasNext()) {
        if (a(paramS1, paramS2, (String)((Iterator)localObject).next())) {
          return true;
        }
      }
    }
    return false;
  }
  
  public long b()
  {
    return e;
  }
  
  public m b(long paramLong)
  {
    d = paramLong;
    return this;
  }
  
  public m b(f paramF)
  {
    ArrayList localArrayList = C;
    if (localArrayList == null) {
      return this;
    }
    localArrayList.remove(paramF);
    if (C.size() == 0) {
      C = null;
    }
    return this;
  }
  
  public s b(View paramView, boolean paramBoolean)
  {
    Object localObject = t;
    if (localObject != null) {
      return ((m)localObject).b(paramView, paramBoolean);
    }
    if (paramBoolean) {
      localObject = r;
    } else {
      localObject = s;
    }
    return (s)a.get(paramView);
  }
  
  void b(s paramS)
  {
    if ((E != null) && (!a.isEmpty()))
    {
      String[] arrayOfString = E.a();
      if (arrayOfString == null) {
        return;
      }
      int i3 = 1;
      int i1 = 0;
      int i2;
      for (;;)
      {
        i2 = i3;
        if (i1 >= arrayOfString.length) {
          break;
        }
        if (!a.containsKey(arrayOfString[i1]))
        {
          i2 = 0;
          break;
        }
        i1 += 1;
      }
      if (i2 == 0) {
        E.a(paramS);
      }
    }
  }
  
  boolean b(View paramView)
  {
    int i2 = paramView.getId();
    ArrayList localArrayList = k;
    if ((localArrayList != null) && (localArrayList.contains(Integer.valueOf(i2)))) {
      return false;
    }
    localArrayList = l;
    if ((localArrayList != null) && (localArrayList.contains(paramView))) {
      return false;
    }
    localArrayList = m;
    int i1;
    if (localArrayList != null)
    {
      int i3 = localArrayList.size();
      i1 = 0;
      while (i1 < i3)
      {
        if (((Class)m.get(i1)).isInstance(paramView)) {
          return false;
        }
        i1 += 1;
      }
    }
    if ((n != null) && (u.q(paramView) != null) && (n.contains(u.q(paramView)))) {
      return false;
    }
    if ((g.size() == 0) && (h.size() == 0))
    {
      localArrayList = j;
      if ((localArrayList == null) || (localArrayList.isEmpty()))
      {
        localArrayList = i;
        if ((localArrayList == null) || (localArrayList.isEmpty())) {
          return true;
        }
      }
    }
    if (!g.contains(Integer.valueOf(i2)))
    {
      if (h.contains(paramView)) {
        return true;
      }
      localArrayList = i;
      if ((localArrayList != null) && (localArrayList.contains(u.q(paramView)))) {
        return true;
      }
      if (j != null)
      {
        i1 = 0;
        while (i1 < j.size())
        {
          if (((Class)j.get(i1)).isInstance(paramView)) {
            return true;
          }
          i1 += 1;
        }
      }
      return false;
    }
    return true;
  }
  
  public e c()
  {
    return F;
  }
  
  public abstract void c(s paramS);
  
  public void c(View paramView)
  {
    if (!B)
    {
      a.b.g.g.a localA = q();
      int i1 = localA.size();
      paramView = d0.d(paramView);
      i1 -= 1;
      while (i1 >= 0)
      {
        d localD = (d)localA.d(i1);
        if ((a != null) && (paramView.equals(d))) {
          a.a((Animator)localA.b(i1));
        }
        i1 -= 1;
      }
      paramView = C;
      if ((paramView != null) && (paramView.size() > 0))
      {
        paramView = (ArrayList)C.clone();
        int i2 = paramView.size();
        i1 = 0;
        while (i1 < i2)
        {
          ((f)paramView.get(i1)).a(this);
          i1 += 1;
        }
      }
      A = true;
    }
  }
  
  public m clone()
  {
    try
    {
      m localM = (m)super.clone();
      D = new ArrayList();
      r = new t();
      s = new t();
      v = null;
      w = null;
      return localM;
    }
    catch (CloneNotSupportedException localCloneNotSupportedException) {}
    return null;
  }
  
  public m d(View paramView)
  {
    h.remove(paramView);
    return this;
  }
  
  public TimeInterpolator d()
  {
    return f;
  }
  
  public String e()
  {
    return c;
  }
  
  public void e(View paramView)
  {
    if (A)
    {
      if (!B)
      {
        a.b.g.g.a localA = q();
        int i1 = localA.size();
        paramView = d0.d(paramView);
        i1 -= 1;
        while (i1 >= 0)
        {
          d localD = (d)localA.d(i1);
          if ((a != null) && (paramView.equals(d))) {
            a.b((Animator)localA.b(i1));
          }
          i1 -= 1;
        }
        paramView = C;
        if ((paramView != null) && (paramView.size() > 0))
        {
          paramView = (ArrayList)C.clone();
          int i2 = paramView.size();
          i1 = 0;
          while (i1 < i2)
          {
            ((f)paramView.get(i1)).d(this);
            i1 += 1;
          }
        }
      }
      A = false;
    }
  }
  
  public g f()
  {
    return H;
  }
  
  public p g()
  {
    return E;
  }
  
  public long h()
  {
    return d;
  }
  
  public List<Integer> i()
  {
    return g;
  }
  
  public List<String> j()
  {
    return i;
  }
  
  public List<Class> k()
  {
    return j;
  }
  
  public List<View> m()
  {
    return h;
  }
  
  public String[] n()
  {
    return null;
  }
  
  protected void o()
  {
    p();
    a.b.g.g.a localA = q();
    Iterator localIterator = D.iterator();
    while (localIterator.hasNext())
    {
      Animator localAnimator = (Animator)localIterator.next();
      if (localA.containsKey(localAnimator))
      {
        p();
        a(localAnimator, localA);
      }
    }
    D.clear();
    a();
  }
  
  protected void p()
  {
    if (z == 0)
    {
      ArrayList localArrayList = C;
      if ((localArrayList != null) && (localArrayList.size() > 0))
      {
        localArrayList = (ArrayList)C.clone();
        int i2 = localArrayList.size();
        int i1 = 0;
        while (i1 < i2)
        {
          ((f)localArrayList.get(i1)).c(this);
          i1 += 1;
        }
      }
      B = false;
    }
    z += 1;
  }
  
  public String toString()
  {
    return a("");
  }
  
  static final class a
    extends g
  {
    a() {}
    
    public Path a(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4)
    {
      Path localPath = new Path();
      localPath.moveTo(paramFloat1, paramFloat2);
      localPath.lineTo(paramFloat3, paramFloat4);
      return localPath;
    }
  }
  
  class b
    extends AnimatorListenerAdapter
  {
    b(a.b.g.g.a paramA) {}
    
    public void onAnimationEnd(Animator paramAnimator)
    {
      paramA.remove(paramAnimator);
      y.remove(paramAnimator);
    }
    
    public void onAnimationStart(Animator paramAnimator)
    {
      y.add(paramAnimator);
    }
  }
  
  class c
    extends AnimatorListenerAdapter
  {
    c() {}
    
    public void onAnimationEnd(Animator paramAnimator)
    {
      a();
      paramAnimator.removeListener(this);
    }
  }
  
  private static class d
  {
    View a;
    String b;
    s c;
    l0 d;
    m e;
    
    d(View paramView, String paramString, m paramM, l0 paramL0, s paramS)
    {
      a = paramView;
      b = paramString;
      c = paramS;
      d = paramL0;
      e = paramM;
    }
  }
  
  public static abstract class e
  {
    public e() {}
  }
  
  public static abstract interface f
  {
    public abstract void a(m paramM);
    
    public abstract void b(m paramM);
    
    public abstract void c(m paramM);
    
    public abstract void d(m paramM);
  }
}
