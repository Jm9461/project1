package a.b.c.m;

import a.b.c.b;
import a.b.c.j;
import a.b.c.k;
import android.content.Context;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.PorterDuff.Mode;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.support.design.internal.h;
import android.support.v4.view.u;
import android.support.v4.widget.p;
import android.util.AttributeSet;
import android.util.Log;
import android.widget.Button;

public class a
  extends android.support.v7.widget.g
{
  private final c e;
  private int f;
  private PorterDuff.Mode g;
  private ColorStateList h;
  private Drawable i;
  private int j;
  private int k;
  private int l;
  
  public a(Context paramContext, AttributeSet paramAttributeSet)
  {
    this(paramContext, paramAttributeSet, b.materialButtonStyle);
  }
  
  public a(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
    paramContext = android.support.design.internal.g.c(paramContext, paramAttributeSet, k.MaterialButton, paramInt, j.Widget_MaterialComponents_Button, new int[0]);
    f = paramContext.getDimensionPixelSize(k.MaterialButton_iconPadding, 0);
    g = h.a(paramContext.getInt(k.MaterialButton_iconTintMode, -1), PorterDuff.Mode.SRC_IN);
    h = a.b.c.p.a.a(getContext(), paramContext, k.MaterialButton_iconTint);
    i = a.b.c.p.a.b(getContext(), paramContext, k.MaterialButton_icon);
    l = paramContext.getInteger(k.MaterialButton_iconGravity, 1);
    j = paramContext.getDimensionPixelSize(k.MaterialButton_iconSize, 0);
    e = new c(this);
    e.a(paramContext);
    paramContext.recycle();
    setCompoundDrawablePadding(f);
    c();
  }
  
  private boolean a()
  {
    return u.k(this) == 1;
  }
  
  private boolean b()
  {
    c localC = e;
    return (localC != null) && (!localC.g());
  }
  
  private void c()
  {
    Object localObject = i;
    if (localObject != null)
    {
      i = ((Drawable)localObject).mutate();
      android.support.v4.graphics.drawable.a.a(i, h);
      localObject = g;
      if (localObject != null) {
        android.support.v4.graphics.drawable.a.a(i, (PorterDuff.Mode)localObject);
      }
      int m = j;
      if (m == 0) {
        m = i.getIntrinsicWidth();
      }
      int n = j;
      if (n == 0) {
        n = i.getIntrinsicHeight();
      }
      localObject = i;
      int i1 = k;
      ((Drawable)localObject).setBounds(i1, 0, i1 + m, n);
    }
    p.a(this, i, null, null, null);
  }
  
  public ColorStateList getBackgroundTintList()
  {
    return getSupportBackgroundTintList();
  }
  
  public PorterDuff.Mode getBackgroundTintMode()
  {
    return getSupportBackgroundTintMode();
  }
  
  public int getCornerRadius()
  {
    if (b()) {
      return e.a();
    }
    return 0;
  }
  
  public Drawable getIcon()
  {
    return i;
  }
  
  public int getIconGravity()
  {
    return l;
  }
  
  public int getIconPadding()
  {
    return f;
  }
  
  public int getIconSize()
  {
    return j;
  }
  
  public ColorStateList getIconTint()
  {
    return h;
  }
  
  public PorterDuff.Mode getIconTintMode()
  {
    return g;
  }
  
  public ColorStateList getRippleColor()
  {
    if (b()) {
      return e.b();
    }
    return null;
  }
  
  public ColorStateList getStrokeColor()
  {
    if (b()) {
      return e.c();
    }
    return null;
  }
  
  public int getStrokeWidth()
  {
    if (b()) {
      return e.d();
    }
    return 0;
  }
  
  public ColorStateList getSupportBackgroundTintList()
  {
    if (b()) {
      return e.e();
    }
    return super.getSupportBackgroundTintList();
  }
  
  public PorterDuff.Mode getSupportBackgroundTintMode()
  {
    if (b()) {
      return e.f();
    }
    return super.getSupportBackgroundTintMode();
  }
  
  protected void onDraw(Canvas paramCanvas)
  {
    super.onDraw(paramCanvas);
    if ((Build.VERSION.SDK_INT < 21) && (b())) {
      e.a(paramCanvas);
    }
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    super.onLayout(paramBoolean, paramInt1, paramInt2, paramInt3, paramInt4);
    if (Build.VERSION.SDK_INT == 21)
    {
      c localC = e;
      if (localC != null) {
        localC.a(paramInt4 - paramInt2, paramInt3 - paramInt1);
      }
    }
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    super.onMeasure(paramInt1, paramInt2);
    if (i != null)
    {
      if (l != 2) {
        return;
      }
      int m = (int)getPaint().measureText(getText().toString());
      paramInt2 = j;
      paramInt1 = paramInt2;
      if (paramInt2 == 0) {
        paramInt1 = i.getIntrinsicWidth();
      }
      paramInt2 = (getMeasuredWidth() - m - u.n(this) - paramInt1 - f - u.o(this)) / 2;
      paramInt1 = paramInt2;
      if (a()) {
        paramInt1 = -paramInt2;
      }
      if (k != paramInt1)
      {
        k = paramInt1;
        c();
      }
      return;
    }
  }
  
  public void setBackground(Drawable paramDrawable)
  {
    setBackgroundDrawable(paramDrawable);
  }
  
  public void setBackgroundColor(int paramInt)
  {
    if (b())
    {
      e.a(paramInt);
      return;
    }
    super.setBackgroundColor(paramInt);
  }
  
  public void setBackgroundDrawable(Drawable paramDrawable)
  {
    if (b())
    {
      if (paramDrawable != getBackground())
      {
        Log.i("MaterialButton", "Setting a custom background is not supported.");
        e.h();
        super.setBackgroundDrawable(paramDrawable);
        return;
      }
      getBackground().setState(paramDrawable.getState());
      return;
    }
    super.setBackgroundDrawable(paramDrawable);
  }
  
  public void setBackgroundResource(int paramInt)
  {
    Drawable localDrawable = null;
    if (paramInt != 0) {
      localDrawable = a.b.h.c.a.a.c(getContext(), paramInt);
    }
    setBackgroundDrawable(localDrawable);
  }
  
  public void setBackgroundTintList(ColorStateList paramColorStateList)
  {
    setSupportBackgroundTintList(paramColorStateList);
  }
  
  public void setBackgroundTintMode(PorterDuff.Mode paramMode)
  {
    setSupportBackgroundTintMode(paramMode);
  }
  
  public void setCornerRadius(int paramInt)
  {
    if (b()) {
      e.b(paramInt);
    }
  }
  
  public void setCornerRadiusResource(int paramInt)
  {
    if (b()) {
      setCornerRadius(getResources().getDimensionPixelSize(paramInt));
    }
  }
  
  public void setIcon(Drawable paramDrawable)
  {
    if (i != paramDrawable)
    {
      i = paramDrawable;
      c();
    }
  }
  
  public void setIconGravity(int paramInt)
  {
    l = paramInt;
  }
  
  public void setIconPadding(int paramInt)
  {
    if (f != paramInt)
    {
      f = paramInt;
      setCompoundDrawablePadding(paramInt);
    }
  }
  
  public void setIconResource(int paramInt)
  {
    Drawable localDrawable = null;
    if (paramInt != 0) {
      localDrawable = a.b.h.c.a.a.c(getContext(), paramInt);
    }
    setIcon(localDrawable);
  }
  
  public void setIconSize(int paramInt)
  {
    if (paramInt >= 0)
    {
      if (j != paramInt)
      {
        j = paramInt;
        c();
      }
      return;
    }
    throw new IllegalArgumentException("iconSize cannot be less than 0");
  }
  
  public void setIconTint(ColorStateList paramColorStateList)
  {
    if (h != paramColorStateList)
    {
      h = paramColorStateList;
      c();
    }
  }
  
  public void setIconTintMode(PorterDuff.Mode paramMode)
  {
    if (g != paramMode)
    {
      g = paramMode;
      c();
    }
  }
  
  public void setIconTintResource(int paramInt)
  {
    setIconTint(a.b.h.c.a.a.b(getContext(), paramInt));
  }
  
  void setInternalBackground(Drawable paramDrawable)
  {
    super.setBackgroundDrawable(paramDrawable);
  }
  
  public void setRippleColor(ColorStateList paramColorStateList)
  {
    if (b()) {
      e.a(paramColorStateList);
    }
  }
  
  public void setRippleColorResource(int paramInt)
  {
    if (b()) {
      setRippleColor(a.b.h.c.a.a.b(getContext(), paramInt));
    }
  }
  
  public void setStrokeColor(ColorStateList paramColorStateList)
  {
    if (b()) {
      e.b(paramColorStateList);
    }
  }
  
  public void setStrokeColorResource(int paramInt)
  {
    if (b()) {
      setStrokeColor(a.b.h.c.a.a.b(getContext(), paramInt));
    }
  }
  
  public void setStrokeWidth(int paramInt)
  {
    if (b()) {
      e.c(paramInt);
    }
  }
  
  public void setStrokeWidthResource(int paramInt)
  {
    if (b()) {
      setStrokeWidth(getResources().getDimensionPixelSize(paramInt));
    }
  }
  
  public void setSupportBackgroundTintList(ColorStateList paramColorStateList)
  {
    if (b())
    {
      e.c(paramColorStateList);
      return;
    }
    if (e != null) {
      super.setSupportBackgroundTintList(paramColorStateList);
    }
  }
  
  public void setSupportBackgroundTintMode(PorterDuff.Mode paramMode)
  {
    if (b())
    {
      e.a(paramMode);
      return;
    }
    if (e != null) {
      super.setSupportBackgroundTintMode(paramMode);
    }
  }
}
