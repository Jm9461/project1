package e.f0.i;

import f.e;
import java.util.List;

public abstract interface l
{
  public static final l a = new a();
  
  public abstract void a(int paramInt, b paramB);
  
  public abstract boolean a(int paramInt1, e paramE, int paramInt2, boolean paramBoolean);
  
  public abstract boolean a(int paramInt, List<c> paramList);
  
  public abstract boolean a(int paramInt, List<c> paramList, boolean paramBoolean);
  
  final class a
    implements l
  {
    a() {}
    
    public void a(int paramInt, b paramB) {}
    
    public boolean a(int paramInt1, e paramE, int paramInt2, boolean paramBoolean)
    {
      paramE.skip(paramInt2);
      return true;
    }
    
    public boolean a(int paramInt, List<c> paramList)
    {
      return true;
    }
    
    public boolean a(int paramInt, List<c> paramList, boolean paramBoolean)
    {
      return true;
    }
  }
}
