package e.f0.i;

import e.a0;
import e.a0.a;
import e.b0;
import e.f0.a;
import e.f0.g.e;
import e.f0.g.k;
import e.p;
import e.r.a;
import e.t.a;
import e.v;
import e.w;
import e.y;
import f.l;
import f.t;
import java.io.IOException;
import java.net.ProtocolException;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.TimeUnit;

public final class f
  implements e.f0.g.c
{
  private static final f.f e = f.f.d("connection");
  private static final f.f f = f.f.d("host");
  private static final f.f g = f.f.d("keep-alive");
  private static final f.f h = f.f.d("proxy-connection");
  private static final f.f i = f.f.d("transfer-encoding");
  private static final f.f j = f.f.d("te");
  private static final f.f k = f.f.d("encoding");
  private static final f.f l = f.f.d("upgrade");
  private static final List<f.f> m = e.f0.c.a(new f.f[] { e, f, g, h, j, i, k, l, c.f, c.g, c.h, c.i });
  private static final List<f.f> n = e.f0.c.a(new f.f[] { e, f, g, h, j, i, k, l });
  private final t.a a;
  final e.f0.f.g b;
  private final g c;
  private i d;
  
  public f(v paramV, t.a paramA, e.f0.f.g paramG, g paramG1)
  {
    a = paramA;
    b = paramG;
    c = paramG1;
  }
  
  public static a0.a a(List<c> paramList)
  {
    Object localObject3 = null;
    Object localObject2 = new r.a();
    int i1 = 0;
    int i2 = paramList.size();
    while (i1 < i2)
    {
      Object localObject1 = (c)paramList.get(i1);
      Object localObject4;
      if (localObject1 == null)
      {
        localObject1 = localObject3;
        localObject4 = localObject2;
        if (localObject3 != null)
        {
          localObject1 = localObject3;
          localObject4 = localObject2;
          if (b == 100)
          {
            localObject1 = null;
            localObject4 = new r.a();
          }
        }
      }
      else
      {
        f.f localF = a;
        String str = b.i();
        if (localF.equals(c.e))
        {
          localObject1 = new StringBuilder();
          ((StringBuilder)localObject1).append("HTTP/1.1 ");
          ((StringBuilder)localObject1).append(str);
          localObject1 = k.a(((StringBuilder)localObject1).toString());
          localObject4 = localObject2;
        }
        else
        {
          localObject1 = localObject3;
          localObject4 = localObject2;
          if (!n.contains(localF))
          {
            a.a.a((r.a)localObject2, localF.i(), str);
            localObject4 = localObject2;
            localObject1 = localObject3;
          }
        }
      }
      i1 += 1;
      localObject3 = localObject1;
      localObject2 = localObject4;
    }
    if (localObject3 != null)
    {
      paramList = new a0.a();
      paramList.a(w.g);
      paramList.a(b);
      paramList.a(c);
      paramList.a(((r.a)localObject2).a());
      return paramList;
    }
    paramList = new ProtocolException("Expected ':status' header not present");
    for (;;)
    {
      throw paramList;
    }
  }
  
  public static List<c> b(y paramY)
  {
    e.r localR = paramY.c();
    ArrayList localArrayList = new ArrayList(localR.b() + 4);
    localArrayList.add(new c(c.f, paramY.e()));
    localArrayList.add(new c(c.g, e.f0.g.i.a(paramY.g())));
    String str = paramY.a("Host");
    if (str != null) {
      localArrayList.add(new c(c.i, str));
    }
    localArrayList.add(new c(c.h, paramY.g().m()));
    int i1 = 0;
    int i2 = localR.b();
    while (i1 < i2)
    {
      paramY = f.f.d(localR.a(i1).toLowerCase(Locale.US));
      if (!m.contains(paramY)) {
        localArrayList.add(new c(paramY, localR.b(i1)));
      }
      i1 += 1;
    }
    return localArrayList;
  }
  
  public a0.a a(boolean paramBoolean)
  {
    a0.a localA = a(d.j());
    if ((paramBoolean) && (a.a.a(localA) == 100)) {
      return null;
    }
    return localA;
  }
  
  public b0 a(a0 paramA0)
  {
    e.f0.f.g localG = b;
    f.e(e);
    return new e.f0.g.h(paramA0.b("Content-Type"), e.a(paramA0), l.a(new a(d.e())));
  }
  
  public f.r a(y paramY, long paramLong)
  {
    return d.d();
  }
  
  public void a()
  {
    d.d().close();
  }
  
  public void a(y paramY)
  {
    if (d != null) {
      return;
    }
    boolean bool;
    if (paramY.a() != null) {
      bool = true;
    } else {
      bool = false;
    }
    paramY = b(paramY);
    d = c.a(paramY, bool);
    d.h().a(a.d(), TimeUnit.MILLISECONDS);
    d.l().a(a.a(), TimeUnit.MILLISECONDS);
  }
  
  public void b()
  {
    c.flush();
  }
  
  class a
    extends f.h
  {
    boolean d = false;
    long e = 0L;
    
    a(f.s paramS)
    {
      super();
    }
    
    private void a(IOException paramIOException)
    {
      if (d) {
        return;
      }
      d = true;
      f localF = f.this;
      b.a(false, localF, e, paramIOException);
    }
    
    public long b(f.c paramC, long paramLong)
    {
      try
      {
        paramLong = d().b(paramC, paramLong);
        if (paramLong > 0L) {
          e += paramLong;
        }
        return paramLong;
      }
      catch (IOException paramC)
      {
        a(paramC);
        throw paramC;
      }
    }
    
    public void close()
    {
      super.close();
      a(null);
    }
  }
}
