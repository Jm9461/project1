package e.f0.i;

import f.a;
import f.e;
import f.r;
import f.s;
import f.t;
import java.io.EOFException;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.SocketTimeoutException;
import java.util.ArrayList;
import java.util.List;

public final class i
{
  long a = 0L;
  long b;
  final int c;
  final g d;
  private List<c> e;
  private boolean f;
  private final b g;
  final a h;
  final c i = new c();
  final c j = new c();
  b k = null;
  
  i(int paramInt, g paramG, boolean paramBoolean1, boolean paramBoolean2, List<c> paramList)
  {
    if (paramG != null)
    {
      if (paramList != null)
      {
        c = paramInt;
        d = paramG;
        b = q.c();
        g = new b(p.c());
        h = new a();
        g.g = paramBoolean2;
        h.e = paramBoolean1;
        return;
      }
      throw new NullPointerException("requestHeaders == null");
    }
    throw new NullPointerException("connection == null");
  }
  
  private boolean d(b paramB)
  {
    try
    {
      if (k != null) {
        return false;
      }
      if ((g.g) && (h.e)) {
        return false;
      }
      k = paramB;
      notifyAll();
      d.c(c);
      return true;
    }
    finally {}
  }
  
  void a()
  {
    for (;;)
    {
      try
      {
        if ((g.g) || (!g.f)) {
          break label91;
        }
        if (h.e) {
          break label86;
        }
        if (!h.d) {
          break label91;
        }
      }
      finally {}
      boolean bool = g();
      if (m != 0)
      {
        a(b.i);
        return;
      }
      if (!bool) {
        d.c(c);
      }
      return;
      label86:
      int m = 1;
      continue;
      label91:
      m = 0;
    }
  }
  
  void a(long paramLong)
  {
    b += paramLong;
    if (paramLong > 0L) {
      notifyAll();
    }
  }
  
  public void a(b paramB)
  {
    if (!d(paramB)) {
      return;
    }
    d.b(c, paramB);
  }
  
  void a(e paramE, int paramInt)
  {
    g.a(paramE, paramInt);
  }
  
  void a(List<c> paramList)
  {
    boolean bool = true;
    try
    {
      f = true;
      if (e == null)
      {
        e = paramList;
        bool = g();
        notifyAll();
      }
      else
      {
        ArrayList localArrayList = new ArrayList();
        localArrayList.addAll(e);
        localArrayList.add(null);
        localArrayList.addAll(paramList);
        e = localArrayList;
      }
      if (!bool) {
        d.c(c);
      }
      return;
    }
    finally {}
  }
  
  void b()
  {
    Object localObject = h;
    if (!d)
    {
      if (!e)
      {
        localObject = k;
        if (localObject == null) {
          return;
        }
        throw new n((b)localObject);
      }
      throw new IOException("stream finished");
    }
    throw new IOException("stream closed");
  }
  
  public void b(b paramB)
  {
    if (!d(paramB)) {
      return;
    }
    d.c(c, paramB);
  }
  
  public int c()
  {
    return c;
  }
  
  void c(b paramB)
  {
    try
    {
      if (k == null)
      {
        k = paramB;
        notifyAll();
      }
      return;
    }
    finally
    {
      paramB = finally;
      throw paramB;
    }
  }
  
  public r d()
  {
    try
    {
      if ((!f) && (!f())) {
        throw new IllegalStateException("reply before requesting the sink");
      }
      return h;
    }
    finally {}
  }
  
  public s e()
  {
    return g;
  }
  
  public boolean f()
  {
    int m;
    if ((c & 0x1) == 1) {
      m = 1;
    } else {
      m = 0;
    }
    return d.c == m;
  }
  
  public boolean g()
  {
    try
    {
      b localB = k;
      if (localB != null) {
        return false;
      }
      if (((g.g) || (g.f)) && ((h.e) || (h.d)))
      {
        boolean bool = f;
        if (bool) {
          return false;
        }
      }
      return true;
    }
    finally {}
  }
  
  public t h()
  {
    return i;
  }
  
  void i()
  {
    try
    {
      g.g = true;
      boolean bool = g();
      notifyAll();
      if (!bool) {
        d.c(c);
      }
      return;
    }
    finally {}
  }
  
  public List<c> j()
  {
    try
    {
      if (f()) {
        i.g();
      }
    }
    finally
    {
      try
      {
        List localList1 = e;
        if (localList1 != null) {}
      }
      finally
      {
        label80:
        label107:
        try
        {
          if (k == null) {
            k();
          }
        }
        finally
        {
          break label80;
          i.k();
          List localList2 = e;
          if (localList2 != null)
          {
            e = null;
            return localList2;
          }
          throw new n(k);
          i.k();
          throw localList2;
          throw new IllegalStateException("servers cannot read response headers");
          localObject2 = finally;
          break label107;
        }
      }
    }
  }
  
  void k()
  {
    try
    {
      wait();
      return;
    }
    catch (InterruptedException localInterruptedException)
    {
      throw new InterruptedIOException();
    }
  }
  
  public t l()
  {
    return j;
  }
  
  final class a
    implements r
  {
    private final f.c c = new f.c();
    boolean d;
    boolean e;
    
    a() {}
    
    private void a(boolean paramBoolean)
    {
      label236:
      synchronized (i.this)
      {
        j.g();
        try
        {
          while ((b <= 0L) && (!e) && (!d) && (k == null)) {
            k();
          }
          j.k();
          b();
          long l = Math.min(b, c.q());
          i localI = i.this;
          b -= l;
          j.g();
          try
          {
            ??? = d;
            int i = c;
            if ((!paramBoolean) || (l != c.q())) {
              break label236;
            }
            paramBoolean = true;
            ((g)???).a(i, paramBoolean, c, l);
            return;
          }
          finally
          {
            j.k();
          }
          localObject4 = finally;
        }
        finally
        {
          j.k();
        }
      }
    }
    
    public void a(f.c paramC, long paramLong)
    {
      c.a(paramC, paramLong);
      while (c.q() >= 16384L) {
        a(false);
      }
    }
    
    public t b()
    {
      return j;
    }
    
    public void close()
    {
      synchronized (i.this)
      {
        if (d) {
          return;
        }
        if (!h.e)
        {
          if (c.q() > 0L) {
            while (c.q() > 0L) {
              a(true);
            }
          }
          ??? = i.this;
          d.a(c, true, null, 0L);
        }
        synchronized (i.this)
        {
          d = true;
          d.flush();
          a();
          return;
        }
      }
      for (;;)
      {
        throw localObject2;
      }
    }
    
    public void flush()
    {
      synchronized (i.this)
      {
        b();
        while (c.q() > 0L)
        {
          a(false);
          d.flush();
        }
        return;
      }
      for (;;)
      {
        throw localObject;
      }
    }
  }
  
  private final class b
    implements s
  {
    private final f.c c = new f.c();
    private final f.c d = new f.c();
    private final long e;
    boolean f;
    boolean g;
    
    b(long paramLong)
    {
      e = paramLong;
    }
    
    private void d()
    {
      if (!f)
      {
        b localB = k;
        if (localB == null) {
          return;
        }
        throw new n(localB);
      }
      throw new IOException("stream closed");
    }
    
    private void l()
    {
      i.g();
      try
      {
        while ((d.q() == 0L) && (!g) && (!f) && (k == null)) {
          k();
        }
        i.k();
        return;
      }
      finally
      {
        i.k();
      }
      for (;;)
      {
        throw localObject;
      }
    }
    
    void a(e paramE, long paramLong)
    {
      if (paramLong > 0L) {}
      for (;;)
      {
        synchronized (i.this)
        {
          boolean bool = g;
          long l1 = d.q();
          long l2 = e;
          int j = 1;
          if (l1 + paramLong <= l2) {
            break label200;
          }
          i = 1;
          if (i != 0)
          {
            paramE.skip(paramLong);
            b(b.g);
            return;
          }
          if (bool)
          {
            paramE.skip(paramLong);
            return;
          }
          l1 = paramE.b(c, paramLong);
          if (l1 != -1L) {
            synchronized (i.this)
            {
              if (d.q() != 0L) {
                break label206;
              }
              i = j;
              d.a(c);
              if (i != 0) {
                notifyAll();
              }
              paramLong -= l1;
            }
          }
          throw new EOFException();
        }
        return;
        label200:
        int i = 0;
        continue;
        label206:
        i = 0;
      }
    }
    
    public long b(f.c arg1, long paramLong)
    {
      if (paramLong >= 0L) {
        synchronized (i.this)
        {
          l();
          d();
          if (d.q() == 0L) {
            return -1L;
          }
          paramLong = d.b(???, Math.min(paramLong, d.q()));
          ??? = i.this;
          a += paramLong;
          if (a >= d.p.c() / 2)
          {
            d.a(c, a);
            a = 0L;
          }
          synchronized (d)
          {
            ??? = d;
            n += paramLong;
            if (d.n >= d.p.c() / 2)
            {
              d.a(0, d.n);
              d.n = 0L;
            }
            return paramLong;
          }
        }
      }
      ??? = new StringBuilder();
      ???.append("byteCount < 0: ");
      ???.append(paramLong);
      throw new IllegalArgumentException(???.toString());
    }
    
    public t b()
    {
      return i;
    }
    
    public void close()
    {
      synchronized (i.this)
      {
        f = true;
        d.m();
        notifyAll();
        a();
        return;
      }
    }
  }
  
  class c
    extends a
  {
    c() {}
    
    protected IOException b(IOException paramIOException)
    {
      SocketTimeoutException localSocketTimeoutException = new SocketTimeoutException("timeout");
      if (paramIOException != null) {
        localSocketTimeoutException.initCause(paramIOException);
      }
      return localSocketTimeoutException;
    }
    
    protected void i()
    {
      b(b.i);
    }
    
    public void k()
    {
      if (!h()) {
        return;
      }
      throw b(null);
    }
  }
}
