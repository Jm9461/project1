package e;

import e.f0.e.b;
import e.f0.e.d.c;
import e.f0.e.d.e;
import e.f0.g.k;
import e.f0.j.a;
import f.g;
import f.l;
import java.io.Closeable;
import java.io.File;
import java.io.Flushable;
import java.io.IOException;
import java.security.cert.Certificate;
import java.security.cert.CertificateEncodingException;
import java.security.cert.CertificateException;
import java.security.cert.CertificateFactory;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class c
  implements Closeable, Flushable
{
  final e.f0.e.f c = new a();
  final e.f0.e.d d;
  int e;
  int f;
  private int g;
  private int h;
  private int i;
  
  public c(File paramFile, long paramLong)
  {
    this(paramFile, paramLong, a.a);
  }
  
  c(File paramFile, long paramLong, a paramA)
  {
    d = e.f0.e.d.a(paramA, paramFile, 201105, 2, paramLong);
  }
  
  static int a(f.e paramE)
  {
    try
    {
      long l = paramE.e();
      paramE = paramE.f();
      if ((l >= 0L) && (l <= 2147483647L) && (paramE.isEmpty())) {
        return (int)l;
      }
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("expected an int but was \"");
      localStringBuilder.append(l);
      localStringBuilder.append(paramE);
      localStringBuilder.append("\"");
      throw new IOException(localStringBuilder.toString());
    }
    catch (NumberFormatException paramE)
    {
      throw new IOException(paramE.getMessage());
    }
  }
  
  public static String a(s paramS)
  {
    return f.f.d(paramS.toString()).c().b();
  }
  
  private void a(d.c paramC)
  {
    if (paramC != null) {
      try
      {
        paramC.a();
      }
      catch (IOException paramC) {}
    }
  }
  
  a0 a(y paramY)
  {
    Object localObject = a(paramY.g());
    try
    {
      localObject = d.c((String)localObject);
      if (localObject == null) {
        return null;
      }
      try
      {
        d localD = new d(((d.e)localObject).a(0));
        localObject = localD.a((d.e)localObject);
        if (!localD.a(paramY, (a0)localObject))
        {
          e.f0.c.a(((a0)localObject).l());
          return null;
        }
        return localObject;
      }
      catch (IOException paramY)
      {
        e.f0.c.a((Closeable)localObject);
        return null;
      }
      return null;
    }
    catch (IOException paramY) {}
  }
  
  b a(a0 paramA0)
  {
    Object localObject = paramA0.y().e();
    if (e.f0.g.f.a(paramA0.y().e())) {
      try
      {
        b(paramA0.y());
        return null;
      }
      catch (IOException paramA0)
      {
        return null;
      }
    }
    if (!((String)localObject).equals("GET")) {
      return null;
    }
    if (e.f0.g.e.c(paramA0)) {
      return null;
    }
    d localD = new d(paramA0);
    localObject = null;
    try
    {
      paramA0 = d.b(a(paramA0.y().g()));
      if (paramA0 == null) {
        return null;
      }
      localObject = paramA0;
      localD.a(paramA0);
      localObject = paramA0;
      paramA0 = new b(paramA0);
      return paramA0;
    }
    catch (IOException paramA0)
    {
      a((d.c)localObject);
    }
    return null;
  }
  
  void a(a0 paramA01, a0 paramA02)
  {
    d localD = new d(paramA02);
    paramA02 = lc;
    paramA01 = null;
    try
    {
      paramA02 = paramA02.l();
      if (paramA02 != null)
      {
        paramA01 = paramA02;
        localD.a(paramA02);
        paramA01 = paramA02;
        paramA02.b();
      }
      return;
    }
    catch (IOException paramA02)
    {
      a(paramA01);
    }
  }
  
  void a(e.f0.e.c paramC)
  {
    try
    {
      i += 1;
      if (a != null) {
        g += 1;
      } else if (b != null) {
        h += 1;
      }
      return;
    }
    finally {}
  }
  
  void b(y paramY)
  {
    d.d(a(paramY.g()));
  }
  
  public void close()
  {
    d.close();
  }
  
  public void flush()
  {
    d.flush();
  }
  
  void l()
  {
    try
    {
      h += 1;
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  class a
    implements e.f0.e.f
  {
    a() {}
    
    public a0 a(y paramY)
    {
      return c.this.a(paramY);
    }
    
    public b a(a0 paramA0)
    {
      return c.this.a(paramA0);
    }
    
    public void a()
    {
      l();
    }
    
    public void a(a0 paramA01, a0 paramA02)
    {
      c.this.a(paramA01, paramA02);
    }
    
    public void a(e.f0.e.c paramC)
    {
      c.this.a(paramC);
    }
    
    public void b(y paramY)
    {
      c.this.b(paramY);
    }
  }
  
  private final class b
    implements b
  {
    private final d.c a;
    private f.r b;
    private f.r c;
    boolean d;
    
    b(final d.c paramC)
    {
      a = paramC;
      b = paramC.a(1);
      c = new a(b, c.this, paramC);
    }
    
    public void a()
    {
      synchronized (c.this)
      {
        if (d) {
          return;
        }
        d = true;
        c localC2 = c.this;
        f += 1;
        e.f0.c.a(b);
        try
        {
          a.a();
          return;
        }
        catch (IOException localIOException) {}
      }
    }
    
    public f.r b()
    {
      return c;
    }
    
    class a
      extends g
    {
      a(f.r paramR, c paramC, d.c paramC1)
      {
        super();
      }
      
      public void close()
      {
        synchronized (c.this)
        {
          if (d) {
            return;
          }
          d = true;
          c localC2 = c.this;
          e += 1;
          super.close();
          paramC.b();
          return;
        }
      }
    }
  }
  
  private static class c
    extends b0
  {
    final d.e c;
    private final f.e d;
    private final String e;
    
    c(final d.e paramE, String paramString1, String paramString2)
    {
      c = paramE;
      e = paramString2;
      d = l.a(new a(paramE.a(1), paramE));
    }
    
    public long l()
    {
      long l = -1L;
      try
      {
        if (e != null) {
          l = Long.parseLong(e);
        }
        return l;
      }
      catch (NumberFormatException localNumberFormatException) {}
      return -1L;
    }
    
    public f.e m()
    {
      return d;
    }
    
    class a
      extends f.h
    {
      a(f.s paramS, d.e paramE)
      {
        super();
      }
      
      public void close()
      {
        paramE.close();
        super.close();
      }
    }
  }
  
  private static final class d
  {
    private static final String k;
    private static final String l;
    private final String a;
    private final r b;
    private final String c;
    private final w d;
    private final int e;
    private final String f;
    private final r g;
    private final q h;
    private final long i;
    private final long j;
    
    static
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append(e.f0.k.f.d().a());
      localStringBuilder.append("-Sent-Millis");
      k = localStringBuilder.toString();
      localStringBuilder = new StringBuilder();
      localStringBuilder.append(e.f0.k.f.d().a());
      localStringBuilder.append("-Received-Millis");
      l = localStringBuilder.toString();
    }
    
    d(a0 paramA0)
    {
      a = paramA0.y().g().toString();
      b = e.f0.g.e.e(paramA0);
      c = paramA0.y().e();
      d = paramA0.w();
      e = paramA0.o();
      f = paramA0.s();
      g = paramA0.q();
      h = paramA0.p();
      i = paramA0.z();
      j = paramA0.x();
    }
    
    d(f.s paramS)
    {
      try
      {
        localObject1 = l.a(paramS);
        a = ((f.e)localObject1).f();
        c = ((f.e)localObject1).f();
        localObject3 = new r.a();
        int n = c.a((f.e)localObject1);
        int m = 0;
        while (m < n)
        {
          ((r.a)localObject3).a(((f.e)localObject1).f());
          m += 1;
        }
        b = ((r.a)localObject3).a();
        localObject3 = k.a(((f.e)localObject1).f());
        d = a;
        e = b;
        f = c;
        localObject3 = new r.a();
        n = c.a((f.e)localObject1);
        m = 0;
        while (m < n)
        {
          ((r.a)localObject3).a(((f.e)localObject1).f());
          m += 1;
        }
        localObject4 = ((r.a)localObject3).b(k);
        localObject5 = ((r.a)localObject3).b(l);
        ((r.a)localObject3).c(k);
        ((r.a)localObject3).c(l);
        l2 = 0L;
        if (localObject4 == null) {
          break label431;
        }
        l1 = Long.parseLong((String)localObject4);
      }
      finally
      {
        for (;;)
        {
          Object localObject1;
          Object localObject3;
          Object localObject4;
          Object localObject5;
          long l2;
          paramS.close();
          for (;;)
          {
            throw localObject2;
          }
          long l1 = 0L;
          continue;
          l1 = l2;
        }
      }
      i = l1;
      if (localObject5 != null)
      {
        l1 = Long.parseLong((String)localObject5);
        j = l1;
        g = ((r.a)localObject3).a();
        if (a())
        {
          localObject3 = ((f.e)localObject1).f();
          if (((String)localObject3).length() <= 0)
          {
            localObject3 = h.a(((f.e)localObject1).f());
            localObject4 = a((f.e)localObject1);
            localObject5 = a((f.e)localObject1);
            if (!((f.e)localObject1).i()) {
              localObject1 = d0.a(((f.e)localObject1).f());
            } else {
              localObject1 = d0.h;
            }
            h = q.a((d0)localObject1, (h)localObject3, (List)localObject4, (List)localObject5);
          }
          else
          {
            localObject1 = new StringBuilder();
            ((StringBuilder)localObject1).append("expected \"\" but was \"");
            ((StringBuilder)localObject1).append((String)localObject3);
            ((StringBuilder)localObject1).append("\"");
            throw new IOException(((StringBuilder)localObject1).toString());
          }
        }
        else
        {
          h = null;
        }
        paramS.close();
        return;
      }
    }
    
    private List<Certificate> a(f.e paramE)
    {
      int n = c.a(paramE);
      if (n == -1) {
        return Collections.emptyList();
      }
      try
      {
        CertificateFactory localCertificateFactory = CertificateFactory.getInstance("X.509");
        ArrayList localArrayList = new ArrayList(n);
        int m = 0;
        while (m < n)
        {
          String str = paramE.f();
          f.c localC = new f.c();
          localC.a(f.f.a(str));
          localArrayList.add(localCertificateFactory.generateCertificate(localC.k()));
          m += 1;
        }
        return localArrayList;
      }
      catch (CertificateException paramE)
      {
        paramE = new IOException(paramE.getMessage());
      }
      for (;;)
      {
        throw paramE;
      }
    }
    
    private void a(f.d paramD, List<Certificate> paramList)
    {
      try
      {
        paramD.e(paramList.size()).writeByte(10);
        int m = 0;
        int n = paramList.size();
        while (m < n)
        {
          paramD.a(f.f.a(((Certificate)paramList.get(m)).getEncoded()).a()).writeByte(10);
          m += 1;
        }
        return;
      }
      catch (CertificateEncodingException paramD)
      {
        paramD = new IOException(paramD.getMessage());
      }
      for (;;)
      {
        throw paramD;
      }
    }
    
    private boolean a()
    {
      return a.startsWith("https://");
    }
    
    public a0 a(d.e paramE)
    {
      String str1 = g.a("Content-Type");
      String str2 = g.a("Content-Length");
      Object localObject = new y.a();
      ((y.a)localObject).b(a);
      ((y.a)localObject).a(c, null);
      ((y.a)localObject).a(b);
      localObject = ((y.a)localObject).a();
      a0.a localA = new a0.a();
      localA.a((y)localObject);
      localA.a(d);
      localA.a(e);
      localA.a(f);
      localA.a(g);
      localA.a(new c.c(paramE, str1, str2));
      localA.a(h);
      localA.b(i);
      localA.a(j);
      return localA.a();
    }
    
    public void a(d.c paramC)
    {
      paramC = l.a(paramC.a(0));
      paramC.a(a).writeByte(10);
      paramC.a(c).writeByte(10);
      paramC.e(b.b()).writeByte(10);
      int m = 0;
      int n = b.b();
      while (m < n)
      {
        paramC.a(b.a(m)).a(": ").a(b.b(m)).writeByte(10);
        m += 1;
      }
      paramC.a(new k(d, e, f).toString()).writeByte(10);
      paramC.e(g.b() + 2).writeByte(10);
      m = 0;
      n = g.b();
      while (m < n)
      {
        paramC.a(g.a(m)).a(": ").a(g.b(m)).writeByte(10);
        m += 1;
      }
      paramC.a(k).a(": ").e(i).writeByte(10);
      paramC.a(l).a(": ").e(j).writeByte(10);
      if (a())
      {
        paramC.writeByte(10);
        paramC.a(h.a().a()).writeByte(10);
        a(paramC, h.c());
        a(paramC, h.b());
        paramC.a(h.d().a()).writeByte(10);
      }
      paramC.close();
    }
    
    public boolean a(y paramY, a0 paramA0)
    {
      return (a.equals(paramY.g().toString())) && (c.equals(paramY.e())) && (e.f0.g.e.a(paramA0, b, paramY));
    }
  }
}
