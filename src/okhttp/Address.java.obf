package e;

import e.f0.c;
import java.net.Proxy;
import java.net.ProxySelector;
import java.util.List;
import javax.net.SocketFactory;
import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.SSLSocketFactory;

public final class a
{
  final s a;
  final o b;
  final SocketFactory c;
  final b d;
  final List<w> e;
  final List<k> f;
  final ProxySelector g;
  final Proxy h;
  final SSLSocketFactory i;
  final HostnameVerifier j;
  final g k;
  
  public a(String paramString, int paramInt, o paramO, SocketFactory paramSocketFactory, SSLSocketFactory paramSSLSocketFactory, HostnameVerifier paramHostnameVerifier, g paramG, b paramB, Proxy paramProxy, List<w> paramList, List<k> paramList1, ProxySelector paramProxySelector)
  {
    s.a localA = new s.a();
    String str;
    if (paramSSLSocketFactory != null) {
      str = "https";
    } else {
      str = "http";
    }
    localA.d(str);
    localA.b(paramString);
    localA.a(paramInt);
    a = localA.a();
    if (paramO != null)
    {
      b = paramO;
      if (paramSocketFactory != null)
      {
        c = paramSocketFactory;
        if (paramB != null)
        {
          d = paramB;
          if (paramList != null)
          {
            e = c.a(paramList);
            if (paramList1 != null)
            {
              f = c.a(paramList1);
              if (paramProxySelector != null)
              {
                g = paramProxySelector;
                h = paramProxy;
                i = paramSSLSocketFactory;
                j = paramHostnameVerifier;
                k = paramG;
                return;
              }
              throw new NullPointerException("proxySelector == null");
            }
            throw new NullPointerException("connectionSpecs == null");
          }
          throw new NullPointerException("protocols == null");
        }
        throw new NullPointerException("proxyAuthenticator == null");
      }
      throw new NullPointerException("socketFactory == null");
    }
    throw new NullPointerException("dns == null");
  }
  
  public g a()
  {
    return k;
  }
  
  boolean a(a paramA)
  {
    return (b.equals(b)) && (d.equals(d)) && (e.equals(e)) && (f.equals(f)) && (g.equals(g)) && (c.a(h, h)) && (c.a(i, i)) && (c.a(j, j)) && (c.a(k, k)) && (k().j() == paramA.k().j());
  }
  
  public List<k> b()
  {
    return f;
  }
  
  public o c()
  {
    return b;
  }
  
  public HostnameVerifier d()
  {
    return j;
  }
  
  public List<w> e()
  {
    return e;
  }
  
  public boolean equals(Object paramObject)
  {
    return ((paramObject instanceof a)) && (a.equals(a)) && (a((a)paramObject));
  }
  
  public Proxy f()
  {
    return h;
  }
  
  public b g()
  {
    return d;
  }
  
  public ProxySelector h()
  {
    return g;
  }
  
  public int hashCode()
  {
    int i3 = a.hashCode();
    int i4 = b.hashCode();
    int i5 = d.hashCode();
    int i6 = e.hashCode();
    int i7 = f.hashCode();
    int i8 = g.hashCode();
    Object localObject = h;
    int i2 = 0;
    int m;
    if (localObject != null) {
      m = ((Proxy)localObject).hashCode();
    } else {
      m = 0;
    }
    localObject = i;
    int n;
    if (localObject != null) {
      n = localObject.hashCode();
    } else {
      n = 0;
    }
    localObject = j;
    int i1;
    if (localObject != null) {
      i1 = localObject.hashCode();
    } else {
      i1 = 0;
    }
    localObject = k;
    if (localObject != null) {
      i2 = ((g)localObject).hashCode();
    }
    return (((((((((17 * 31 + i3) * 31 + i4) * 31 + i5) * 31 + i6) * 31 + i7) * 31 + i8) * 31 + m) * 31 + n) * 31 + i1) * 31 + i2;
  }
  
  public SocketFactory i()
  {
    return c;
  }
  
  public SSLSocketFactory j()
  {
    return i;
  }
  
  public s k()
  {
    return a;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("Address{");
    localStringBuilder.append(a.g());
    localStringBuilder.append(":");
    localStringBuilder = localStringBuilder.append(a.j());
    if (h != null)
    {
      localStringBuilder.append(", proxy=");
      localStringBuilder.append(h);
    }
    else
    {
      localStringBuilder.append(", proxySelector=");
      localStringBuilder.append(g);
    }
    localStringBuilder.append("}");
    return localStringBuilder.toString();
  }
}
